import{_ as y,c as g,a,d as t,e as l,b as n,w as s,r as i,o as c}from"./app-Cp3LFcV5.js";const x={},o={style:{"text-align":"center"}},u={style:{"text-align":"center"}},m={style:{"text-align":"center"}};function p(b,e){const d=i("VPIcon"),r=i("Annotation");return c(),g("div",null,[e[181]||(e[181]=a('<h2 id="预设-molang-函数与变量" tabindex="-1"><a class="header-anchor" href="#预设-molang-函数与变量"><span>预设 molang 函数与变量</span></a></h2><p>你可以在下表中找到所有的预设函数与变量：</p><h3 id="math-部分" tabindex="-1"><a class="header-anchor" href="#math-部分"><span>math 部分</span></a></h3><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>math.pi</code></td><td style="text-align:center;">π，常量</td><td style="text-align:center;">固定为：<code>3.14159265358979</code></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.e</code></td><td style="text-align:center;">⾃然对数，常量</td><td style="text-align:center;">固定为：<code>2.71828182845904</code></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.floor(value)</code></td><td style="text-align:center;">向下取整</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.round(value)</code></td><td style="text-align:center;">数字四舍五入取整</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.ceil(value)</code></td><td style="text-align:center;">数字的向上取整</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.trunc(value)</code></td><td style="text-align:center;">截短法取整，这种方式在处理负数时是向上取整</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.clamp(value, min, max)</code></td><td style="text-align:center;">把 value 限定在最小值和最大值之间</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.max(x, y)</code></td><td style="text-align:center;">返回 x 和 y 中的最大值</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.min(x, y)</code></td><td style="text-align:center;">返回 x 和 y 中的最小值</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.abs(value)</code></td><td style="text-align:center;">value 的绝对值</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.exp(value)</code></td><td style="text-align:center;">value 以 e 为底数的指数函数</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.ln(value)</code></td><td style="text-align:center;">value 以 e 为底数的对数函数</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.sqrt(value)</code></td><td style="text-align:center;">value 的平方根</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.mod(value, denominator)</code></td><td style="text-align:center;">value 除以 denominator 后的余数</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.pow(base, exponent)</code></td><td style="text-align:center;">返回 base 的 exponent 次幂</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.sin(value)</code></td><td style="text-align:center;">value 的正弦值</td><td style="text-align:center;">输入参数为角度</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.cos(value)</code></td><td style="text-align:center;">value 的余弦值</td><td style="text-align:center;">输入参数为角度</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.acos(value)</code></td><td style="text-align:center;">value 的反余弦值</td><td style="text-align:center;">输入的 value 区间是[-1,1]，返回数据为弧度值</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.asin(value)</code></td><td style="text-align:center;">value 的反正弦值</td><td style="text-align:center;">输入的 value 区间是[-1,1]，返回数据为弧度值</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.atan(value)</code></td><td style="text-align:center;">value 的反正切值</td><td style="text-align:center;">输入的value区间是[-∞,+∞]，返回数据为弧度值</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.atan2(y, x)</code></td><td style="text-align:center;">从原点 (0,0) 到 (x,y) 点的线段与 x 轴正方向之间的平面角度 (弧度值)</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.lerp(start, end, 0_to_1)</code></td><td style="text-align:center;">在 start 和 end 之间根据 0~1 取线性插值</td><td style="text-align:center;">等价于此公式：$start + (end - start)\\times 0_to_1 $</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.lerprotatee(start, end, 0_to_1)</code></td><td style="text-align:center;">作为角度，在 start 和 end 之间根据 0~1 取中间插值</td><td style="text-align:center;">超过 360 度时会回退回 0 度</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.random(low, high)</code></td><td style="text-align:center;">返回在最小值到最大值之间的随机数</td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.random_integer(low, high)</code></td><td style="text-align:center;">返回在最小值到最大值之间的随机<strong>整数</strong></td><td style="text-align:center;"></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.die_roll(num, low, high)</code></td><td style="text-align:center;">返回<code>num</code>个随机数的总和，每个值的范围从低到高</td><td style="text-align:center;">生成的随机数<strong>不是</strong>像普通骰子那样的整数。为此请使用 <code>math.die_roll_integer</code></td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.die_roll_integer(num, low, high)</code></td><td style="text-align:center;">返回<code>num</code>个随机整数的总和，每个整数的值从低到高。</td><td style="text-align:center;">生成的随机数是类似于正常骰子的整数</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.hermite_blend(value)</code></td><td style="text-align:center;">使用 Hermite 函数进行简单的平滑曲线插值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msup><mi>e</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mo>×</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msup><mi>e</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">3\\times value ^{2}-2\\times value^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center;">尽管任何有效的 float 都是有效的输入，但此功能在 [0,1] 范围内效果最佳</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.min_angle(value)</code></td><td style="text-align:center;">计算指定⻆度在 [-180, 180) 内的等效⻆度</td><td style="text-align:center;">如果输入的角度是转了很多圈之后的结果，这个函数就可以减去无用的圈数，直接输出 [-180, 180] 范围内的角度</td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>math.randomi(value)</code></td><td style="text-align:center;">与 math.random_integer 相同</td><td style="text-align:center;">非标准命名，仅用于兼容原 geckolib</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.roll(value)</code></td><td style="text-align:center;">与 math.die_roll 相同</td><td style="text-align:center;">非标准命名，仅用于兼容原 geckolib</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.rolli(value)</code></td><td style="text-align:center;">与 math.die_roll_integer 相同</td><td style="text-align:center;">非标准命名，仅用于兼容原 geckolib</td><td style="text-align:center;">1.1.5</td></tr><tr><td style="text-align:center;"><code>math.hermite(value)</code></td><td style="text-align:center;">与 math.hermite_blend 相同</td><td style="text-align:center;">非标准命名，仅用于兼容原 geckolib</td><td style="text-align:center;">1.1.5</td></tr></tbody></table><h3 id="query-部分" tabindex="-1"><a class="header-anchor" href="#query-部分"><span>query 部分</span></a></h3>',5)),t("table",null,[e[66]||(e[66]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"Molang"),t("th",{style:{"text-align":"center"}},"描述"),t("th",{style:{"text-align":"center"}},"备注"),t("th",{style:{"text-align":"center"}},"版本")])],-1)),t("tbody",null,[e[8]||(e[8]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.debug_output(arg1, arg2...)")]),t("td",{style:{"text-align":"center"}},"输出消息⾄聊天框"),t("td",{style:{"text-align":"center"}},"仅在动画调试模式下有效"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[9]||(e[9]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.biome_has_all_tags(tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家所处群系是否包含所有指定的群系标签"),t("td",{style:{"text-align":"center"}},[l("由于 1.16 版本没有群系标签，所以只能在 1.18 以上的版本可⽤;"),t("br"),l("可以使用用 "),t("code",null,"locate"),l(" 指令查看当前所处群系标签")]),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[10]||(e[10]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.biome_has_any_tag(tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家所处群系是否包含指定的群系标签中的任意⼀个"),t("td",{style:{"text-align":"center"}},[l("由于 1.16 版本没有群系标签，所以只能在 1.18 以上的版本可⽤;"),t("br"),l("可以使用用 "),t("code",null,"locate"),l(" 指令查看当前所处群系标签")]),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[11]||(e[11]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.relative_block_has_all_tags(xOffset, yOffset, zOffset, tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家附近某个⽅块是否包含所有指定的所有⽅块标签"),t("td",{style:{"text-align":"center"}},"前三个参数是以玩家下半身为中心点的，参数最大不得超过 8"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[12]||(e[12]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.relative_block_has_any_tag(xOffset, yOffset, zOffset, tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家附近某个⽅块是否包含指定的⽅块标签中的任意⼀个"),t("td",{style:{"text-align":"center"}},"前三个参数是以玩家下半身为中心点的，参数最大不得超过 8"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[13]||(e[13]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_item_name_any(slotType, id1, id2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家装备物品 id 是否为指定的物品 id 中的任意⼀个"),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[14]||(e[14]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.equipped_item_all_tags(slotType, tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家装备物品是否包含指定的所有物品标签"),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[15]||(e[15]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.equipped_item_any_tag(slotType, tag1, tag2...)")]),t("td",{style:{"text-align":"center"}},"判断玩家装备物品是否包含指定的物品标签中的任意⼀个"),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[16]||(e[16]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.position(value)")]),t("td",{style:{"text-align":"center"}},"返回实体所处的位置坐标（精确到小数点后 14 位）"),t("td",{style:{"text-align":"center"}},[t("code",null,"0"),l(": X 坐标"),t("br"),t("code",null,"1"),l(": Y 坐标"),t("br"),t("code",null,"2"),l(": Z 坐标")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[17]||(e[17]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.position_delta(value)")]),t("td",{style:{"text-align":"center"}},"返回实体的位置坐标⾃上次更新动画以来的差值，与帧率有关"),t("td",{style:{"text-align":"center"}},[t("code",null,"0"),l(": X 坐标"),t("br"),t("code",null,"1"),l(": Y 坐标"),t("br"),t("code",null,"2"),l(": Z 坐标")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[18]||(e[18]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.max_durability(slotType)")]),t("td",{style:{"text-align":"center"}},"返回指定槽位物品的最⼤耐久"),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[19]||(e[19]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.remaining_durability(slotType)")]),t("td",{style:{"text-align":"center"}},"返回指定槽位物品的剩余耐久"),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[20]||(e[20]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.actor_count")]),t("td",{style:{"text-align":"center"}},"返回已加载范围内的实体数量"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[21]||(e[21]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.anim_time")]),t("td",{style:{"text-align":"center"}},"当前动画播放时间（秒），如果动画未播放则为 0"),t("td",{style:{"text-align":"center"}},[l("是动画时间轴，输出单位是秒。"),t("br"),l("循环动画则是播放总时长，长度无限制")]),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[22]||(e[22]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.life_time")]),t("td",{style:{"text-align":"center"}},"当前动画播放了多久（秒），如果动画未播放则为 0"),t("td",{style:{"text-align":"center"}},"是动画生存时间，最大长度是当前动画长度"),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[23]||(e[23]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.all_animations_finished")]),t("td",{style:{"text-align":"center"}},"当前控制器内所有的动画都播放完毕了"),t("td",{style:{"text-align":"center"}},"仅能用于动画控制器内"),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[24]||(e[24]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.any_animation_finished")]),t("td",{style:{"text-align":"center"}},"当前控制器内任意一个动画播放完毕了"),t("td",{style:{"text-align":"center"}},"仅能用于动画控制器内"),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[25]||(e[25]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.head_x_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家头部 X 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[26]||(e[26]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.head_y_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家头部 Y 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[27]||(e[27]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.moon_phase")]),t("td",{style:{"text-align":"center"}},"返回当前⽉相（0-7）"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[28]||(e[28]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.time_of_day")]),t("td",{style:{"text-align":"center"}},"返回⼀天中的时间"),t("td",{style:{"text-align":"center"}},[l("午夜=0，⽇出=0.25"),t("br"),l("正午=0.5，⽇落=0.75")]),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[29]||(e[29]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.time_stamp")]),t("td",{style:{"text-align":"center"}},"返回当前所处世界的时间戳"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[30]||(e[30]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.yaw_speed")]),t("td",{style:{"text-align":"center"}},"返回实体 Y ⻆度旋转时的速度"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[31]||(e[31]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.cardinal_facing_2d")]),t("td",{style:{"text-align":"center"}},"返回玩家朝向"),t("td",{style:{"text-align":"center"}},"忽略上下朝向，北=2.0，南=3.0，西=4.0，东=5.0"),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[32]||(e[32]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.distance_from_camera")]),t("td",{style:{"text-align":"center"}},"返回玩家和镜头之间的距离"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[33]||(e[33]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.eye_target_x_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家视⻆ X 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[34]||(e[34]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.eye_target_y_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家视⻆ Y 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),t("tr",null,[t("td",o,[e[3]||(e[3]=t("code",null,"query.ground_speed",-1)),e[4]||(e[4]=l()),n(r,{label:"client",total:1},{"item-0":s(()=>[t("p",null,[n(d,{provider:"iconify",size:"36px",name:"fluent-color:warning-24"}),e[0]||(e[0]=l(" 此 molang 仅能在客户端使用 ",-1)),e[1]||(e[1]=t("br",null,null,-1)),e[2]||(e[2]=l(" 无法同步此数据到服务器其他玩家",-1))])]),_:1})]),e[5]||(e[5]=t("td",{style:{"text-align":"center"}},[l("返回玩家速度"),t("br"),l("该数值在服务端无法同步，需使用 "),t("code",null,"ysm.ground_speed")],-1)),e[6]||(e[6]=t("td",{style:{"text-align":"center"}},[l("该值没有负数值，即使人物后退也会输出正值，无法根据人物行进方向不同做出响应；"),t("br"),l("行走值大约为 1.7，跑动值大约为 3.2，飞行值为 20")],-1)),e[7]||(e[7]=t("td",{style:{"text-align":"center"}},"1.1.5",-1))]),e[35]||(e[35]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.modified_distance_moved")]),t("td",{style:{"text-align":"center"}},"玩家⽔平移动距离的总数（⽶）"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[36]||(e[36]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.vertical_speed")]),t("td",{style:{"text-align":"center"}},"返回玩家移动中垂直分量的速度（⽶/秒），朝上移动为正数"),t("td",{style:{"text-align":"center"}},[l("创造模式飞行：[-7.5,7.5]"),t("br"),l("高处掉落：[0,20]")]),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[37]||(e[37]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.walk_distance")]),t("td",{style:{"text-align":"center"}},"返回玩家步⾏移动距离的总数（⽶）"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[38]||(e[38]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.has_rider")]),t("td",{style:{"text-align":"center"}},"玩家被骑乘时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[39]||(e[39]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_first_person")]),t("td",{style:{"text-align":"center"}},"玩家处于第⼀⼈称视⻆时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[40]||(e[40]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_in_water")]),t("td",{style:{"text-align":"center"}},"玩家在⽔中时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[41]||(e[41]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_in_water_or_rain")]),t("td",{style:{"text-align":"center"}},"玩家在⽔中或⾬中时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[42]||(e[42]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_on_fire")]),t("td",{style:{"text-align":"center"}},"玩家着⽕时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[43]||(e[43]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_on_ground")]),t("td",{style:{"text-align":"center"}},"玩家在地⾯时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[44]||(e[44]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_riding")]),t("td",{style:{"text-align":"center"}},"玩家骑乘时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[45]||(e[45]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_sneaking")]),t("td",{style:{"text-align":"center"}},"玩家潜⾏时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[46]||(e[46]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_spectator")]),t("td",{style:{"text-align":"center"}},"玩家是观察者模式时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[47]||(e[47]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_sprinting")]),t("td",{style:{"text-align":"center"}},"玩家疾跑时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[48]||(e[48]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_swimming")]),t("td",{style:{"text-align":"center"}},"玩家游泳时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[49]||(e[49]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.body_x_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家⾝体 X 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[50]||(e[50]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.body_y_rotation")]),t("td",{style:{"text-align":"center"}},"返回玩家⾝体 Y 旋转⻆度，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[51]||(e[51]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.health")]),t("td",{style:{"text-align":"center"}},"返回玩家⾎量"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[52]||(e[52]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.max_health")]),t("td",{style:{"text-align":"center"}},"返回玩家最⼤⾎量"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[53]||(e[53]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.hurt_time")]),t("td",{style:{"text-align":"center"}},"玩家受伤计时，默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[54]||(e[54]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_eating")]),t("td",{style:{"text-align":"center"}},"玩家正在进⻝时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[55]||(e[55]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_playing_dead")]),t("td",{style:{"text-align":"center"}},"玩家濒死状态时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[56]||(e[56]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_sleeping")]),t("td",{style:{"text-align":"center"}},"玩家睡觉时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[57]||(e[57]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_using_item")]),t("td",{style:{"text-align":"center"}},"玩家正在使⽤物品时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[58]||(e[58]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.item_in_use_duration")]),t("td",{style:{"text-align":"center"}},"从 0 开始持续计数，直到该物品的最⼤可使⽤时⻓（秒），默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[59]||(e[59]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.item_max_use_duration")]),t("td",{style:{"text-align":"center"}},"所使⽤的物品的最⼤可使⽤时⻓（秒），默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[60]||(e[60]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.item_remaining_use_duration")]),t("td",{style:{"text-align":"center"}},"所使⽤的物品的剩余可使⽤时⻓（秒），默认为 0"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[61]||(e[61]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.equipment_count")]),t("td",{style:{"text-align":"center"}},"返回玩家装备的护甲数量（0-4），不考虑⼿持物品"),t("td",{style:{"text-align":"center"}},"整数，根据玩家护甲数量变动，最大为 4"),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[62]||(e[62]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.has_cape")]),t("td",{style:{"text-align":"center"}},"玩家有披⻛时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[63]||(e[63]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.cape_flap_amount")]),t("td",{style:{"text-align":"center"}},"返回披⻛飘起的程度，即使玩家没穿披⻛也有效"),t("td",{style:{"text-align":"center"}},[l("0 为完全垂下，1 完全飘起"),t("br"),l("返回数据非常奇怪，不推荐使用")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[64]||(e[64]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.player_level")]),t("td",{style:{"text-align":"center"}},"返回玩家等级"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[65]||(e[65]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"query.is_jumping")]),t("td",{style:{"text-align":"center"}},"玩家跳跃时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1))])]),e[182]||(e[182]=t("h3",{id:"ysm-实体部分",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#ysm-实体部分"},[t("span",null,"ysm 实体部分")])],-1)),t("table",null,[e[180]||(e[180]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"Molang"),t("th",{style:{"text-align":"center"}},"描述"),t("th",{style:{"text-align":"center"}},"备注"),t("th",{style:{"text-align":"center"}},"版本")])],-1)),t("tbody",null,[e[83]||(e[83]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dump_equipped_item(slotType)")]),t("td",{style:{"text-align":"center"}},[l("输出玩家已装备物品的信息⾄聊天框"),t("br"),l("仅在动画调试模式下有效")]),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[84]||(e[84]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dump_relative_block(xOffset, yOffset, zOffset)")]),t("td",{style:{"text-align":"center"}},[l("输出玩家附近某个⽅块的信息⾄聊天框"),t("br"),l("仅在动画调试模式下有效")]),t("td",{style:{"text-align":"center"}},"三个参数是以玩家下半身为中心点的，参数最大不得超过 8"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[85]||(e[85]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dump_mods")]),t("td",{style:{"text-align":"center"}},[l("输出已安装的模组信息⾄聊天框"),t("br"),l("仅在动画调试模式下有效")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[86]||(e[86]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dump_effects")]),t("td",{style:{"text-align":"center"}},[l("输出玩家附加的药⽔效果的信息⾄聊天框"),t("br"),l("仅在动画调试模式下有效")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[87]||(e[87]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dump_biome")]),t("td",{style:{"text-align":"center"}},[l("输出玩家所在群系的ID和标签到聊天框"),t("br"),l("仅在动画调试模式下有效")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[88]||(e[88]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.mod_version(modid)")]),t("td",{style:{"text-align":"center"}},"返回客⼾端安装的指定模组的版本"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[89]||(e[89]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.equipped_enchantment_level(slotType, id)")]),t("td",{style:{"text-align":"center"}},[l("返回玩家已装备物品的指定附魔等级"),t("br"),l("2.5.0 及之后该方法可以传递多个 "),t("code",null,"id"),l(" 参数，返回所有的等级之和")]),t("td",{style:{"text-align":"center"}},[l("slotType 参数有："),t("code",null,"chest"),l(),t("code",null,"feet"),l(),t("code",null,"head"),l(),t("code",null,"legs"),l(),t("code",null,"mainhand"),l(),t("code",null,"offhand")]),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[90]||(e[90]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.effect_level(id)")]),t("td",{style:{"text-align":"center"}},[l("返回玩家或箭⽮上附加的药⽔效果等级"),t("br"),l("2.5.0 及之后该方法可以传递多个 "),t("code",null,"id"),l(" 参数，返回所有的效果等级之和")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[91]||(e[91]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.relative_block_name(xOffset, yOffset, zOffset)")]),t("td",{style:{"text-align":"center"}},"返回玩家附近某个⽅块的 id"),t("td",{style:{"text-align":"center"}},"三个参数是以玩家下半身为中心点的，参数最大不得超过 8"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[92]||(e[92]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.head_yaw")]),t("td",{style:{"text-align":"center"}},"与 query.head_x_rotation 相同"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[93]||(e[93]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.head_pitch")]),t("td",{style:{"text-align":"center"}},"与 query.head_y_rotation 相同"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[94]||(e[94]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.weather")]),t("td",{style:{"text-align":"center"}},"返回当前天⽓"),t("td",{style:{"text-align":"center"}},"0：晴天，1：⾬或雪，2：雷⾬或暴雪"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[95]||(e[95]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.dimension_name")]),t("td",{style:{"text-align":"center"}},"返回当前维度 ID"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[96]||(e[96]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.fps")]),t("td",{style:{"text-align":"center"}},"返回游戏帧率"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[97]||(e[97]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.input_vertical")]),t("td",{style:{"text-align":"center"}},"获取玩家移动方向（前后）"),t("td",{style:{"text-align":"center"}},"前进时大于0，后退时小于0，静止不动时为 0"),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[98]||(e[98]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.input_horizontal")]),t("td",{style:{"text-align":"center"}},"获取玩家移动方向（左右）"),t("td",{style:{"text-align":"center"}},"向右移动时大于0，向左移动时小于0，静止不动时为 0"),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[99]||(e[99]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.person_view")]),t("td",{style:{"text-align":"center"}},"返回当前模型所处人称视角"),t("td",{style:{"text-align":"center"}},[l("第一人称：0，第三人称背面：1，第三人称正面：2；"),t("br"),l("应该能兼容越肩视角？")]),t("td",{style:{"text-align":"center"}},"2.3.1")],-1)),e[100]||(e[100]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_passenger")]),t("td",{style:{"text-align":"center"}},"与 query.is_riding 相同"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[101]||(e[101]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_sleep")]),t("td",{style:{"text-align":"center"}},"与 query.is_sleeping 相同"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[102]||(e[102]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_sneak")]),t("td",{style:{"text-align":"center"}},"与 query.is_sneaking 相同"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[103]||(e[103]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.biome_category")]),t("td",{style:{"text-align":"center"}},"获取玩家所处群系的类别"),t("td",{style:{"text-align":"center"}},"仅在 1.16.5 和 1.18.2 可以使⽤"),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[104]||(e[104]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_open_air")]),t("td",{style:{"text-align":"center"}},"判断玩家是否处于露天区域"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[105]||(e[105]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.eye_in_water")]),t("td",{style:{"text-align":"center"}},"判断眼部是否在⽔下，⽤来判断玩家是否完全浸⼊⽔中"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[106]||(e[106]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.frozen_ticks")]),t("td",{style:{"text-align":"center"}},"当玩家与细雪接触时，此数值每刻增加 1 ，最大 140。不接触时每刻减少 2，直到归零"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[107]||(e[107]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.air_supply")]),t("td",{style:{"text-align":"center"}},"空⽓值，最⼤ 300"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[108]||(e[108]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_helmet")]),t("td",{style:{"text-align":"center"}},"玩家穿戴头盔时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[109]||(e[109]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_chest_plate")]),t("td",{style:{"text-align":"center"}},"玩家穿戴胸甲时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[110]||(e[110]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_leggings")]),t("td",{style:{"text-align":"center"}},"玩家穿戴护腿时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[111]||(e[111]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_boots")]),t("td",{style:{"text-align":"center"}},"玩家穿戴靴⼦时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[112]||(e[112]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_mainhand")]),t("td",{style:{"text-align":"center"}},"玩家主⼿持有物品时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[113]||(e[113]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_offhand")]),t("td",{style:{"text-align":"center"}},"玩家副⼿持有物品时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[114]||(e[114]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_elytra")]),t("td",{style:{"text-align":"center"}},"玩家穿戴鞘翅时返回 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[115]||(e[115]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_riptide")]),t("td",{style:{"text-align":"center"}},"玩家处于激流状态时为 true，否则为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[116]||(e[116]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.armor_value")]),t("td",{style:{"text-align":"center"}},"返回玩家护甲值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[117]||(e[117]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_close_eyes")]),t("td",{style:{"text-align":"center"}},"默认为 false，当玩家需要眨眼返回 true"),t("td",{style:{"text-align":"center"}},"眨眼频率大约在 4 秒左右。睡觉时也会返回 true"),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[118]||(e[118]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.rendering_in_inventory")]),t("td",{style:{"text-align":"center"}},[l("判断模型是否在 GUI 中渲染（例如：模型选择界面）"),t("br"),l("当模型在这些地方渲染时返回 true")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[119]||(e[119]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.rendering_in_paperdoll")]),t("td",{style:{"text-align":"center"}},"判断模型是否在纸娃娃中渲染"),t("td",{style:{"text-align":"center"}},"纸娃娃指的就是左上角那个额外玩家渲染"),t("td",{style:{"text-align":"center"}},"2.3.1")],-1)),e[120]||(e[120]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.on_ladder")]),t("td",{style:{"text-align":"center"}},"布尔值，⽤来判断实体是否在梯⼦上"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[121]||(e[121]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.ladder_facing")]),t("td",{style:{"text-align":"center"}},"实体所爬的梯⼦朝向"),t("td",{style:{"text-align":"center"}},"输出数字 0-3，分别对应：南-西-北-东"),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[122]||(e[122]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.arrow_count")]),t("td",{style:{"text-align":"center"}},"玩家插在⾝上的箭的数量"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[123]||(e[123]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.stinger_count")]),t("td",{style:{"text-align":"center"}},"玩家插在⾝上的蜜蜂的毒刺的数量"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[124]||(e[124]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.texture_name")]),t("td",{style:{"text-align":"center"}},"返回玩家正在使⽤的材质名称（含扩展名）"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.2.0")],-1)),e[125]||(e[125]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.elytra_rot_x")]),t("td",{style:{"text-align":"center"}},"返回玩家鞘翅的 X 旋转⻆度"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[126]||(e[126]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.elytra_rot_y")]),t("td",{style:{"text-align":"center"}},"返回玩家鞘翅的 Y 旋转⻆度"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[127]||(e[127]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.elytra_rot_z")]),t("td",{style:{"text-align":"center"}},"返回玩家鞘翅的 Z 旋转⻆度"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[128]||(e[128]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.food_level")]),t("td",{style:{"text-align":"center"}},"返回玩家饱食度"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[129]||(e[129]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.first_person_mod_hide")]),t("td",{style:{"text-align":"center"}},"当玩家安装更真实的第一人称模型模组，且需要隐藏玩家头部时为 true，否者为 false"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"1.1.5")],-1)),e[130]||(e[130]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_left_shoulder_parrot")]),t("td",{style:{"text-align":"center"}},"判断玩家左肩是否有鹦鹉停靠"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[131]||(e[131]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.has_right_shoulder_parrot")]),t("td",{style:{"text-align":"center"}},"判断玩家右肩是否有鹦鹉停靠"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[132]||(e[132]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.left_shoulder_parrot_variant")]),t("td",{style:{"text-align":"center"}},"返回玩家左肩的鹦鹉变种"),t("td",{style:{"text-align":"center"}},"1.19 及以前版本没有字符串形式的鹦鹉颜色变种，故此变量仅能用于 1.20 及以后版本"),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[133]||(e[133]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.right_shoulder_parrot_variant")]),t("td",{style:{"text-align":"center"}},"返回玩家右肩的鹦鹉变种"),t("td",{style:{"text-align":"center"}},"1.19 及以前版本没有字符串形式的鹦鹉颜色变种，故此变量仅能用于 1.20 及以后版本"),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[134]||(e[134]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.attack_damage")]),t("td",{style:{"text-align":"center"}},"玩家的攻击伤害，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[135]||(e[135]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.attack_speed")]),t("td",{style:{"text-align":"center"}},"玩家的攻击速度，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[136]||(e[136]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.attack_knockback")]),t("td",{style:{"text-align":"center"}},"玩家的攻击击退效果，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[137]||(e[137]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.movement_speed")]),t("td",{style:{"text-align":"center"}},"玩家的基础移动加速度，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[138]||(e[138]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.knockback_resistance")]),t("td",{style:{"text-align":"center"}},"玩家的击退抗性，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[139]||(e[139]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.luck")]),t("td",{style:{"text-align":"center"}},"玩家的幸运值，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[140]||(e[140]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.block_reach")]),t("td",{style:{"text-align":"center"}},"玩家的方块触及距离，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[141]||(e[141]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.entity_reach")]),t("td",{style:{"text-align":"center"}},"玩家的实体触及距离，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[142]||(e[142]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.swim_speed")]),t("td",{style:{"text-align":"center"}},"玩家的游泳速度，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[143]||(e[143]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.entity_gravity")]),t("td",{style:{"text-align":"center"}},"玩家所受的重力，即下落加速度，继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[144]||(e[144]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.step_height_addition")]),t("td",{style:{"text-align":"center"}},"玩家不用跳跃可以直接走过的最大高度与玩家潜行时不会走下方块的最小高度差， 继承自玩家属性"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[145]||(e[145]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.nametag_distance")]),t("td",{style:{"text-align":"center"}},"命名牌的可见距离"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.1")],-1)),e[146]||(e[146]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.first_order(name, input, response)")]),t("td",{style:{"text-align":"center"}},"一阶系统函数"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[147]||(e[147]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.second_order(name, input, frequency, coefficient, response)")]),t("td",{style:{"text-align":"center"}},"二阶系统函数"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.3.0")],-1)),e[148]||(e[148]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_rot(name).x")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧X轴旋转值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[149]||(e[149]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_rot(name).y")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧Y轴旋转值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[150]||(e[150]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_rot(name).z")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧Z轴旋转值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[151]||(e[151]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pos(name).x")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型相对空间的X轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[152]||(e[152]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pos(name).y")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型相对空间的Y轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[153]||(e[153]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pos(name).z")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型相对空间的Z轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[154]||(e[154]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_scale(name).x")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧X轴缩放值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[155]||(e[155]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_scale(name).y")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧Y轴缩放值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[156]||(e[156]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_scale(name).z")]),t("td",{style:{"text-align":"center"}},"获取特定组名的上一帧Z轴缩放值"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[157]||(e[157]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pivot_abs(name).x")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型绝对空间的X轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[158]||(e[158]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pivot_abs(name).y")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型绝对空间的Y轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[159]||(e[159]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.bone_pivot_abs(name).z")]),t("td",{style:{"text-align":"center"}},"获取特定组名在模型绝对空间的Z轴位置"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.2.2")],-1)),e[160]||(e[160]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.entity_type")]),t("td",{style:{"text-align":"center"}},"返回当前渲染实体的类型，因为现在渲染不仅仅可以用于玩家"),t("td",{style:{"text-align":"center"}},[l("返回 "),t("code",null,"player"),l(" 或者 "),t("code",null,"maid")]),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[161]||(e[161]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_player")]),t("td",{style:{"text-align":"center"}},"当前渲染对象是否是玩家"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[162]||(e[162]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_maid")]),t("td",{style:{"text-align":"center"}},"当前渲染对象是否是女仆"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[163]||(e[163]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.particle('id', x, y, z, dx, dy, dz, speed, count, life_time)")]),t("td",{style:{"text-align":"center"}},[l("生成粒子，该函数参数和原版 "),t("code",null,"particle"),l(" 指令参数完全一致，仅仅多出了 "),t("code",null,"life_time"),l(" 参数")]),t("td",{style:{"text-align":"center"}},[l("可参考官方 wiki："),t("a",{href:"https://zh.minecraft.wiki/w/%E5%91%BD%E4%BB%A4/particle",target:"_blank",rel:"noopener noreferrer"},"粒子指令")]),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[164]||(e[164]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.abs_particle('id', x, y, z, dx, dy, dz, speed, count, life_time)")]),t("td",{style:{"text-align":"center"}},[l("生成粒子，该函数参数和原版 "),t("code",null,"particle"),l(" 指令参数完全一致，仅仅多出了 "),t("code",null,"life_time"),l(" 参数")]),t("td",{style:{"text-align":"center"}},"该函数生成的粒子不会随玩家朝向而改变位置，可以理解为绝对坐标生成粒子"),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[165]||(e[165]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.mainhand_charged_crossbow")]),t("td",{style:{"text-align":"center"}},"主手是否持有充能弩箭"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[166]||(e[166]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.offhand_charged_crossbow")]),t("td",{style:{"text-align":"center"}},"副手是否持有充能弩箭"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[167]||(e[167]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.is_fishing")]),t("td",{style:{"text-align":"center"}},"玩家是否在抛出鱼漂"),t("td",{style:{"text-align":"center"}},"也适用于女仆"),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[168]||(e[168]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.perlin_noise(seed, x, y, z)")]),t("td",{style:{"text-align":"center"}},"柏林噪声函数，返回一个 0-1 之间的浮点数"),t("td",{style:{"text-align":"center"}},[l("可以看看可汗学院的这个教程："),t("a",{href:"https://zh.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-noise/a/perlin-noise",target:"_blank",rel:"noopener noreferrer"},"柏林噪声")]),t("td",{style:{"text-align":"center"}},"2.4.0")],-1)),e[169]||(e[169]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.relative_block_name_any(xOffset, yOffset, zOffset, 'blockName1', 'blockName2'...)")]),t("td",{style:{"text-align":"center"}},[l("和 "),t("code",null,"ysm.relative_block_name"),l(" 类似，不过可以传入多个方块 ID 字符串。")]),t("td",{style:{"text-align":"center"}},"只要有一个 ID 匹配，即返回 true"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[170]||(e[170]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.in_shield_block_cooldown")]),t("td",{style:{"text-align":"center"}},"布尔值变量，当前是否处于盾牌成功格挡的冷却时间内"),t("td",{style:{"text-align":"center"}},"冷却时间持续 5 tick"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[171]||(e[171]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.xxa"),t("br"),t("code",null,"ysm.yya"),t("br"),t("code",null,"ysm.zza")]),t("td",{style:{"text-align":"center"}},"当玩家骑乘实体时，玩家按下前后左右键时，该变量分别有对应数值"),t("td",{style:{"text-align":"center"}},[l("前后为 "),t("code",null,"ysm.xxa"),t("br"),l("左右为 "),t("code",null,"ysm.yya"),t("br"),t("code",null,"ysm.zza"),l(" 不知何用，上下移动未见数值变化")]),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[172]||(e[172]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.play_sound('id', 'sound_name', boolean, volume, pitch)")]),t("td",{style:{"text-align":"center"}},[l("播放音频，"),t("code",null,"id"),l("为该音频的标识，"),t("code",null,"sound_name"),l(" 写法和音频关键帧动画里的写法一致。"),t("br"),t("code",null,"boolean"),l(" 为是否强制播放")]),t("td",{style:{"text-align":"center"}},"当设置为强制播放时，每次执行都会把先前同 ID 的音频停掉，然后重头播放。"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[173]||(e[173]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.stop_sound('id')")]),t("td",{style:{"text-align":"center"}},[l("停止音频，"),t("code",null,"id"),l("为该音频的标识")]),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[174]||(e[174]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.stop_all_sounds")]),t("td",{style:{"text-align":"center"}},"停止所有 molang 添加而播放的音频"),t("td",{style:{"text-align":"center"}},"该函数无参"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[175]||(e[175]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.block_light")]),t("td",{style:{"text-align":"center"}},"脚下方块亮度"),t("td",{style:{"text-align":"center"}},"0-15"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[176]||(e[176]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.sky_light")]),t("td",{style:{"text-align":"center"}},"脚下方块受到天空所贡献的亮度"),t("td",{style:{"text-align":"center"}},"0-15，完全露天为 15"),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),t("tr",null,[t("td",u,[e[70]||(e[70]=t("code",null,"ysm.mouse(keycode)",-1)),e[71]||(e[71]=l()),n(r,{label:"client",total:1},{"item-0":s(()=>[t("p",null,[n(d,{provider:"iconify",size:"36px",name:"fluent-color:warning-24"}),e[67]||(e[67]=l(" 此 molang 仅能在客户端使用 ",-1)),e[68]||(e[68]=t("br",null,null,-1)),e[69]||(e[69]=l(" 无法同步此数据到服务器其他玩家",-1))])]),_:1})]),e[72]||(e[72]=t("td",{style:{"text-align":"center"}},"检测鼠标按键情况",-1)),e[73]||(e[73]=t("td",{style:{"text-align":"center"}},[l("填入键码"),t("a",{href:"https://www.glfw.org/docs/latest/group__buttons.html",target:"_blank",rel:"noopener noreferrer"},"鼠标按键对应的数字")],-1)),e[74]||(e[74]=t("td",{style:{"text-align":"center"}},"2.5.0",-1))]),t("tr",null,[t("td",m,[e[78]||(e[78]=t("code",null,"ysm.keyboard(keycode1, keycode2, ...)",-1)),e[79]||(e[79]=l()),n(r,{label:"client",total:1},{"item-0":s(()=>[t("p",null,[n(d,{provider:"iconify",size:"36px",name:"fluent-color:warning-24"}),e[75]||(e[75]=l(" 此 molang 仅能在客户端使用 ",-1)),e[76]||(e[76]=t("br",null,null,-1)),e[77]||(e[77]=l(" 无法同步此数据到服务器其他玩家",-1))])]),_:1})]),e[80]||(e[80]=t("td",{style:{"text-align":"center"}},"检测键盘按键情况",-1)),e[81]||(e[81]=t("td",{style:{"text-align":"center"}},[l("填入键码"),t("a",{href:"https://www.glfw.org/docs/latest/group__keys.html",target:"_blank",rel:"noopener noreferrer"},"按键对应的数字"),l("。支持 1 至多个参数。"),t("br"),l("当写入多个参数时，只要有一个按键按下，则返回 true")],-1)),e[82]||(e[82]=t("td",{style:{"text-align":"center"}},"2.5.0",-1))]),e[177]||(e[177]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.time_delta")]),t("td",{style:{"text-align":"center"}},"两帧之间的时间间隔"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[178]||(e[178]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.sync(int1, int2, ...)")]),t("td",{style:{"text-align":"center"}},"主动向服务器同步数据，参考后续自定义函数篇章的说明"),t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"2.5.0")],-1)),e[179]||(e[179]=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("code",null,"ysm.ground_speed2")]),t("td",{style:{"text-align":"center"}},"返回玩家速度"),t("td",{style:{"text-align":"center"}},[l("该值和上面的 "),t("code",null,"query.ground_speed"),l(" 都是人物的速度。但是此值可以在服务端玩家之间同步"),t("br"),l("此方法返回数值和上面的变量有所不同，数值稍大")]),t("td",{style:{"text-align":"center"}},"2.5.1")],-1))])]),e[183]||(e[183]=a('<h3 id="ysm-弹射物相关" tabindex="-1"><a class="header-anchor" href="#ysm-弹射物相关"><span>ysm 弹射物相关</span></a></h3><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">适用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ysm.on_ground_time</code></td><td style="text-align:center;">箭矢掉在地上的时长（单位：刻）</td><td style="text-align:center;">游戏内箭矢会在落地后 1200 刻（60 秒）后消失<br>如果在此期间箭矢被移动则重置为 0</td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>ysm.in_ground</code></td><td style="text-align:center;">判断箭⽮是否掉在地上</td><td style="text-align:center;"></td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>ysm.projectile_owner</code></td><td style="text-align:center;">返回发射该箭⽮的玩家实体</td><td style="text-align:center;">可以使⽤ “箭头表达式” 查询其属性<br><mark>目前存在内存泄漏问题，不推荐使用</mark></td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>ysm.delta_movement_length</code></td><td style="text-align:center;">获取箭⽮在两 tick 之间的位移⻓度，可以⽤来判断速度</td><td style="text-align:center;"></td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>ysm.is_spectral_arrow</code></td><td style="text-align:center;">判断箭⽮是否为光灵箭</td><td style="text-align:center;"></td><td style="text-align:center;">1.2.0</td></tr><tr><td style="text-align:center;"><code>ysm.shoot_item_id</code></td><td style="text-align:center;">射出此箭的物品 ID 是什么</td><td style="text-align:center;">可以用来区分普通弓和弩射出的箭</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ysm.throwable_item</code></td><td style="text-align:center;">物品类型投掷物的物品 ID</td><td style="text-align:center;"></td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.hooked_in</code></td><td style="text-align:center;">鱼钩勾住的实体 ID</td><td style="text-align:center;">不存在时为空字符串</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.is_biting</code></td><td style="text-align:center;">鱼钩是否咬钩</td><td style="text-align:center;">布尔值</td><td style="text-align:center;">2.5.0</td></tr></tbody></table><h3 id="ctrl-部分" tabindex="-1"><a class="header-anchor" href="#ctrl-部分"><span>Ctrl 部分</span></a></h3><p>这部分主要用于动画控制器</p><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">适用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ctrl.death</code></td><td style="text-align:center;">死亡时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.riptide</code></td><td style="text-align:center;">使用三叉戟，触发激流时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.sleep</code></td><td style="text-align:center;">睡觉时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.swim</code></td><td style="text-align:center;">游泳时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.climb</code></td><td style="text-align:center;">趴下并移动时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.climbing</code></td><td style="text-align:center;">趴下不移动时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.ladder_up</code></td><td style="text-align:center;">梯子上上爬时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.ladder_stillness</code></td><td style="text-align:center;">梯子上定住时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.ladder_down</code></td><td style="text-align:center;">梯子上下滑时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.fly</code></td><td style="text-align:center;">飞行时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.elytra_fly</code></td><td style="text-align:center;">鞘翅飞行时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.swim_stand</code></td><td style="text-align:center;">站立式游泳时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.attacked</code></td><td style="text-align:center;">被攻击时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.jump</code></td><td style="text-align:center;">跳跃时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.sneak</code></td><td style="text-align:center;">潜行移动时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.sneaking</code></td><td style="text-align:center;">潜行不移动时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.run</code></td><td style="text-align:center;">跑步时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.walk</code></td><td style="text-align:center;">行走时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.idle</code></td><td style="text-align:center;">待命时为 true</td><td style="text-align:center;"></td><td style="text-align:center;">2.3.1</td></tr><tr><td style="text-align:center;"><code>ctrl.hold(slotType, id)</code></td><td style="text-align:center;">用法：<code>ctrl.hold(&#39;mainhand&#39;, &#39;$minecraft:apple&#39;)</code></td><td style="text-align:center;">slotType 参数有：<code>mainhand</code> <code>offhand</code><br>第二个参数和原来动画命名有点类似，<code>$</code>物品ID，<code>#</code>物品tag，<code>:</code>特殊类别</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.swing(slotType, id)</code></td><td style="text-align:center;">用法：<code>ctrl.swing(&#39;offhand&#39;, &#39;#minecraft:axes&#39;)</code></td><td style="text-align:center;">slotType 参数有：<code>mainhand</code> <code>offhand</code><br>第二个参数和原来动画命名有点类似，<code>$</code>物品ID，<code>#</code>物品tag，<code>:</code>特殊类别</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.use(slotType, id)</code></td><td style="text-align:center;">用法：<code>ctrl.use(&#39;offhand&#39;, &#39;:eat&#39;)</code></td><td style="text-align:center;">slotType 参数有：<code>mainhand</code> <code>offhand</code><br>第二个参数和原来动画命名有点类似，<code>$</code>物品ID，<code>#</code>物品tag，<code>:</code>特殊类别</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.armor(slotType, id)</code></td><td style="text-align:center;">用法：<code>ctrl.armor(&#39;head&#39;, &#39;$minecraft:iron_helmet&#39;)</code><br>第一个参数有：feet, legs, chest, head</td><td style="text-align:center;">slotType 参数有：<code>chest</code> <code>feet</code> <code>head</code> <code>legs</code><br>第二个参数和原来动画命名有点类似，<code>$</code>物品ID，<code>#</code>物品tag，<code>:</code>特殊类别</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.ride(type, id)</code></td><td style="text-align:center;">用法：<code>ctrl.ride(&#39;vehicle&#39;, &#39;$minecraft:pig&#39;)</code><br><code>ctrl.ride(&#39;passenger&#39;, &#39;$minecraft:pig&#39;)</code></td><td style="text-align:center;">type 参数有：<code>vehicle</code> <code>passenger</code><br>第二个参数和原来动画命名有点类似，<code>$</code>物品ID，<code>#</code>物品tag，<code>:</code>特殊类别</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.carryon_type</code></td><td style="text-align:center;">玩家抱起的类型，有三种 <code>block</code> <code>entity</code> <code>player</code></td><td style="text-align:center;">返回字符串<br>如果没有抱起任何东西，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.carryon_is_princess</code></td><td style="text-align:center;">玩家是否<strong>被</strong>抱起</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.parcool_state</code></td><td style="text-align:center;">返回当前正在执行的跑酷动作</td><td style="text-align:center;">返回字符串<br>如果没有执行任何跑酷动作，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.swem_is_ride</code></td><td style="text-align:center;">玩家是否<strong>骑乘</strong> SWEM 的马</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.swem_state</code></td><td style="text-align:center;">玩家当前正在执行的马术动作</td><td style="text-align:center;">返回字符串<br>如果没有骑 SWEM 的马，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_hold_gun</code></td><td style="text-align:center;">玩家是否主手持 tacz 的枪械</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_gun_type</code></td><td style="text-align:center;">玩家当前持有的枪械类型（步枪、手枪那些分类）</td><td style="text-align:center;">返回字符串<br>如果没有持枪，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_gun_id</code></td><td style="text-align:center;">玩家当前持有的枪械 ID</td><td style="text-align:center;">返回字符串<br>如果没有持枪，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_is_fire</code></td><td style="text-align:center;">玩家是否正在开火</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_is_aim</code></td><td style="text-align:center;">玩家是否正在瞄准</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_is_reload</code></td><td style="text-align:center;">玩家是否正在重载弹药</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_is_melee</code></td><td style="text-align:center;">玩家是否正在近战（刺刀）</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.tac_is_draw</code></td><td style="text-align:center;">玩家是否正在切枪</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.slashblade_animation</code></td><td style="text-align:center;">玩家当前打出的剑技名称</td><td style="text-align:center;">返回字符串<br>如果没有打出任何剑技，返回空字符串</td><td style="text-align:center;">2.3.0</td></tr><tr><td style="text-align:center;"><code>ctrl.playing_extra_animation</code></td><td style="text-align:center;">玩家是否在播放轮盘动画</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ctrl.create_hanging_skyhook</code></td><td style="text-align:center;">玩家是否在机械动力悬链上</td><td style="text-align:center;">返回布尔值</td><td style="text-align:center;">2.5.0</td></tr></tbody></table><h3 id="脚本控制器" tabindex="-1"><a class="header-anchor" href="#脚本控制器"><span>脚本控制器</span></a></h3><p>这些 molang 仅用于后续自定义函数篇章的脚本控制器里</p><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">适用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ctrl.set_beginning_</code><br><code>transition_length(second)</code></td><td style="text-align:center;">仅用于脚本控制器，<br>用于设置当前控制器的动画混合时间</td><td style="text-align:center;">接受 1 个参数，为动画的混合时间，单位为秒</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ctrl.set_animation(animation, loop_type)</code></td><td style="text-align:center;">仅用于脚本控制器，用于播放指定动画</td><td style="text-align:center;">接受 1~2 个参数，第一个参数为动画名称，第二个参数可选，为动画循环类型。若不指定循环类型，则使用动画预设的循环类型</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.state_continue</code><br><code>ysm.state_stop</code><br><code>ysm.state_pause</code><br><code>ysm.state_bypass</code></td><td style="text-align:center;">常量，仅用于脚本控制器</td><td style="text-align:center;">详见自定义函数部分</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.reset</code></td><td style="text-align:center;">无参数</td><td style="text-align:center;">立刻重置动画控制器至初始状态。若有动画正在播放，会粗暴的中止而不会平滑过渡。此外，该函数还包含了<code>ctrl.indicate_reload</code>的作用</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.indicate_reload</code></td><td style="text-align:center;">重载动画</td><td style="text-align:center;">和 <code>ysm.reset</code> 有点像，但是用于 <code>play_once</code> 或 <code>hold_on_last_frame</code> 这样的动画之前调用，用来重置让其再次进行播放。</td><td style="text-align:center;">2.5.0</td></tr></tbody></table><h3 id="tlm-部分" tabindex="-1"><a class="header-anchor" href="#tlm-部分"><span>TLM 部分</span></a></h3><p>这部分 molang 一般只能用于女仆</p><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">适用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>tlm.is_begging</code></td><td style="text-align:center;">女仆处于祈求状态时为 true，否则为 false</td><td style="text-align:center;"></td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.is_sitting</code></td><td style="text-align:center;">女仆处于待命状态时为 true，否则为 false</td><td style="text-align:center;"></td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.has_backpack</code></td><td style="text-align:center;">女仆背有背包时为 true，否则为 false</td><td style="text-align:center;"></td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.favorability_point</code></td><td style="text-align:center;">女仆好感度点数</td><td style="text-align:center;">返回值：0-384</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.favorability_level</code></td><td style="text-align:center;">女仆好感度等级</td><td style="text-align:center;">返回值：0-384</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.task_id</code></td><td style="text-align:center;">女仆工作模式 id</td><td style="text-align:center;">是字符串</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.schedule</code></td><td style="text-align:center;">女仆工作日程</td><td style="text-align:center;">返回值：<code>day</code>、<code>night</code>、<code>all</code><br>分别对应：白班、夜班、全天</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.activity</code></td><td style="text-align:center;">女仆当前活动</td><td style="text-align:center;">返回值：<code>work</code>、<code>idle</code>、<code>reset</code><br>分别对应：上班、下班、睡觉</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.gomoku_win_count</code></td><td style="text-align:center;">女仆五子棋赢棋总回合数</td><td style="text-align:center;">目前仅记录了五子棋</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.gomoku_rank</code></td><td style="text-align:center;">女仆五子棋段位</td><td style="text-align:center;">1-4，<mark>没有 0</mark></td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.game_statue</code></td><td style="text-align:center;">棋局状态</td><td style="text-align:center;">返回值：<code>win</code>、<code>lost</code>或者空字符串</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.backpack_type</code></td><td style="text-align:center;">女仆背包 ID</td><td style="text-align:center;">女仆可以装备多种类型的背包</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.is_entity</code></td><td style="text-align:center;">渲染女仆实体</td><td style="text-align:center;">女仆可以被做成雕像、手办，这个变量就用来区分这几者</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.is_statue</code></td><td style="text-align:center;">渲染雕像</td><td style="text-align:center;">女仆可以被做成雕像、手办，这个变量就用来区分这几者</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.is_garage_kit</code></td><td style="text-align:center;">渲染手办</td><td style="text-align:center;">女仆可以被做成雕像、手办，这个变量就用来区分这几者</td><td style="text-align:center;">2.4.0</td></tr><tr><td style="text-align:center;"><code>tlm.show_item</code></td><td style="text-align:center;">女仆装饰槽位的物品 ID</td><td style="text-align:center;">女仆物品栏的最后一格会有特殊显示，这个就记录了物品栏最后一格的物品 ID</td><td style="text-align:center;">2.4.0</td></tr></tbody></table><h3 id="饰品部分" tabindex="-1"><a class="header-anchor" href="#饰品部分"><span>饰品部分</span></a></h3><p>这部分 molang 用于饰品 MOD 相关</p><table><thead><tr><th style="text-align:center;">Molang</th><th style="text-align:center;">描述</th><th style="text-align:center;">备注</th><th style="text-align:center;">适用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ysm.has_any_curios(type, name...)</code></td><td style="text-align:center;">判断指定饰品槽是否佩戴了指定的饰品中的任意一个<br>type 为饰品槽类型，name 为物品 id（支持任意数量，不止一个），下同</td><td style="text-align:center;">name 这个字段可以不填写，此时仅检测饰品槽是否为空</td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.has_any_curios_with_all_tags(type, tag...)</code></td><td style="text-align:center;">判断指定饰品槽是否佩戴了任意一个饰品有给定的<strong>所有</strong>标签</td><td style="text-align:center;">返回布尔值<br>注意函数名称结尾带有<code>s</code></td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.has_any_curios_with_any_tag(type, tag...)</code></td><td style="text-align:center;">判断指定饰品槽是否佩戴了任意一个饰品有给定的<strong>任意一个</strong>标签</td><td style="text-align:center;">返回布尔值<br>注意函数名称结尾不带 <code>s</code></td><td style="text-align:center;">2.5.0</td></tr><tr><td style="text-align:center;"><code>ysm.dump_curios</code></td><td style="text-align:center;">输出当前玩家佩戴的饰品信息。仅在动画调试模式下有效。</td><td style="text-align:center;">玩家当前穿戴饰品的所有信息</td><td style="text-align:center;">2.5.0</td></tr></tbody></table><h4 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h4><ul><li>forge/neoforge 端饰品模组为 Curios；</li><li>fabric 端饰品模组为 Trinkets；</li><li>两端的饰品槽类型（即 <code>type</code> 字段）不同，需要单独适配。</li></ul>',16))])}const v=y(x,[["render",p]]),k=JSON.parse('{"path":"/wiki/molang/ref/","title":"molang 参考表","lang":"zh-CN","frontmatter":{"title":"molang 参考表","createTime":"2025/01/28 15:51:15","permalink":"/wiki/molang/ref/","icon":"cil:book","author":"K螺诺亚","description":"预设 molang 函数与变量 你可以在下表中找到所有的预设函数与变量： math 部分 query 部分 ysm 实体部分 ysm 弹射物相关 Ctrl 部分 这部分主要用于动画控制器 脚本控制器 这些 molang 仅用于后续自定义函数篇章的脚本控制器里 TLM 部分 这部分 molang 一般只能用于女仆 饰品部分 这部分 molang 用于饰品...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"molang 参考表\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-05T09:09:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"K螺诺亚\\"}]}"],["meta",{"property":"og:url","content":"https://ysm.cfpa.team/wiki/molang/ref/"}],["meta",{"property":"og:site_name","content":"YSM 文档与教程"}],["meta",{"property":"og:title","content":"molang 参考表"}],["meta",{"property":"og:description","content":"预设 molang 函数与变量 你可以在下表中找到所有的预设函数与变量： math 部分 query 部分 ysm 实体部分 ysm 弹射物相关 Ctrl 部分 这部分主要用于动画控制器 脚本控制器 这些 molang 仅用于后续自定义函数篇章的脚本控制器里 TLM 部分 这部分 molang 一般只能用于女仆 饰品部分 这部分 molang 用于饰品..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-05T09:09:41.000Z"}],["meta",{"property":"article:author","content":"K螺诺亚"}],["meta",{"property":"article:modified_time","content":"2025-10-05T09:09:41.000Z"}]]},"readingTime":{"minutes":21.89,"words":6567},"git":{"createdTime":1738061882000,"updatedTime":1759655381000,"contributors":[{"name":"tartaric_acid","username":"","email":"baka943@qq.com","commits":11,"avatar":"https://gravatar.com/avatar/bd9574205994f1798c96f12ade0a302bb035133cad3e3046540d71244e5dc5c4?d=retro"},{"name":"KLuoNuoYa","username":"KLuoNuoYa","email":"153290281+KLuoNuoYa@users.noreply.github.com","commits":2,"avatar":"https://avatars.githubusercontent.com/KLuoNuoYa?v=4","url":"https://github.com/KLuoNuoYa"},{"name":"homewool","username":"homewool","email":"93774195+homewool@users.noreply.github.com","commits":3,"avatar":"https://avatars.githubusercontent.com/homewool?v=4","url":"https://github.com/homewool"}]},"autoDesc":true,"filePathRelative":"notes/wiki/molang/molang参考表.md","headers":[]}');export{v as comp,k as data};
