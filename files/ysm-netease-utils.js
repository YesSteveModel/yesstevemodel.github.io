"use strict";var path=require("path"),fs$1=require("fs"),require$$0=require("util"),require$$1=require("stream"),require$$1$1=require("zlib"),require$$0$1=require("assert"),require$$3=require("buffer"),type="module",name="ysm-netease-utils",version="1.1.7",min_blockbench_version="4.0.0",author="tartaric_acid",title="中国版 YSM 插件",description="适用于我的世界中国版 YSM 组件开发的插件",repository={type:"git",url:"https://github.com/TartaricAcid/YSM-Netease-Plugins"},license="All Rights Reserved",bugs={url:"https://github.com/TartaricAcid/YSM-Netease-Plugins/issues",email:"baka943@qq.com"},scripts={build:"rollup -c"},devDependencies={"@rollup/plugin-commonjs":"^26.0.1","@rollup/plugin-image":"^3.0.3","@rollup/plugin-json":"latest","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-terser":"^0.4.4","@types/node":"^22.5.4","blockbench-types":"^4.6.1",rollup:"^4.21.2","rollup-plugin-string":"^3.0.0","rollup-plugin-vue":"5.0.0","vue-template-compiler":"2.7.14"},dependencies$1={"@jimp/core":"^1.6.0","@jimp/js-png":"^1.6.0","@jimp/plugin-resize":"^1.6.0",json5:"^2.2.3"},PACKAGE={type:type,name:name,version:version,min_blockbench_version:min_blockbench_version,author:author,title:title,description:description,repository:repository,license:license,bugs:bugs,scripts:scripts,devDependencies:devDependencies,dependencies:dependencies$1},aboutHtml='<div>\r\n    <h3>YSM 模组官方团队声明：</h3>\r\n    <ul>\r\n        <li>此插件由 <code>Yes Steve Model</code> 官方团队制作，仅用于将 <code>Java</code> 版 <code>Yes Steve\r\n            Model</code> 模型转换为中国版 <code>Yes Steve Model</code> 组件附属包。\r\n        </li>\r\n        <li>此插件为免费使用插件，<strong style="color: red">不收取任何授权费</strong>。</li>\r\n        <li>此插件仅用于模型组件转换，任何由此产生的内容或后果<strong style="color: red">与本团队无关</strong>。\r\n        </li>\r\n        <li>你可以在\r\n            <a href="https://github.com/TartaricAcid/YSM-Netease-Plugins/issues" target="_blank" style="color: #1a8ee1">\r\n                https://github.com/TartaricAcid/YSM-Netease-Plugins/issues\r\n            </a>\r\n             反馈相关问题。\r\n        </li>\r\n    </ul>\r\n    <p>感谢大家的支持与理解！</p>\r\n    <p><strong>许可协议：All Rights Reserved</strong></p>\r\n</div>',Space_Separator=/[\u1680\u2000-\u200A\u202F\u205F\u3000]/,ID_Start=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/,ID_Continue=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,unicode={Space_Separator:Space_Separator,ID_Start:ID_Start,ID_Continue:ID_Continue},util$7={isSpaceSeparator:c=>"string"==typeof c&&unicode.Space_Separator.test(c),isIdStartChar:c=>"string"==typeof c&&(c>="a"&&c<="z"||c>="A"&&c<="Z"||"$"===c||"_"===c||unicode.ID_Start.test(c)),isIdContinueChar:c=>"string"==typeof c&&(c>="a"&&c<="z"||c>="A"&&c<="Z"||c>="0"&&c<="9"||"$"===c||"_"===c||"‌"===c||"‍"===c||unicode.ID_Continue.test(c)),isDigit:c=>"string"==typeof c&&/[0-9]/.test(c),isHexDigit:c=>"string"==typeof c&&/[0-9A-Fa-f]/.test(c)};let source,parseState,stack,pos,line,column,token,key,root;var parse$1=function(text,reviver){source=String(text),parseState="start",stack=[],pos=0,line=1,column=0,token=void 0,key=void 0,root=void 0;do{token=lex(),parseStates[parseState]()}while("eof"!==token.type);return"function"==typeof reviver?internalize({"":root},"",reviver):root};function internalize(holder,name,reviver){const value=holder[name];if(null!=value&&"object"==typeof value)if(Array.isArray(value))for(let i=0;i<value.length;i++){const key=String(i),replacement=internalize(value,key,reviver);void 0===replacement?delete value[key]:Object.defineProperty(value,key,{value:replacement,writable:!0,enumerable:!0,configurable:!0})}else for(const key in value){const replacement=internalize(value,key,reviver);void 0===replacement?delete value[key]:Object.defineProperty(value,key,{value:replacement,writable:!0,enumerable:!0,configurable:!0})}return reviver.call(holder,name,value)}let lexState,buffer,doubleQuote,sign,c;function lex(){for(lexState="default",buffer="",doubleQuote=!1,sign=1;;){c=peek();const token=lexStates[lexState]();if(token)return token}}function peek(){if(source[pos])return String.fromCodePoint(source.codePointAt(pos))}function read(){const c=peek();return"\n"===c?(line++,column=0):c?column+=c.length:column++,c&&(pos+=c.length),c}const lexStates={default(){switch(c){case"\t":case"\v":case"\f":case" ":case" ":case"\ufeff":case"\n":case"\r":case"\u2028":case"\u2029":return void read();case"/":return read(),void(lexState="comment");case void 0:return read(),newToken("eof")}if(!util$7.isSpaceSeparator(c))return lexStates[parseState]();read()},comment(){switch(c){case"*":return read(),void(lexState="multiLineComment");case"/":return read(),void(lexState="singleLineComment")}throw invalidChar(read())},multiLineComment(){switch(c){case"*":return read(),void(lexState="multiLineCommentAsterisk");case void 0:throw invalidChar(read())}read()},multiLineCommentAsterisk(){switch(c){case"*":return void read();case"/":return read(),void(lexState="default");case void 0:throw invalidChar(read())}read(),lexState="multiLineComment"},singleLineComment(){switch(c){case"\n":case"\r":case"\u2028":case"\u2029":return read(),void(lexState="default");case void 0:return read(),newToken("eof")}read()},value(){switch(c){case"{":case"[":return newToken("punctuator",read());case"n":return read(),literal("ull"),newToken("null",null);case"t":return read(),literal("rue"),newToken("boolean",!0);case"f":return read(),literal("alse"),newToken("boolean",!1);case"-":case"+":return"-"===read()&&(sign=-1),void(lexState="sign");case".":return buffer=read(),void(lexState="decimalPointLeading");case"0":return buffer=read(),void(lexState="zero");case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return buffer=read(),void(lexState="decimalInteger");case"I":return read(),literal("nfinity"),newToken("numeric",1/0);case"N":return read(),literal("aN"),newToken("numeric",NaN);case'"':case"'":return doubleQuote='"'===read(),buffer="",void(lexState="string")}throw invalidChar(read())},identifierNameStartEscape(){if("u"!==c)throw invalidChar(read());read();const u=unicodeEscape();switch(u){case"$":case"_":break;default:if(!util$7.isIdStartChar(u))throw invalidIdentifier()}buffer+=u,lexState="identifierName"},identifierName(){switch(c){case"$":case"_":case"‌":case"‍":return void(buffer+=read());case"\\":return read(),void(lexState="identifierNameEscape")}if(!util$7.isIdContinueChar(c))return newToken("identifier",buffer);buffer+=read()},identifierNameEscape(){if("u"!==c)throw invalidChar(read());read();const u=unicodeEscape();switch(u){case"$":case"_":case"‌":case"‍":break;default:if(!util$7.isIdContinueChar(u))throw invalidIdentifier()}buffer+=u,lexState="identifierName"},sign(){switch(c){case".":return buffer=read(),void(lexState="decimalPointLeading");case"0":return buffer=read(),void(lexState="zero");case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return buffer=read(),void(lexState="decimalInteger");case"I":return read(),literal("nfinity"),newToken("numeric",sign*(1/0));case"N":return read(),literal("aN"),newToken("numeric",NaN)}throw invalidChar(read())},zero(){switch(c){case".":return buffer+=read(),void(lexState="decimalPoint");case"e":case"E":return buffer+=read(),void(lexState="decimalExponent");case"x":case"X":return buffer+=read(),void(lexState="hexadecimal")}return newToken("numeric",0*sign)},decimalInteger(){switch(c){case".":return buffer+=read(),void(lexState="decimalPoint");case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}if(!util$7.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},decimalPointLeading(){if(util$7.isDigit(c))return buffer+=read(),void(lexState="decimalFraction");throw invalidChar(read())},decimalPoint(){switch(c){case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}return util$7.isDigit(c)?(buffer+=read(),void(lexState="decimalFraction")):newToken("numeric",sign*Number(buffer))},decimalFraction(){switch(c){case"e":case"E":return buffer+=read(),void(lexState="decimalExponent")}if(!util$7.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},decimalExponent(){switch(c){case"+":case"-":return buffer+=read(),void(lexState="decimalExponentSign")}if(util$7.isDigit(c))return buffer+=read(),void(lexState="decimalExponentInteger");throw invalidChar(read())},decimalExponentSign(){if(util$7.isDigit(c))return buffer+=read(),void(lexState="decimalExponentInteger");throw invalidChar(read())},decimalExponentInteger(){if(!util$7.isDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},hexadecimal(){if(util$7.isHexDigit(c))return buffer+=read(),void(lexState="hexadecimalInteger");throw invalidChar(read())},hexadecimalInteger(){if(!util$7.isHexDigit(c))return newToken("numeric",sign*Number(buffer));buffer+=read()},string(){switch(c){case"\\":return read(),void(buffer+=escape());case'"':return doubleQuote?(read(),newToken("string",buffer)):void(buffer+=read());case"'":return doubleQuote?void(buffer+=read()):(read(),newToken("string",buffer));case"\n":case"\r":throw invalidChar(read());case"\u2028":case"\u2029":separatorChar(c);break;case void 0:throw invalidChar(read())}buffer+=read()},start(){switch(c){case"{":case"[":return newToken("punctuator",read())}lexState="value"},beforePropertyName(){switch(c){case"$":case"_":return buffer=read(),void(lexState="identifierName");case"\\":return read(),void(lexState="identifierNameStartEscape");case"}":return newToken("punctuator",read());case'"':case"'":return doubleQuote='"'===read(),void(lexState="string")}if(util$7.isIdStartChar(c))return buffer+=read(),void(lexState="identifierName");throw invalidChar(read())},afterPropertyName(){if(":"===c)return newToken("punctuator",read());throw invalidChar(read())},beforePropertyValue(){lexState="value"},afterPropertyValue(){switch(c){case",":case"}":return newToken("punctuator",read())}throw invalidChar(read())},beforeArrayValue(){if("]"===c)return newToken("punctuator",read());lexState="value"},afterArrayValue(){switch(c){case",":case"]":return newToken("punctuator",read())}throw invalidChar(read())},end(){throw invalidChar(read())}};function newToken(type,value){return{type:type,value:value,line:line,column:column}}function literal(s){for(const c of s){if(peek()!==c)throw invalidChar(read());read()}}function escape(){switch(peek()){case"b":return read(),"\b";case"f":return read(),"\f";case"n":return read(),"\n";case"r":return read(),"\r";case"t":return read(),"\t";case"v":return read(),"\v";case"0":if(read(),util$7.isDigit(peek()))throw invalidChar(read());return"\0";case"x":return read(),hexEscape();case"u":return read(),unicodeEscape();case"\n":case"\u2028":case"\u2029":return read(),"";case"\r":return read(),"\n"===peek()&&read(),"";case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case void 0:throw invalidChar(read())}return read()}function hexEscape(){let buffer="",c=peek();if(!util$7.isHexDigit(c))throw invalidChar(read());if(buffer+=read(),c=peek(),!util$7.isHexDigit(c))throw invalidChar(read());return buffer+=read(),String.fromCodePoint(parseInt(buffer,16))}function unicodeEscape(){let buffer="",count=4;for(;count-- >0;){const c=peek();if(!util$7.isHexDigit(c))throw invalidChar(read());buffer+=read()}return String.fromCodePoint(parseInt(buffer,16))}const parseStates={start(){if("eof"===token.type)throw invalidEOF();push()},beforePropertyName(){switch(token.type){case"identifier":case"string":return key=token.value,void(parseState="afterPropertyName");case"punctuator":return void pop();case"eof":throw invalidEOF()}},afterPropertyName(){if("eof"===token.type)throw invalidEOF();parseState="beforePropertyValue"},beforePropertyValue(){if("eof"===token.type)throw invalidEOF();push()},beforeArrayValue(){if("eof"===token.type)throw invalidEOF();"punctuator"!==token.type||"]"!==token.value?push():pop()},afterPropertyValue(){if("eof"===token.type)throw invalidEOF();switch(token.value){case",":return void(parseState="beforePropertyName");case"}":pop()}},afterArrayValue(){if("eof"===token.type)throw invalidEOF();switch(token.value){case",":return void(parseState="beforeArrayValue");case"]":pop()}},end(){}};function push(){let value;switch(token.type){case"punctuator":switch(token.value){case"{":value={};break;case"[":value=[]}break;case"null":case"boolean":case"numeric":case"string":value=token.value}if(void 0===root)root=value;else{const parent=stack[stack.length-1];Array.isArray(parent)?parent.push(value):Object.defineProperty(parent,key,{value:value,writable:!0,enumerable:!0,configurable:!0})}if(null!==value&&"object"==typeof value)stack.push(value),parseState=Array.isArray(value)?"beforeArrayValue":"beforePropertyName";else{const current=stack[stack.length-1];parseState=null==current?"end":Array.isArray(current)?"afterArrayValue":"afterPropertyValue"}}function pop(){stack.pop();const current=stack[stack.length-1];parseState=null==current?"end":Array.isArray(current)?"afterArrayValue":"afterPropertyValue"}function invalidChar(c){return syntaxError(void 0===c?`JSON5: invalid end of input at ${line}:${column}`:`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)}function invalidEOF(){return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)}function invalidIdentifier(){return column-=5,syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)}function separatorChar(c){console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`)}function formatChar(c){const replacements={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};if(replacements[c])return replacements[c];if(c<" "){const hexString=c.charCodeAt(0).toString(16);return"\\x"+("00"+hexString).substring(hexString.length)}return c}function syntaxError(message){const err=new SyntaxError(message);return err.lineNumber=line,err.columnNumber=column,err}var stringify=function(value,replacer,space){const stack=[];let propertyList,replacerFunc,quote,indent="",gap="";if(null==replacer||"object"!=typeof replacer||Array.isArray(replacer)||(space=replacer.space,quote=replacer.quote,replacer=replacer.replacer),"function"==typeof replacer)replacerFunc=replacer;else if(Array.isArray(replacer)){propertyList=[];for(const v of replacer){let item;"string"==typeof v?item=v:("number"==typeof v||v instanceof String||v instanceof Number)&&(item=String(v)),void 0!==item&&propertyList.indexOf(item)<0&&propertyList.push(item)}}return space instanceof Number?space=Number(space):space instanceof String&&(space=String(space)),"number"==typeof space?space>0&&(space=Math.min(10,Math.floor(space)),gap="          ".substr(0,space)):"string"==typeof space&&(gap=space.substr(0,10)),serializeProperty("",{"":value});function serializeProperty(key,holder){let value=holder[key];switch(null!=value&&("function"==typeof value.toJSON5?value=value.toJSON5(key):"function"==typeof value.toJSON&&(value=value.toJSON(key))),replacerFunc&&(value=replacerFunc.call(holder,key,value)),value instanceof Number?value=Number(value):value instanceof String?value=String(value):value instanceof Boolean&&(value=value.valueOf()),value){case null:return"null";case!0:return"true";case!1:return"false"}return"string"==typeof value?quoteString(value):"number"==typeof value?String(value):"object"==typeof value?Array.isArray(value)?function(value){if(stack.indexOf(value)>=0)throw TypeError("Converting circular structure to JSON5");stack.push(value);let stepback=indent;indent+=gap;let final,partial=[];for(let i=0;i<value.length;i++){const propertyString=serializeProperty(String(i),value);partial.push(void 0!==propertyString?propertyString:"null")}if(0===partial.length)final="[]";else if(""===gap){final="["+partial.join(",")+"]"}else{let separator=",\n"+indent,properties=partial.join(separator);final="[\n"+indent+properties+",\n"+stepback+"]"}return stack.pop(),indent=stepback,final}(value):function(value){if(stack.indexOf(value)>=0)throw TypeError("Converting circular structure to JSON5");stack.push(value);let stepback=indent;indent+=gap;let final,keys=propertyList||Object.keys(value),partial=[];for(const key of keys){const propertyString=serializeProperty(key,value);if(void 0!==propertyString){let member=serializeKey(key)+":";""!==gap&&(member+=" "),member+=propertyString,partial.push(member)}}if(0===partial.length)final="{}";else{let properties;if(""===gap)properties=partial.join(","),final="{"+properties+"}";else{let separator=",\n"+indent;properties=partial.join(separator),final="{\n"+indent+properties+",\n"+stepback+"}"}}return stack.pop(),indent=stepback,final}(value):void 0}function quoteString(value){const quotes={"'":.1,'"':.2},replacements={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};let product="";for(let i=0;i<value.length;i++){const c=value[i];switch(c){case"'":case'"':quotes[c]++,product+=c;continue;case"\0":if(util$7.isDigit(value[i+1])){product+="\\x00";continue}}if(replacements[c])product+=replacements[c];else if(c<" "){let hexString=c.charCodeAt(0).toString(16);product+="\\x"+("00"+hexString).substring(hexString.length)}else product+=c}const quoteChar=quote||Object.keys(quotes).reduce(((a,b)=>quotes[a]<quotes[b]?a:b));return product=product.replace(new RegExp(quoteChar,"g"),replacements[quoteChar]),quoteChar+product+quoteChar}function serializeKey(key){if(0===key.length)return quoteString(key);const firstChar=String.fromCodePoint(key.codePointAt(0));if(!util$7.isIdStartChar(firstChar))return quoteString(key);for(let i=firstChar.length;i<key.length;i++)if(!util$7.isIdContinueChar(String.fromCodePoint(key.codePointAt(i))))return quoteString(key);return key}};const JSON5={parse:parse$1,stringify:stringify};var lib$2=JSON5,modules$1=[{description:"",type:"data",uuid:"",version:[0,0,1]}],header$1={description:"",name:"behavior_pack",uuid:"",version:[0,0,1],min_engine_version:[1,18,0]},dependencies=[],format_version$1=1,behaviorPackManifest={modules:modules$1,header:header$1,dependencies:dependencies,format_version:format_version$1},loaderClientPy='# -*- coding: utf-8 -*-\nimport mod.client.extraClientApi as clientApi\nfrom ...Util import errorPrint, TRY_EXEC_FUN, getObjectPathName\nfrom ...IN import RuntimeService\nfrom SharedRes import (\n    CallObjData,\n    EasyListener,\n    SERVER_CALL_EVENT,\n    CLIENT_CALL_EVENT,\n    NAMESPACE,\n    SYSTEMNAME\n)\nlambda: "By Zero123"\nClientSystem = clientApi.GetClientSystemCls()\nengineSpaceName, engineSystemName = clientApi.GetEngineNamespace(), clientApi.GetEngineSystemName()\n\ndef clientImportModule(filePath):\n    """ 客户端文件导入 """\n    return clientApi.ImportModule(filePath)\n\nclass LoaderSystem(ClientSystem, EasyListener):\n    """ QuMod加载器系统\n        加载器承担了系统文件的加载以及事件监听 系统通信\n    """\n    @staticmethod\n    def getSystem():\n        # type: () -> LoaderSystem\n        """ 获取加载器系统 如果未注册将会自动注册并返回 """\n        system = clientApi.GetSystem(NAMESPACE, SYSTEMNAME)\n        if system:\n            return system\n        return clientApi.RegisterSystem(NAMESPACE, SYSTEMNAME, LoaderSystem.__module__ + "." + LoaderSystem.__name__)\n\n    _REG_CALL_FUNCS = {}\n    _REG_STATIC_LISTEN_FUNCS = {}\n\n    @staticmethod\n    def REG_DESTROY_CALL_FUNC(func=lambda: None):\n        """ 适用于静态函数的注册销毁时回调 """\n        keyName = getObjectPathName(func)\n        if not keyName in LoaderSystem._REG_CALL_FUNCS:\n            # callFunc = lambda: LoaderSystem._REG_CALL_FUNCS[keyName]()\n            LoaderSystem.getSystem().addDestroyCall(func)\n        LoaderSystem._REG_CALL_FUNCS[keyName] = func\n    \n    @staticmethod\n    def REG_STATIC_LISTEN_FUNC(eventName="", funcObj=lambda: None):\n        """ 注册静态监听函数 """\n        keyName = getObjectPathName(funcObj)\n        if not keyName in LoaderSystem._REG_STATIC_LISTEN_FUNCS:\n            # callFunc = lambda *args: LoaderSystem._REG_STATIC_LISTEN_FUNCS[keyName](*args)\n            LoaderSystem.getSystem().nativeStaticListen(eventName, funcObj)\n        LoaderSystem._REG_STATIC_LISTEN_FUNCS[keyName] = funcObj\n    \n    def __init__(self, namespace, systemName):\n        ClientSystem.__init__(self, namespace, systemName)\n        EasyListener.__init__(self)\n        RuntimeService._clientStarting = True\n        self.namespace = namespace\n        self.systemName = systemName\n        self._systemList = RuntimeService._clientSystemList[::]\n        self._initState = False\n        self._regInitState = False\n        self._waitTime = 0.0\n        self._callQueue = []    # type: list[CallObjData]\n        self._onDestroyCall = []\n        self._onDestroyCall_LAST = []\n        """ 后置销毁触发 通常是内部使用确保在用户业务之后执行 """\n        self._initSystemListen()\n        self.systemInit()\n    \n    def _initSystemListen(self):\n        self.ListenForEvent(NAMESPACE, SYSTEMNAME, SERVER_CALL_EVENT, self, self._systemCallListener)\n\n    def _easyListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        return self.ListenForEvent(engineSpaceName, engineSystemName, eventName, parent, func)\n\n    def _easyUnListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        return self.UnListenForEvent(engineSpaceName, engineSystemName, eventName, parent, func)\n\n    def sendCall(self, apiName="", args=tuple(), kwargs=dict()):\n        """ 向服务器端请求调用 """\n        sendData = self._packageCallArgs(apiName, args, kwargs)\n        self.NotifyToServer(CLIENT_CALL_EVENT, sendData)\n\n    def addDestroyCall(self, funObj, doubleCheck=True):\n        """ 添加销毁触发 """\n        if doubleCheck and funObj in self._onDestroyCall:\n            return\n        self._onDestroyCall.append(funObj)\n\n    def removeDestroyCall(self, funObj):\n        """ 移除销毁触发 """\n        if funObj in self._onDestroyCall:\n            self._onDestroyCall.remove(funObj)\n    \n    def Destroy(self):\n        # 用户级destroy执行\n        for obj in self._onDestroyCall:\n            TRY_EXEC_FUN(obj)\n        self._onDestroyCall = []\n        # 高权限destroy执行\n        for obj in self._onDestroyCall_LAST:\n            TRY_EXEC_FUN(obj)\n        self._onDestroyCall_LAST = []\n        RuntimeService._clientStarting = False\n\n    def getSystemList(self):\n        # type: () -> list[tuple[str, str | None]]\n        return self._systemList\n\n    def removeCallObjByUid(self, _uid = ""):\n        """ 尝试移除特定uid的callObj 如果存在 """\n        for i, obj in enumerate(self._callQueue):\n            if obj._uid == _uid:\n                del self._callQueue[i]\n                break\n\n    def proxyRegister(self, funcObj):\n        """ 代理注册 """\n        from functools import wraps\n        @wraps(funcObj)\n        def newFun(*args, **kwargs):\n            callObj = CallObjData(funcObj, args, kwargs)\n            self._callQueue.append(callObj)\n            return callObj\n        return newFun\n    \n    def unsafeUpdate(self, callObjData):\n        # type: (CallObjData) -> bool\n        """ 不安全的强制刷新 """\n        if callObjData in self._callQueue:\n            self._callQueue.remove(callObjData)\n            callObjData.callObj(*callObjData.args, **callObjData.kwargs)\n            return True\n        return False\n\n    def Update(self):\n        self.regSystemInit()\n        if self._callQueue:\n            for obj in self._callQueue:\n                try:\n                    obj.callObj(*obj.args, **obj.kwargs)\n                except Exception as e:\n                    errorPrint("{} call执行异常 {}".format(obj.callObj, e))\n                    import traceback\n                    traceback.print_exc()\n            self._callQueue = []\n        return ClientSystem.Update(self)\n\n    def systemInit(self):\n        self._initState = True\n\n    def regSystemInit(self):\n        """ 系统信息注册初始化 """\n        if self._regInitState:\n            return\n        # 因历史原因systemName已废弃 此处仅兼容旧版项目\n        for path, _ in self._systemList:\n            sysObj = None\n            try:\n                sysObj = clientImportModule(path)\n                if sysObj == None:\n                    errorPrint("[客户端] 系统文件加载失败(API异常): {}".format(path))\n                    continue\n            except Exception as e:\n                errorPrint("[客户端] 系统文件错误: {} ({})".format(path, e))\n                import traceback\n                traceback.print_exc()\n                continue\n            # if not systemName: systemName = uuid4().hex\n        self._regInitState = True\n',loaderServerPy='# -*- coding: utf-8 -*-\nimport mod.server.extraServerApi as serverApi\nfrom ...Util import errorPrint, TRY_EXEC_FUN, getObjectPathName\nfrom ...IN import RuntimeService\nfrom SharedRes import (\n    CallObjData,\n    EasyListener,\n    SERVER_CALL_EVENT,\n    CLIENT_CALL_EVENT,\n    NAMESPACE,\n    SYSTEMNAME\n)\nlambda: "By Zero123"\nServerSystem = serverApi.GetServerSystemCls()\nengineSpaceName, engineSystemName = serverApi.GetEngineNamespace(), serverApi.GetEngineSystemName()\n\ndef serverImportModule(filePath):\n    """ 服务端文件导入 """\n    return serverApi.ImportModule(filePath)\n\nclass LoaderSystem(ServerSystem, EasyListener):\n    """ QuMod加载器系统\n        加载器承担了系统文件的加载以及事件监听 系统通信\n    """\n    @staticmethod\n    def getSystem():\n        # type: () -> LoaderSystem\n        """ 获取加载器系统 如果未注册将会自动注册并返回 """\n        system = serverApi.GetSystem(NAMESPACE, SYSTEMNAME)\n        if system:\n            return system\n        return serverApi.RegisterSystem(NAMESPACE, SYSTEMNAME, LoaderSystem.__module__ + "." + LoaderSystem.__name__)\n    \n    _REG_CALL_FUNCS = {}\n    _REG_STATIC_LISTEN_FUNCS = {}\n\n    @staticmethod\n    def REG_DESTROY_CALL_FUNC(func=lambda: None):\n        """ 适用于静态函数的注册销毁时回调 """\n        keyName = getObjectPathName(func)\n        if not keyName in LoaderSystem._REG_CALL_FUNCS:\n            # callFunc = lambda: LoaderSystem._REG_CALL_FUNCS[keyName]()\n            LoaderSystem.getSystem().addDestroyCall(func)\n        LoaderSystem._REG_CALL_FUNCS[keyName] = func\n    \n    @staticmethod\n    def REG_STATIC_LISTEN_FUNC(eventName="", funcObj=lambda: None):\n        """ 注册静态监听函数 """\n        keyName = getObjectPathName(funcObj)\n        if not keyName in LoaderSystem._REG_STATIC_LISTEN_FUNCS:\n            # callFunc = lambda *args: LoaderSystem._REG_STATIC_LISTEN_FUNCS[keyName](*args)\n            LoaderSystem.getSystem().nativeStaticListen(eventName, funcObj)\n        LoaderSystem._REG_STATIC_LISTEN_FUNCS[keyName] = funcObj\n    \n    def __init__(self, namespace, systemName):\n        ServerSystem.__init__(self, namespace, systemName)\n        EasyListener.__init__(self)\n        RuntimeService._serverStarting = True\n        self.namespace = namespace\n        self.systemName = systemName\n        self._systemList = RuntimeService._serverSystemList[::]\n        self._initState = False\n        self._regInitState = False\n        self._waitTime = 0.0\n        self._onDestroyCall = []\n        self._onDestroyCall_LAST = []\n        """ 后置销毁触发 通常是内部使用确保在用户业务之后执行 """\n        self._initSystemListen()\n        self.systemInit()\n    \n    def _initSystemListen(self):\n        self.ListenForEvent(NAMESPACE, SYSTEMNAME, CLIENT_CALL_EVENT, self, self._systemCallListener)\n    \n    def _easyListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        return self.ListenForEvent(engineSpaceName, engineSystemName, eventName, parent, func)\n\n    def _easyUnListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        return self.UnListenForEvent(engineSpaceName, engineSystemName, eventName, parent, func)\n    \n    def sendCall(self, playerId="", apiName="", args=tuple(), kwargs=dict()):\n        """ 向指定玩家客户端请求调用 当playerId声明为*时代表全体玩家 """\n        sendData = self._packageCallArgs(apiName, args, kwargs)\n        if playerId == "*":\n            self.BroadcastToAllClient(SERVER_CALL_EVENT, sendData)\n            return\n        self.NotifyToClient(playerId, SERVER_CALL_EVENT, sendData)\n    \n    def sendMultiClientsCall(self, playerListId=[], apiName="", args=tuple(), kwargs=dict()):\n        """ 批量向多个玩家客户端发包相同的调用数据 """\n        sendData = self._packageCallArgs(apiName, args, kwargs)\n        self.NotifyToMultiClients(playerListId, SERVER_CALL_EVENT, sendData)\n\n    def addDestroyCall(self, funObj, doubleCheck=True):\n        """ 添加销毁触发 """\n        if doubleCheck and funObj in self._onDestroyCall:\n            return\n        self._onDestroyCall.append(funObj)\n\n    def removeDestroyCall(self, funObj):\n        """ 移除销毁触发 """\n        if funObj in self._onDestroyCall:\n            self._onDestroyCall.remove(funObj)\n    \n    def Destroy(self):\n        # 用户级destroy执行\n        for obj in self._onDestroyCall:\n            TRY_EXEC_FUN(obj)\n        self._onDestroyCall = []\n        # 高权限destroy执行\n        for obj in self._onDestroyCall_LAST:\n            TRY_EXEC_FUN(obj)\n        self._onDestroyCall_LAST = []\n        RuntimeService._serverStarting = False\n\n    def getSystemList(self):\n        # type: () -> list[tuple[str, str | None]]\n        return self._systemList\n    \n    def removeCallObjByUid(self, _uid = ""):\n        """ 尝试移除特定uid的callObj 如果存在 """\n        for i, obj in enumerate(self._callQueue):\n            if obj._uid == _uid:\n                del self._callQueue[i]\n                break\n    \n    def proxyRegister(self, funcObj):\n        """ 代理注册 """\n        from functools import wraps\n        @wraps(funcObj)\n        def newFun(*args, **kwargs):\n            callObj = CallObjData(funcObj, args, kwargs)\n            self._callQueue.append(callObj)\n            return callObj\n        return newFun\n\n    def unsafeUpdate(self, callObjData):\n        # type: (CallObjData) -> bool\n        """ 不安全的强制刷新 """\n        if callObjData in self._callQueue:\n            self._callQueue.remove(callObjData)\n            callObjData.callObj(*callObjData.args, **callObjData.kwargs)\n            return True\n        return False\n\n    def Update(self):\n        self.regSystemInit()\n        if self._callQueue:\n            for obj in self._callQueue:\n                try:\n                    obj.callObj(*obj.args, **obj.kwargs)\n                except Exception as e:\n                    errorPrint("{} call执行异常 {}".format(obj.callObj, e))\n                    import traceback\n                    traceback.print_exc()\n            self._callQueue = []\n        return ServerSystem.Update(self)\n\n    def systemInit(self):\n        self._initState = True\n\n    def regSystemInit(self):\n        """ 系统信息注册初始化 """\n        if self._regInitState:\n            return\n        # 因历史原因systemName已废弃 此处仅兼容旧版项目\n        for path, _ in self._systemList:\n            sysObj = None\n            try:\n                sysObj = serverImportModule(path)\n                if sysObj == None:\n                    errorPrint("[服务端] 系统文件加载失败(API异常): {}".format(path))\n                    continue\n            except Exception as e:\n                errorPrint("[服务端] 系统文件错误: {} ({})".format(path, e))\n                import traceback\n                traceback.print_exc()\n                continue\n            # if not systemName: systemName = uuid4().hex\n        self._regInitState = True',loaderSharedResPy='# -*- coding: utf-8 -*-\nfrom uuid import uuid4\nfrom ...IN import ModDirName\nfrom ...Util import QStruct\n\nclass CallObjData:\n    def __init__(self, callObj, args = tuple(), kwargs = {}):\n        self.callObj = callObj\n        self.args = args\n        self.kwargs = kwargs\n        self._uid = None\n\nclass EmptyContext:\n    pass\n\nNAMESPACE = "Qu_" + ModDirName\nSYSTEMNAME = "{}_QLoader_system".format(ModDirName)\nSERVER_CALL_EVENT = "{}_QServer".format(ModDirName)\nCLIENT_CALL_EVENT = "{}_QClient".format(ModDirName)\n\nclass EasyListener:\n    def __init__(self):\n        self._callQueue = []    # type: list[CallObjData]\n        self._emptyContext = EmptyContext()\n        self._QCustomAPI = {}   # type: dict[str, object]\n    \n    def regCustomApi(self, apiName="", func=lambda: None):\n        """ 注册自定义API """\n        self._QCustomAPI[apiName] = func\n    \n    def removeCustomApi(self, apiName=""):\n        """ 删除指定API如果存在 """\n        if apiName in self._QCustomAPI:\n            del self._QCustomAPI[apiName]\n\n    def getCustomApi(self, apiName=""):\n        """ 获取自定义API如果存在 """\n        return self._QCustomAPI.get(apiName)\n    \n    def localCall(self, apiName="", *args, **kwargs):\n        """ 本地调用 请确保API函数存在注册 否则抛出异常 """\n        return self.getCustomApi(apiName)(*args, **kwargs)\n\n    def _systemCallListener(self, args={}):\n        """ 系统call机制监听器(接收消息处理) """\n        api = args["api"]\n        ag = EasyListener._unPackRefArgs(args["args"])\n        kwargs = EasyListener._unPackRefDictArgs(args["kw"])\n        return self.localCall(api, *ag, **kwargs)\n\n    @staticmethod\n    def _unPackRefArgs(data):\n        # type: (list) -> list\n        """ Ref解包Args数据 """\n        for i, v in enumerate(data):\n            if QStruct.isSignData(v):\n                data[i] = QStruct.loadSignData(v).onNetUnPack()\n        return data\n\n    @staticmethod\n    def _unPackRefDictArgs(data):\n        # type: (dict) -> dict\n        """ Ref解包Dict Args数据 """\n        for k, v in data.items():\n            if QStruct.isSignData(v):\n                data[k] = QStruct.loadSignData(v).onNetUnPack()\n        return data\n\n    @staticmethod\n    def _packArgs(data):\n        # type: (tuple | list) -> list\n        """ 打包Args数据 """\n        newDataList = []\n        for v in data:\n            if isinstance(v, QStruct):\n                newDataList.append(v.signDumps())\n                continue\n            newDataList.append(v)\n        return newDataList\n\n    @staticmethod\n    def _packDictArgs(data):\n        # type: (dict) -> dict\n        """ 打包Dict数据 keyName=xxx """\n        newDict = {}\n        for k, v in data.items():\n            if isinstance(v, QStruct):\n                newDict[k] = v.signDumps()\n                continue\n            newDict[k] = v\n        return newDict\n\n    def _packageCallArgs(self, apiName="", args=tuple(), kwargs=dict()):\n        """ 打包API参数(发送消息处理) """\n        return {"api":apiName,"args":EasyListener._packArgs(args),"kw":EasyListener._packDictArgs(kwargs)}\n\n    def mallocRandomMetName(self):\n        """ 动态分配随机方法名 """\n        randomName = ""\n        while not randomName or hasattr(self, randomName):\n            randomName = "Q_{}".format(uuid4().hex)\n        return randomName\n    \n    def _allocMethodWithOUTFunction(self, callFunc=lambda *_: None):\n        """ 基于外部函数分配一个映射的内部方法(介于网易Listen必须依赖内部方法 故有了该方法) """\n        newFuncName = self.mallocRandomMetName()\n        newFunc = lambda *args, **kwargs: callFunc(*args, **kwargs)\n        newFunc.__name__ = newFuncName\n        setattr(self, newFuncName, newFunc)\n        return newFunc\n    \n    def _delMethod(self, methodFunc=lambda *_: None):\n        """ 对照与_allocMethodWithOUTFunction的反向删除 """\n        try:\n            delattr(self, methodFunc.__name__)\n        except Exception:\n            pass\n    \n    def nativeStaticListen(self, eventName="", callFunc=lambda *_: None):\n        """ 原生静态监听注册 不支持运行时注销 """\n        def _reg():\n            self._easyListenForEvent(eventName, self, self._allocMethodWithOUTFunction(callFunc))\n        self._callQueue.append(CallObjData(_reg))\n    \n    def nativeListen(self, eventName="", parent=None, callFunc=lambda *_: None, updateNow=False):\n        # type: (str, object, object, bool) -> CallObjData | None\n        """ 原生动态监听 当updateNow声明为False时将会添加到系统队列安全的等待注册 """\n        if not parent:\n            parent = self._emptyContext\n        newFuncName = "QListen{}_{}".format(id(parent), callFunc.__name__)\n        newFunc = lambda *args: callFunc(*args)\n        newFunc.__name__ = newFuncName\n        if hasattr(self, newFuncName):\n            print("[Error] 请勿在单个可执行对象上监听重复的事件")\n            return None\n        def _reg():\n            setattr(self, newFuncName, newFunc)\n            self._easyListenForEvent(eventName, self, newFunc)\n        waitCallObj = CallObjData(_reg)\n        waitCallObj._uid = newFuncName\n        self._callQueue.append(waitCallObj)\n        if updateNow:\n            self.unsafeUpdate(waitCallObj)\n        return waitCallObj\n\n    def unNativeListen(self, eventName="", parent=None, callFunc=lambda *_: None):\n        # type: (str, object, object) -> None\n        """ 取消特定方法的原生动态监听 """\n        if not parent:\n            parent = self._emptyContext\n        newFuncName = "QListen{}_{}".format(id(parent), callFunc.__name__)\n        if hasattr(self, newFuncName):\n            # 已注册完毕的监听处理\n            self._easyUnListenForEvent(eventName, self, getattr(self, newFuncName))\n            delattr(self, newFuncName)\n            return\n        # 在队列中等待注册的监听处理\n        self.removeCallObjByUid(newFuncName)\n\n    def unsafeUpdate(self, callObjData):\n        # type: (CallObjData) -> bool\n        pass\n\n    def _easyListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        pass\n\n    def _easyUnListenForEvent(self, eventName="", parent=None, func=lambda: None):\n        pass\n\n    def removeCallObjByUid(self, _uid = ""):\n        pass',quClientPy='# -*- coding: utf-8 -*-\n# 客户端端基本功能模块 为减缓IO开销 常用的功能均放置在该文件 其他功能按需导入使用\nfrom Math import Vec3, Vec2, QBox3D\nfrom Util import (\n    Unknown,\n    InitOperation,\n    errorPrint,\n    _eventsRedirect,\n    ObjectConversion as __ObjectConversion\n)\nimport mod.client.extraClientApi as __extraClientApi\nimport IN as __IN\nfrom IN import ModDirName\nIsServerUser = __IN.IsServerUser\n""" 客户端常量_是否为房主 """\nclientApi = __extraClientApi\nTickEvent = "OnScriptTickClient"\nSystem = clientApi.GetSystem("Minecraft","game")\nlevelId = clientApi.GetLevelId()\nplayerId = clientApi.GetLocalPlayerId()\nEvents = _eventsRedirect\n\ndef creatTemporaryContainer():\n    return type("TemporaryContainer",(object,),{})()\n\ndef _getLoaderSystem():\n    """ 获取加载器系统 """\n    from Systems.Loader.Client import LoaderSystem\n    return LoaderSystem.getSystem()\n\n_loaderSystem = _getLoaderSystem()\n\ndef Request(Key, args=tuple(), kwargs={}, onResponse=lambda *_: None):\n    # type: (str, tuple, dict, object) -> bool\n    """ (未来可能移除 推荐使用服务类的安全请求机制)Request 向服务端发送请求, 与Call不同的是,这是双向的,可以取得返回值 """\n    from Util import RandomUid\n    backKey = RandomUid()\n    def _backFun(*_args, **_kwargs):\n        _loaderSystem.removeCustomApi(backKey)\n        return onResponse(*_args, **_kwargs)\n    _loaderSystem.regCustomApi(backKey, _backFun)\n    Call("__Client.Request__", playerId, Key, args, kwargs, backKey)\n    return True\n\ndef CallOTClient(playerId="", key="", *Args, **Kwargs):\n    # type: (str, str, object, object) -> bool\n    """ Call其他玩家的客户端 如: 发起组队申请 """\n    Call("__CALL.CLIENT__", playerId, key, Args, Kwargs)\n    return True\n\ndef ListenForEvent(eventName, parentObject=None, func=lambda: None):\n    # type: (str, object, object) -> object\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    return _loaderSystem.nativeListen(eventName, parentObject, func)\n\ndef UnListenForEvent(eventName, parentObject=None, func=lambda: None):\n    # type: (str, object, object) -> bool\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    return _loaderSystem.unNativeListen(eventName, parentObject, func)\n\ndef Listen(eventName):\n    """  [装饰器] 游戏事件监听 """\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    from Systems.Loader.Client import LoaderSystem\n    def _Listen(funObj):\n        LoaderSystem.REG_STATIC_LISTEN_FUNC(eventName, funObj)\n        return funObj\n    return _Listen\n\ndef DestroyFunc(func):\n    """ [装饰器] 注册销毁回调函数 """\n    from Systems.Loader.Client import LoaderSystem\n    LoaderSystem.REG_DESTROY_CALL_FUNC(func)\n    return func\n\ndef Call(apiKey="", *args, **kwargs):\n    # type: (str, object, object) -> None\n    """ Call请求服务端API调用 """\n    return _loaderSystem.sendCall(apiKey, args, kwargs)\n\ndef CallBackKey(key=""):\n    """ (向下兼容 未来可能移除)[装饰器] 用于给指定函数标记任意key值 以便被Call匹配 """\n    def _CallBackKey(fun):\n        _loaderSystem.regCustomApi(key, fun)\n        return fun\n    return _CallBackKey\n\ndef AllowCall(func):\n    """ 允许调用 同等于CallBackKey 自动以当前函数名字设置参数 """\n    key = func.__name__\n    key2 = "{}.{}".format(func.__module__, key)\n    key3 = key2.split(ModDirName+".", 1)[1]\n    _loaderSystem.regCustomApi(key, func)\n    _loaderSystem.regCustomApi(key2, func)\n    _loaderSystem.regCustomApi(key3, func)\n    return func\n\ndef LocalCall(funcName="", *args, **kwargs):\n    """ 本地调用 执行当前端@AllowCall|@CallBackKey("...")的方法 """\n    return _loaderSystem.localCall(funcName, *args, **kwargs)\n\nclass Entity(object):\n    __slots__ = ("entityId","PropertySettingsDic",)\n    ErrorSet = "[Error]: 不支持的属性设置"\n\n    class Type:\n        PLAYER = "minecraft:player"\n\n    class HealthComp(object):\n        """ 生命值组件 """\n        def __init__(self,entityId):\n            # type: (str) -> None\n            self.entityId = entityId\n            self.PropertySettingsDic = {}\n\n        def __setattr__(self, Name, Value):\n            """ 属性设置处理 """\n            if Name in Entity.__slots__:\n                return object.__setattr__(self, Name, Value)\n            elif Name in self.PropertySettingsDic:\n                Fun = self.PropertySettingsDic[Name]\n                return Fun(Value)\n            else:\n                print(Entity.ErrorSet)\n                return None\n            \n        @property\n        def Value(self):\n            # type: () -> int\n            comp = clientApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.GetAttrValue(0)\n        @property\n        def Max(self):\n            # type: () -> int\n            comp = clientApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.GetAttrMaxValue(0)\n\n    def __init__(self, entityId):\n        # type: (str) -> None\n        self.entityId = entityId\n        self.PropertySettingsDic = {}\n\n    def __setattr__(self, Name, Value):\n        """ 属性设置处理 """\n        if Name in Entity.__slots__:\n            return object.__setattr__(self, Name, Value)\n        elif Name in self.PropertySettingsDic:\n            Fun = self.PropertySettingsDic[Name]\n            return Fun(Value)\n        else:\n            print(Entity.ErrorSet)\n            return None\n\n    @property\n    def Health(self):\n        # type: () -> Entity.HealthComp\n        """ 实体生命值属性 """\n        return self.__class__.HealthComp(self.entityId)\n    \n    @property\n    def Pos(self):\n        # type: () -> tuple[float,float,float] | None\n        return clientApi.GetEngineCompFactory().CreatePos(self.entityId).GetPos()\n\n    @property\n    def Vec3Pos(self):\n        # type: () -> Vec3 | None\n        pos = self.Pos\n        if pos == None:\n            return None\n        return Vec3.tupleToVec(pos)\n\n    @property\n    def Vec3FootPos(self):\n        # type: () -> Vec3 | None\n        pos = self.FootPos\n        if pos == None:\n            return None\n        return Vec3.tupleToVec(pos)\n\n    @property\n    def FootPos(self):\n        # type: () -> tuple[float,float,float] | None\n        return clientApi.GetEngineCompFactory().CreatePos(self.entityId).GetFootPos()\n\n    @property\n    def Vec2Rot(self):\n        # type: () -> Vec2 | None\n        rot = self.Rot\n        if rot == None:\n            return None\n        return Vec2.tupleToVec(rot)\n\n    @property\n    def Rot(self):\n        # type: () -> tuple[float,float] | None\n        return clientApi.GetEngineCompFactory().CreateRot(self.entityId).GetRot()\n    \n    @property\n    def DirFromRot(self):\n        # type: () -> tuple[float,float,float] | None\n        return clientApi.GetDirFromRot(self.Rot)\n\n    @property\n    def Vec3DirFromRot(self):\n        # type: () -> Vec3 | None\n        rot = self.DirFromRot\n        if round == None:\n            return None\n        return Vec3.tupleToVec(rot)\n\n    def EntityPointDistance(self, otherEntity="", errorValue=0.0):\n        # type: (str, float) -> float\n        """ 获取与另外一个实体对应的脚部中心点距离(若实体异常将返回errorValue) """\n        myPos = clientApi.GetEngineCompFactory().CreatePos(self.entityId).GetPos()\n        otherPos = clientApi.GetEngineCompFactory().CreatePos(otherEntity).GetPos()\n        if myPos == None or otherPos == None:\n            return errorValue\n        return Vec3.tupleToVec(myPos).vectorSubtraction(Vec3.tupleToVec(otherPos)).getLength()\n\n    def SetRuntimeAttr(self, attrName, value):\n        """ 设置运行时属性数据(根据MOD隔离) """\n        comp = clientApi.GetEngineCompFactory().CreateModAttr(self.entityId)\n        return comp.SetAttr("{}_{}".format(ModDirName, attrName), value)\n\n    def GetRuntimeAttr(self, attrName, nullValue=None):\n        """ 获取运行时属性数据(根据MOD隔离) """\n        comp = clientApi.GetEngineCompFactory().CreateModAttr(self.entityId)\n        return comp.GetAttr("{}_{}".format(ModDirName, attrName), nullValue)\n\n    def getBox3D(self, useBodyRot=False):\n        # type: (bool) -> QBox3D\n        """ 获取该实体的三维空间盒对象 """\n        footPos = self.FootPos\n        if not footPos:\n            return QBox3D.createNullBox3D()\n        comp = clientApi.GetEngineCompFactory().CreateCollisionBox(self.entityId)\n        sx, sy = comp.GetSize()\n        x, y, z = footPos\n        return QBox3D(Vec3(sx, sy, sx), Vec3(x, y + sy * 0.5, z), None, rotationAngle = 0 if not useBodyRot else self.Rot[1])\n\n    @property\n    def Identifier(self):\n        # type: () -> str\n        return clientApi.GetEngineCompFactory().CreateEngineType(self.entityId).GetEngineTypeStr()\n    \n    def GetMoLang(self, Query):\n        # type: (str) -> float\n        """ 获取 实体节点(仅支持原版Molang) """\n        comp = clientApi.GetEngineCompFactory().CreateQueryVariable(self.entityId)\n        return comp.GetMolangValue(Query)\n    \n    def GetQuery(self, Query):\n        # type: (str) -> float\n        """ 获取实体Query节点 支持原版Molang和自定义Query """\n        if Query.lower().startswith("query.mod."):\n            return clientApi.GetEngineCompFactory().CreateQueryVariable(self.entityId).Get(Query)\n        else:\n            return self.GetMoLang(Query)\n    \n    def SetQuery(self, Query, Value):\n        # type: (str,float) -> bool\n        """ 设置实体Query节点 仅支持自定义Query """\n        comp = clientApi.GetEngineCompFactory().CreateQueryVariable(self.entityId)\n        return comp.Set(Query, Value)\n\n# ======= QuMod提供的一些基于原版API的组件 =======\n@CallBackKey("__DelCallBackKey__")\ndef __DelCallBackKey(key=""):\n    return _loaderSystem.removeCustomApi(key)\n\nclass QuObjectConversion(__ObjectConversion):\n    @staticmethod\n    def getClsWithPath(path):\n        # type: (str) -> object\n        lastPos = path.rfind(".")\n        impObj = clientApi.ImportModule((path[:lastPos]))\n        return getattr(impObj, path[lastPos+1:])\n\nclass QuDataStorage:\n    """ Qu数据储存管理 """\n    _versionKey = "__version__"\n    _dataKey = "__data__"\n    _isGlobal = "__isGlobal__"\n    _autoMap = {}   # type: dict[type, dict]\n    _init = False\n\n    @staticmethod\n    def formatStrType(typ):\n        # type: (str) -> str\n        """ 格式化字符串类型 """\n        if typ in ("float", "int"):\n            return "number"\n        elif typ in ("str", "unicode"):\n            return "baseString"\n        return typ\n\n    @staticmethod\n    def loadData(clsObj, data):\n        # type: (type, dict) -> None\n        """ 加载数据 """\n        for k, v in data.items():\n            try:\n                newObj = QuObjectConversion.loadDumpsObject(v)\n                oldType = QuDataStorage.formatStrType(QuObjectConversion.getType(getattr(clsObj, k)))\n                newType = QuDataStorage.formatStrType(QuObjectConversion.getType(newObj))\n                if oldType != newType:\n                    print("[QuDataStorage] 新旧数据类型不一已被放弃 (\'{}\' != \'{}\')".format(newType, oldType))\n                    continue\n                setattr(clsObj, k, newObj)\n            except Exception as e:\n                print(e)\n    \n    @staticmethod\n    def dumpsData(clsObj):\n        # type: (type) -> dict\n        """ 获取序列化数据 """\n        return {\n            k : QuObjectConversion.dumpsObject(getattr(clsObj, k)) for k in dir(clsObj) if not k.startswith("__")\n        }\n\n    @staticmethod\n    def AutoSave(version = 1, isGlobal = False):\n        """ 自动保存装饰器\n            @version 版本控制 当版本号不同时将会抛弃当前存档数据该用新版数据 一般用于大型数据变动\n            @isGlobal 是否为全局配置 False视为仅当前存档\n        """\n        if not QuDataStorage._init:\n            QuDataStorage._init = True\n            _loaderSystem._onDestroyCall_LAST.append(QuDataStorage.saveData)\n        def _autoSave(cls):\n            path = QuObjectConversion.getClsPathWithClass(cls)\n            comp = clientApi.GetEngineCompFactory().CreateConfigClient(clientApi.GetLevelId())\n            configDict = comp.GetConfigData(path, isGlobal)\n            if configDict == None:\n                configDict = {}\n            if configDict.get(QuDataStorage._versionKey, version) == version:\n                QuDataStorage.loadData(cls, configDict.get(QuDataStorage._dataKey, {}))\n            configDict[QuDataStorage._versionKey] = version\n            configDict[QuDataStorage._isGlobal] = isGlobal\n            if not path in QuDataStorage._autoMap:\n                QuDataStorage._autoMap[path] = configDict\n            return cls\n        return _autoSave\n    \n    @staticmethod\n    def saveData():\n        """ 保存存档数据 """\n        levelcomp = clientApi.GetEngineCompFactory().CreateConfigClient(levelId)\n        for k, v in QuDataStorage._autoMap.items():\n            try:\n                cls = QuObjectConversion.getClsWithPath(k)\n                v[QuDataStorage._dataKey] = QuDataStorage.dumpsData(cls)\n                levelcomp.SetConfigData(k, v, v.get(QuDataStorage._isGlobal, False))\n            except Exception as e:\n                print(e)\n\n@CallBackKey("__calls__")\ndef QUMOD_CLIENT_CALLS_(datLis):\n    # type: (list[tuple]) -> None\n    """ 内置的多callData处理请求 """\n    for key, args, kwargs in datLis:\n        try:\n            LocalCall(key, *args, **kwargs)\n        except Exception as e:\n            errorPrint("CALL发生异常 KEY值 \'{}\' >> {}".format(key, e))\n            import traceback\n            traceback.print_exc()\n\ndef EventHandler(key):\n    """ 注册EventHandler 可搭配QuPresteTool完成代码分析并建立关联 """\n    def _EventHandler(fun):\n        return fun\n    return _EventHandler\n\ndef Emit(eventHandler, *args, **kwargs):\n    """ 发送消息 执行特定eventHandler """\n    pass',quINPy='# -*- coding: utf-8 -*-\nfrom Util import SystemSide\nlambda: "By Zero123"\n\nIsServerUser = False\nModDirName = SystemSide.__module__.split(".")[0]\nQuModLibsPath = SystemSide.__module__[:SystemSide.__module__.rfind(".")]\n\nclass RuntimeService:\n    _serverSystemList = []\n    _clientSystemList = []\n    _serverStarting = False\n    _clientStarting = False\n    # THREAD ID\n    _serverThreadID = None\n    _clientThreadID = None\n\ndef getUnderlineModDirName():\n    # type: () -> str\n    """ 获取下划线MOD目录名称 返回结果与preset内置变量__LQuModName__一致 (仅支持ascii字符串) """\n    newStr = []     # type: list[int]\n    for i, _charStr in enumerate(ModDirName):\n        _char = ord(_charStr)\n        if (_char >= 65 and _char <= 90):\n            # 大写内容 进行处理\n            if i > 0:\n                newStr.append(ord("_"))\n            newStr.append(_char + (97 - 65))\n            continue\n        # 常规小写内容 直接追加\n        newStr.append(_char)\n    return "".join((chr(x) for x in newStr))\n\ndef GET_THREAD_ID():\n    """ 获取当前线程ID """\n    from threading import current_thread\n    return current_thread().ident\n\n# 线程环境检查需在modMain中调用START_THREAD_ANALYSIS启用分析\ndef IS_SERVER_THREAD():\n    """ 检查是不是服务端线程 """\n    return RuntimeService._serverThreadID != None and GET_THREAD_ID() == RuntimeService._serverThreadID\n\ndef IS_CLIENT_THREAD():\n    """ 检查是不是客户端线程 """\n    return RuntimeService._clientThreadID != None and GET_THREAD_ID() == RuntimeService._clientThreadID\n\ndef GET_THREAD_TYPE():\n    """ 获取线程类型 -1.主线程 0.服务端线程 1.客户端线程 """\n    tid = GET_THREAD_ID()\n    if tid == RuntimeService._serverThreadID:\n        return 0\n    elif tid == RuntimeService._clientThreadID:\n        return 1\n    return -1',quInformationPy='# -*- coding: utf-8 -*-\nTips = "此版本为阉割版！！！仅用于ysm附属包！！！删除大部分功能，仅用于避免定价过高"\n\n"""\n    # QuModLibs By Zero123(网易:游趣开发组) 别名:一灵 | h2v-wither123... BilBil-UID:456549011 | QQ:913702423\n    # 开源协议: BSD (适用于我们在Gitee/Github等渠道上公布的版本)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n \n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n"""\n',quMathPy='# -*- coding: utf-8 -*-\nimport math\nfrom Util import Math\nlambda: "By Zero123"\n\nclass Vec3(object):\n    """ QuMod Vec3向量类 用于描述坐标/向量\n        PS: Vec3的方法大多是自我操作并返回self的链式设计 如需产生新的对象请使用克隆方法\n    """\n    def __init__(self, x = 0.0, y = 0.0, z = 0.0):\n        self._disableUpdate = False\n        self._tuple = None      # type: tuple\n        self.x = float(x)\n        self.y = float(y)\n        self.z = float(z)\n        self._upDate()\n\n    def getTuple(self):\n        # type: () -> tuple[float, float, float]\n        """ 获取元组 """\n        return self._tuple\n    \n    def _upDate(self):\n        """ 刷新Tuple资源 """\n        self._tuple = (self.x, self.y, self.z)\n    \n    def __getitem__(self, index):\n        return self._tuple[index]\n\n    def __setitem__(self, index, value):\n        if index >= len(self):\n            raise Exception("索引错误 {} 无效的坐标系".format(index))\n        elif not (isinstance(value, int) or isinstance(value, float)):\n            raise Exception(str(value)+" 不是有效的数值")\n        setattr(self, chr(120 - index), value)\n        self._upDate()\n    \n    def __setattr__(self, __name, __value):\n        attrTuple = ("x", "y", "z")\n        if __name in attrTuple and all(hasattr(self, x) for x in attrTuple):\n            if not (isinstance(__value, int) or isinstance(__value, float)):\n                raise Exception(str(__value)+" 无效")\n            object.__setattr__(self, __name, __value)\n            if self._disableUpdate:\n                return\n            self._upDate()\n        return object.__setattr__(self, __name, __value)\n\n    def __len__(self):\n        return 3\n\n    def __str__(self):\n        return "<{} {}>".format(self.__class__.__name__, self._tuple.__str__())\n    \n    @staticmethod\n    def tupleToVec(tuple):\n        # type: (tuple[float | int]) -> Vec3\n        """ 将元组转换到Vec """\n        return Vec3(*tuple)\n\n    def copy(self):\n        # type: () -> Vec3\n        """ 拷贝一份新的Vec3对象 """\n        return Vec3(self.x, self.y, self.z)\n    \n    def getLength(self):\n        # type: () -> float\n        """ 获取向量的长度 """\n        return (self.x ** 2 + self.y ** 2 + self.z ** 2) ** 0.5\n    \n    def convertToUnitVector(self):\n        # type: () -> Vec3\n        """ 转换为单位向量 返回self """\n        length = self.getLength()\n        self._disableUpdate = True\n        self.x = self.x / length\n        self.y = self.y / length\n        self.z = self.z / length\n        self._disableUpdate = False\n        self._upDate()\n        return self\n\n    def addVec(self, nextVec3):\n        # type: (Vec3) -> Vec3\n        """ 向量加法运算 返回self """\n        self._disableUpdate = True\n        self.x += nextVec3.x\n        self.y += nextVec3.y\n        self.z += nextVec3.z\n        self._disableUpdate = False\n        self._upDate()\n        return self\n    \n    def vectorSubtraction(self, nextVec3):\n        # type: (Vec3) -> Vec3\n        """ 向量减法运算 返回self """\n        self._disableUpdate = True\n        self.x -= nextVec3.x\n        self.y -= nextVec3.y\n        self.z -= nextVec3.z\n        self._disableUpdate = False\n        self._upDate()\n        return self\n    \n    def addTuple(self, nextTuple):\n        # type: (tuple[float, float, float]) -> Vec3\n        """ 向量加法运算 使用元组 """\n        return self.addVec(Vec3.tupleToVec(nextTuple))\n\n    def multiplyOf(self, mutNumber):\n        # type: (int | float) -> Vec3\n        """ 向量乘法运算 返回self """\n        self._disableUpdate = True\n        self.x *= mutNumber\n        self.y *= mutNumber\n        self.z *= mutNumber\n        self._disableUpdate = False\n        self._upDate()\n        return self\n\n    def rotateVector(self, axis, angle):\n        # type: (Vec3, float) -> Vec3\n        """ 向量旋转\n            @axis: 旋转轴(单位向量)\n            @angle: 旋转角度(欧拉角)\n            @return: self\n        """\n        angleRad = math.radians(angle)\n        # 计算旋转矩阵分量\n        cosTheta = math.cos(angleRad)\n        sin_theta = math.sin(angleRad)\n        ux, uy, uz = axis.copy().convertToUnitVector()\n        vector = self\n        # 根据旋转公式计算旋转\n        self._disableUpdate = True\n        self.x = (cosTheta + (1 - cosTheta) * ux**2) * vector[0] + ((1 - cosTheta) * ux * uy - sin_theta * uz) * vector[1] + ((1 - cosTheta) * ux * uz + sin_theta * uy) * vector[2]\n        self.y = (cosTheta + (1 - cosTheta) * uy**2) * vector[1] + ((1 - cosTheta) * ux * uy + sin_theta * uz) * vector[0] + ((1 - cosTheta) * uy * uz - sin_theta * ux) * vector[2]\n        self.z = (cosTheta + (1 - cosTheta) * uz**2) * vector[2] + ((1 - cosTheta) * ux * uz - sin_theta * uy) * vector[0] + ((1 - cosTheta) * uy * uz + sin_theta * ux) * vector[1]\n        self._disableUpdate = False\n        self._upDate()\n        return self\n\n    # def rotate(self, axis, angle):\n    #     # type: (Vec3, float) -> Vec3\n    #     angle = math.radians(angle)\n    #     ux, uy, uz = axis.x, axis.y, axis.z\n    #     cos_theta = math.cos(angle)\n    #     sin_theta = math.sin(angle)\n    #     x, y, z = self.x, self.y, self.z\n    #     # Rotation matrix application\n    #     rotated_x = (cos_theta + (1 - cos_theta) * ux * ux) * x + ((1 - cos_theta) * ux * uy - uz * sin_theta) * y + ((1 - cos_theta) * ux * uz + uy * sin_theta) * z\n    #     rotated_y = ((1 - cos_theta) * uy * ux + uz * sin_theta) * x + (cos_theta + (1 - cos_theta) * uy * uy) * y + ((1 - cos_theta) * uy * uz - ux * sin_theta) * z\n    #     rotated_z = ((1 - cos_theta) * uz * ux - uy * sin_theta) * x + ((1 - cos_theta) * uz * uy + ux * sin_theta) * y + (cos_theta + (1 - cos_theta) * uz * uz) * z\n    #     return Vec3(rotated_x, rotated_y, rotated_z)\n\n    @staticmethod\n    def dot(vc1, vc2):\n        # type: (Vec3, Vec3) -> float\n        """ 点积运算 """\n        t1 = vc1.getTuple()\n        t2 = vc2.getTuple()\n        return sum(t1[i] * t2[i] for i in range(len(t1)))\n\n    def vecAngle(self, otherVec):\n        # type: (Vec3) -> float\n        """ 向量夹角运算 计算两个向量之间的夹角 """\n        dotValue = Vec3.dot(self, otherVec)\n        return math.acos(dotValue) * (180.0 / 3.1415926)\n\n    def scale(self, scalar):  \n        # type: (float) -> Vec3\n        """ 向量缩放 在当前向量所有轴上乘以一个对应的标量 """\n        self._disableUpdate = True\n        self.x *= scalar\n        self.y *= scalar\n        self.z *= scalar\n        self._disableUpdate = False\n        self._upDate()\n        return self\n\n    @staticmethod\n    def projectOn(withVec, otherVec):\n        # type: (Vec3, Vec3) -> Vec3\n        """ 计算投影向量 返回新的Vec3 """\n        projLength = Vec3.dot(withVec, otherVec) / otherVec.getLength() ** 2\n        return otherVec.copy().convertToUnitVector().scale(projLength)\n\nclass QBox3D:\n    """ 表示一个支持旋转的简易三维盒子 用于简单的碰撞测量计算 实现便捷索敌/物理计算 """\n    def __init__(self, boxSize, centerPos, rotationAxis=None, rotationAngle=0):\n        # type: (Vec3, Vec3, Vec3 | None, float) -> None\n        """\n            @boxSize: Vec3 - 描述盒子的xyz大小\n            @centerPos: Vec3 - 描述盒子的中心点位置\n            @rotationAxis: Vec3 | None - 描述旋转轴心 默认为y轴\n            @rotationAngle: float - 描述旋转角度(自动换算弧度)\n        """\n        self.center = centerPos\n        self.width = boxSize.x\n        self.height = boxSize.y\n        self.depth = boxSize.z\n        self.rotationAxis = rotationAxis or Vec3(0, 1, 0)  # 默认为绕y轴旋转\n        self.rotationAngle = rotationAngle\n        # 旋转之前的盒子角点\n        self.corners = self.getLocalCorners()\n    \n    def getScaleXYZ(self):\n        # type: () -> Vec3\n        """ 获取XYZ大小 """\n        return Vec3(self.width, self.height, self.depth)\n\n    def setScaleXYZ(self, newXYZ=Vec3(0, 0, 0)):\n        # type: (Vec3) -> None\n        """ 设置XYZ大小 """\n        self.width = newXYZ.x\n        self.height = newXYZ.y\n        self.depth = newXYZ.z\n\n    def setCenterPos(self, newXYZ=Vec3(0, 0, 0)):\n        # type: (Vec3) -> None\n        """ 设置中心位置 """\n        self.center = newXYZ\n\n    def getCenterPosRef(self):\n        # type: () -> Vec3\n        """ 获取中心位置的引用 """\n        return self.center\n\n    def setRot(self, rotationAngle=0, axis=None):\n        # type: (float, Vec3 | None) -> None\n        """ 设置旋转 当axis为None时保留当前旋转轴 """\n        if axis:\n            self.rotationAxis = axis\n        self.rotationAngle = rotationAngle\n        self.corners = self.getLocalCorners()\n\n    def xyzMaxLength(self):\n        # type: () -> float\n        """ 获取盒状XYZ轴最大长度轴的值 """\n        return max(self.width, self.height, self.depth)\n\n    @staticmethod\n    def createNullBox3D():\n        # type: () -> QBox3D\n        """ 创建空3D盒子对象 """\n        return QBox3D(Vec3(0.0, 0.0, 0.0), Vec3(0.0, 0.0, 0.0))\n\n    def getLocalCorners(self):\n        """ 获取盒子的8个角点（未旋转前）"""\n        halfWidth, halfHeight, halfDepth = self.width / 2.0, self.height / 2.0, self.depth / 2.0\n        corners = [\n            Vec3(halfWidth, halfHeight, halfDepth), Vec3(-halfWidth, halfHeight, halfDepth), \n            Vec3(-halfWidth, -halfHeight, halfDepth), Vec3(halfWidth, -halfHeight, halfDepth),\n            Vec3(halfWidth, halfHeight, -halfDepth), Vec3(-halfWidth, halfHeight, -halfDepth),\n            Vec3(-halfWidth, -halfHeight, -halfDepth), Vec3(halfWidth, -halfHeight, -halfDepth)\n        ]\n        return corners\n\n    def getWorldCorners(self):\n        # type: () -> list[Vec3]\n        """ 获取盒子在世界坐标系中的8个角点(旋转后) """\n        worldCorners = []\n        for corner in self.corners:\n            rotatedCorner = corner.copy().rotateVector(self.rotationAxis, self.rotationAngle)\n            # rotatedCorner = corner.rotate(self.rotationAxis, self.rotationAngle)\n            worldCorner = Vec3(self.center.x + rotatedCorner.x, self.center.y + rotatedCorner.y, self.center.z + rotatedCorner.z)\n            worldCorners.append(worldCorner)\n        return worldCorners\n\n    def overlapsAABB(self, otherBox):\n        # type: (QBox3D) -> bool\n        """ 基于AABB算法检测两个Box3D是否重叠(不支持旋转) """\n        aMin = Vec3(self.center.x - self.width / 2.0, self.center.y - self.height / 2.0, self.center.z - self.depth / 2.0)\n        aMax = Vec3(self.center.x + self.width / 2.0, self.center.y + self.height / 2.0, self.center.z + self.depth / 2.0)\n\n        bMin = Vec3(otherBox.center.x - otherBox.width / 2.0, otherBox.center.y - otherBox.height / 2.0, otherBox.center.z - otherBox.depth / 2.0)\n        bMax = Vec3(otherBox.center.x + otherBox.width / 2.0, otherBox.center.y + otherBox.height / 2.0, otherBox.center.z + otherBox.depth / 2.0)\n        # 检查在三个轴上的投影是否重叠\n        return (aMin.x <= bMax.x and aMax.x >= bMin.x and aMin.y <= bMax.y and aMax.y >= bMin.y and aMin.z <= bMax.z and aMax.z >= bMin.z)\n\n    def overlapsSAT(self, otherBox):\n        # type: (QBox3D) -> bool\n        """ 使用分离轴定理 (SAT) 进行碰撞检测，检测两个旋转后的Box3D是否重叠 """\n        # 获取两个盒子的8个角点\n        aCorners = self.getWorldCorners()\n        bCorners = otherBox.getWorldCorners()\n        # 定义需要投影的分离轴，分别是两个盒子的三个轴的法向量\n        axes = [\n            Vec3(1, 0, 0), Vec3(0, 1, 0), Vec3(0, 0, 1),  # self 盒子的轴\n            otherBox.rotationAxis  # 可以添加更多分离轴，基于旋转的法向量\n        ]\n        # 对每一个轴进行投影\n        for axis in axes:\n            # 投影 self 的角点\n            aProjections = [Vec3.dot(corner, axis) for corner in aCorners]\n            aMinProj, aMaxProj = min(aProjections), max(aProjections)\n            # 投影 otherBox 的角点\n            bProjections = [Vec3.dot(corner, axis) for corner in bCorners]\n            bMinProj, bMaxProj = min(bProjections), max(bProjections)\n            # 如果在这个轴上没有重叠，则盒子不相交\n            if aMaxProj < bMinProj or bMaxProj < aMinProj:\n                return False  # 找到一个分离轴，说明盒子不重叠\n        # 所有轴都没有找到分离轴，盒子重叠\n        return True\n\nclass Vec2(Vec3):\n    """ [不推荐] Vec2向量类 用于描述2D向量 继承于Vec3并抹除特定坐标轴 """\n    def __init__(self, x = 0, y = 0):\n        Vec3.__init__(self, x, y, 0)\n\n    def __len__(self):\n        return 2\n\n    def _upDate(self):\n        """ 刷新Tuple资源 """\n        self._tuple = (self.x, self.y)\n\n    @staticmethod\n    def tupleToVec(tuple):\n        # type: (tuple[float | int]) -> Vec2\n        """ 将元组转换到Vec """\n        return Vec2(*tuple)\n\n    def copy(self):\n        # type: () -> Vec2\n        """ 拷贝一份新的Vec2对象 """\n        return Vec2(self.x, self.y)',quQuModPy='# -*- coding: utf-8 -*-\nfrom mod.common.mod import Mod\nimport mod.server.extraServerApi as serverApi\nimport mod.client.extraClientApi as clientApi\nfrom Util import TRY_EXEC_FUN\nimport IN\n\nclass _TempData:\n    """ modMain临时数据储存 包含了初始化注册的一些信息 """\n    _nativePyServer = []\n    _nativePyClient = []\n    _serverInitCall = []\n    _clientInitCall = []\n    _threadAnalysis = False\n\nclass Include:\n    ctRender_v2 = False\n    """ CTRender v2 资源管理系统 """\n    attackExtend = False\n    """ AC战斗机制 链攻击系统(商务纠纷暂已屏蔽) """\n    glRender = False\n    """ GLRender 玩家资源渲染系统 """\n\n@Mod.Binding(name = "QuMod_"+IN.ModDirName, version = "1.0.0")\nclass QMain(object):\n    """ QuMod MAIN入口逻辑  """\n    def __init__(self):\n        pass\n\n    @Mod.InitServer()\n    def serverInit(self):\n        # 服务端初始化\n        from Systems.Loader.Server import LoaderSystem\n        IN.IsServerUser = True\n        self._loadServerInclude()\n        self._regNativePyServer()\n        self._loadServerInitFuncs()\n        if _TempData._threadAnalysis:\n            from threading import current_thread\n            IN.RuntimeService._serverThreadID = current_thread().ident\n        if IN.RuntimeService._serverSystemList:\n            LoaderSystem.getSystem()    # 初始化服务端加载器\n\n    @Mod.InitClient()\n    def clientInit(self):\n        from Systems.Loader.Client import LoaderSystem\n        self._loadClientInclude()\n        self._regNativePyClient()\n        self._loadClientInitFuncs()\n        if _TempData._threadAnalysis:\n            from threading import current_thread\n            IN.RuntimeService._clientThreadID = current_thread().ident\n        if IN.RuntimeService._clientSystemList:\n            LoaderSystem.getSystem()    # 初始化客户端加载器\n\n    def _loadServerInclude(self):\n        """ 加载服务端Include扩展项 """\n        quModLibsPath = IN.QuModLibsPath\n        if Include.ctRender_v2:\n            REG_SERVER_MODULE(quModLibsPath + ".Include.CT_Render.ServerApi")\n        if Include.attackExtend:\n            REG_SERVER_MODULE(quModLibsPath + ".Include.AttackExtend.Server")\n        if Include.glRender:\n            REG_SERVER_MODULE(quModLibsPath + ".Include.GL_Render.Server")\n\n    def _loadClientInclude(self):\n        """ 加载客户端Include扩展项 """\n        quModLibsPath = IN.QuModLibsPath\n        if Include.ctRender_v2:\n            REG_CLIENT_MODULE(quModLibsPath + ".Include.CT_Render.ClientApi")\n        if Include.attackExtend:\n            REG_CLIENT_MODULE(quModLibsPath + ".Include.AttackExtend.Client")\n        if Include.glRender:\n            REG_CLIENT_MODULE(quModLibsPath + ".Include.GL_Render.Client")\n\n    def _regNativePyClient(self):\n        """ 加载原版Python客户端系统注册 """\n        for args in _TempData._nativePyClient:\n            clientApi.RegisterSystem(*args)\n        _TempData._nativePyClient = []\n\n    def _regNativePyServer(self):\n        """ 加载原版Python服务端系统注册 """\n        for args in _TempData._nativePyServer:\n            serverApi.RegisterSystem(*args)\n        _TempData._nativePyServer = []\n\n    def _loadServerInitFuncs(self):\n        """ 加载服务端初始化函数 """\n        for funObj in _TempData._serverInitCall:\n            TRY_EXEC_FUN(funObj)\n        _TempData._serverInitCall = []\n\n    def _loadClientInitFuncs(self):\n        """ 加载客户端初始化函数 """\n        for funObj in _TempData._clientInitCall:\n            TRY_EXEC_FUN(funObj)\n        _TempData._clientInitCall = []\n\n    @Mod.DestroyServer()\n    def serverDestroy(self):\n        pass\n\n    @Mod.DestroyClient()\n    def clientDestroy(self):\n        pass\n\nclass EasyMod:\n    """ 简易Mod构造器 """\n    def __init__(self, modDirName=None):\n        # type: (str | None) -> None\n        self._modDirName = modDirName if modDirName else IN.ModDirName\n        """ Mod目录名 """\n        self.include = Include\n\n    def regServer(self, relPath="", systemName=None):\n        # type: (str, str | None) -> EasyMod\n        """ 注册服务端(相对目录) """\n        REG_SERVER_MODULE("{}.{}".format(self._modDirName, relPath), systemName)\n        return self\n\n    def Server(self, relPath="", systemName=None):\n        # type: (str, str | None) -> EasyMod\n        """ 便捷式服务端注册 """\n        return self.regServer(relPath, systemName)\n\n    def Client(self, relPath="", systemName=None):\n        # type: (str, str | None) -> EasyMod\n        """ 便捷式客户端注册 """\n        return self.regClient(relPath, systemName)\n\n    def regClient(self, relPath="", systemName=None):\n        # type: (str, str | None) -> EasyMod\n        """ 注册客户端(相对目录) """\n        REG_CLIENT_MODULE("{}.{}".format(self._modDirName, relPath), systemName)\n        return self\n\n    def addServerInitCallFunc(self, callFunc=lambda: None):\n        # type: (object) -> EasyMod\n        """ 添加服务端初始化调用方法 """\n        REG_SERVER_INIT_CALL(callFunc)\n        return self\n    \n    def addClientInitCallFunc(self, callFunc=lambda: None):\n        # type: (object) -> EasyMod\n        """ 添加客户端初始化调用方法 """\n        REG_CLIENT_INIT_CALL(callFunc)\n        return self\n\n    def regNativePyClient(self, namespace="", systemName="", relPath=""):\n        # type: (str, str, str) -> EasyMod\n        """ 注册原生Python客户端(相对目录) """\n        CLIENT_REG_NATIVE_PY_SYSTEM(namespace, systemName, "{}.{}".format(self._modDirName, relPath))\n        return self\n\n    def regNativePyServer(self, namespace="", systemName="", relPath=""):\n        # type: (str, str, str) -> EasyMod\n        """ 注册原生Python服务端(相对目录) """\n        SERVER_REG_NATIVE_PY_SYSTEM(namespace, systemName, "{}.{}".format(self._modDirName, relPath))\n        return self\n\ndef START_THREAD_ANALYSIS():\n    """ 启用线程分析 """\n    _TempData._threadAnalysis = True\n\ndef STOP_THREAD_ANALYSIS():\n    """ 禁用线程分析 """\n    _TempData._threadAnalysis = False\n\ndef REG_SERVER_MODULE(absPath, systemName=None, _index=-1):\n    # type: (str, str | None, int) -> None\n    """ 注册服务端模块 (绝对路径) """\n    if _index < 0:\n        return IN.RuntimeService._serverSystemList.append((absPath, systemName))\n    return IN.RuntimeService._serverSystemList.insert(_index, (absPath, systemName))\n\ndef REG_CLIENT_MODULE(absPath, systemName=None, _index=-1):\n    # type: (str, str | None, int) -> None\n    """ 注册客户端模块 (绝对路径) """\n    if _index < 0:\n        return IN.RuntimeService._clientSystemList.append((absPath, systemName))\n    return IN.RuntimeService._clientSystemList.insert(_index, (absPath, systemName))\n\ndef REG_SERVER_INIT_CALL(func=lambda: None):\n    # type: (object) -> None\n    """ 注册服务端初始化调用函数 """\n    _TempData._serverInitCall.append(func)\n\ndef REG_CLIENT_INIT_CALL(func=lambda: None):\n    # type: (object) -> None\n    """ 注册客户端初始化调用函数 """\n    _TempData._clientInitCall.append(func)\n\ndef SET_MOD_NAME(_name):\n    # type: (str) -> None\n    """ 设置modName """\n    setattr(QMain, "MOD_NAME", _name)\n\ndef SET_MOD_VERSION(_version):\n    # type: (str) -> None\n    """ 设置modVersion """\n    setattr(QMain, "VERSION", _version)\n\ndef SERVER_REG_NATIVE_PY_SYSTEM(namespace="", systemName="", absPath=""):\n    """ 注册服务端原生Python System """\n    _TempData._nativePyServer.append((namespace, systemName, absPath))\n\ndef CLIENT_REG_NATIVE_PY_SYSTEM(namespace="", systemName="", absPath=""):\n    """ 注册客户端原生Python System """\n    _TempData._nativePyClient.append((namespace, systemName, absPath))',quServerPy='# -*- coding: utf-8 -*-\nfrom Math import Vec3, Vec2, QBox3D\nfrom Util import (\n    Unknown,\n    InitOperation,\n    errorPrint,\n    _eventsRedirect,\n    ObjectConversion as __ObjectConversion,\n)\nfrom IN import ModDirName\nimport mod.server.extraServerApi as __extraServerApi\nserverApi = __extraServerApi\nTickEvent = "OnScriptTickServer"\nlevelId = serverApi.GetLevelId()\nSystem = serverApi.GetSystem("Minecraft","game")\nEvents = _eventsRedirect\n\ndef DestroyEntity(entityId):\n    """ 注销特定实体 """\n    return System.DestroyEntity(entityId)\n\ndef _getLoaderSystem():\n    """ 获取加载器系统 """\n    from Systems.Loader.Server import LoaderSystem\n    return LoaderSystem.getSystem()\n\n_loaderSystem = _getLoaderSystem()\n\ndef ListenForEvent(eventName, parentObject=None, func=lambda: None):\n    # type: (str | object, object, object) -> object\n    """ 动态事件监听 """\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    return _loaderSystem.nativeListen(eventName, parentObject, func)\n\ndef UnListenForEvent(eventName, parentObject=None, func=lambda: None):\n    # type: (str | object, object, object) -> bool\n    """ 动态事件监听销毁 """\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    return _loaderSystem.unNativeListen(eventName, parentObject, func)\n\ndef Listen(eventName=""):\n    """  [装饰器] 游戏事件监听 """\n    eventName = eventName if isinstance(eventName, str) else eventName.__name__\n    from Systems.Loader.Server import LoaderSystem\n    def _Listen(funObj):\n        LoaderSystem.REG_STATIC_LISTEN_FUNC(eventName, funObj)\n        return funObj\n    return _Listen\n\ndef DestroyFunc(func):\n    """ [装饰器] 注册销毁回调函数 """\n    from Systems.Loader.Server import LoaderSystem\n    LoaderSystem.REG_DESTROY_CALL_FUNC(func)\n    return func\n\ndef Call(playerId, apiKey="", *args, **kwargs):\n    # type: (str, str, object, object) -> None\n    """ Call请求对立端API调用 当playerId为*时代表全体玩家 """\n    return _loaderSystem.sendCall(playerId, apiKey, args, kwargs)\n\ndef MultiClientsCall(playerIdList=[], key="", *args, **kwargs):\n    # type: (list[str], str, object, object) -> None\n    """ 多玩家客户端合批Call请求 """\n    return _loaderSystem.sendMultiClientsCall(playerIdList, key, args, kwargs)\n\ndef CallBackKey(key=""):\n    """ (向下兼容 未来可能移除)[装饰器] 用于给指定函数标记任意key值 以便被Call匹配 """\n    def _CallBackKey(fun):\n        _loaderSystem.regCustomApi(key, fun)\n        return fun\n    return _CallBackKey\n\ndef AllowCall(func):\n    """ 允许调用 同等于CallBackKey 自动以当前函数名字设置参数 """\n    key = func.__name__\n    key2 = "{}.{}".format(func.__module__, key)\n    key3 = key2.split(ModDirName+".", 1)[1]\n    _loaderSystem.regCustomApi(key, func)\n    _loaderSystem.regCustomApi(key2, func)\n    _loaderSystem.regCustomApi(key3, func)\n    return func\n\ndef LocalCall(funcName="", *args, **kwargs):\n    """ 本地调用 执行当前端@AllowCall|@CallBackKey("...")的方法 """\n    return _loaderSystem.localCall(funcName, *args, **kwargs)\n\nclass Entity(object):\n    __slots__ = ("entityId","PropertySettingsDic",)\n    ErrorSet = "[Error] 不支持的属性设置"\n\n    class Type:\n        PLAYER = "minecraft:player"\n\n    class HealthComp(object):\n        """ 生命值组件 """\n        def __init__(self,entityId):\n            # type: (str) -> None\n            self.entityId = entityId\n            self.PropertySettingsDic = {\n                "Value":self.SetValue,\n                "Max":self.SetMax\n            }\n        def __setattr__(self, Name, Value):\n            """ 属性设置处理 """\n            if Name in Entity.__slots__:\n                return object.__setattr__(self, Name, Value)\n            elif Name in self.PropertySettingsDic:\n                Fun = self.PropertySettingsDic[Name]\n                return Fun(Value)\n            else:\n                print(Entity.ErrorSet)\n                return None\n        def SetValue(self,Value):\n            """ 设置Value值 """\n            comp = serverApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.SetAttrValue(0,Value)\n        def SetMax(self,Value):\n            """ 设置Max值 """\n            comp = serverApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.SetAttrMaxValue(0,Value)\n        @property\n        def Value(self):\n            # type: () -> int\n            comp = serverApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.GetAttrValue(0)\n        @property\n        def Max(self):\n            # type: () -> int\n            comp = serverApi.GetEngineCompFactory().CreateAttr(self.entityId)\n            return comp.GetAttrMaxValue(0)\n    \n    @staticmethod\n    def CreateEngineEntityByTypeStr(engineTypeStr, pos, rot, dimensionId = 0, isNpc = False):\n        # type: (str, tuple[float], tuple[float], int, bool) -> str\n        """ 服务端系统接口 创建微软生物 """\n        return System.CreateEngineEntityByTypeStr(engineTypeStr, pos, rot, dimensionId, isNpc)\n    \n    def __init__(self, __entityId):\n        # type: (str) -> None\n        self.entityId = __entityId\n        self.PropertySettingsDic = {\n            "Pos":self.__SetPos,\n            "FootPos":self.__SetPos,\n            "Rot":self.__SetRot,\n        }\n\n    def __setattr__(self, Name, Value):\n        """ 属性设置处理 """\n        if Name in Entity.__slots__:\n            return object.__setattr__(self, Name, Value)\n        elif Name in self.PropertySettingsDic:\n            Fun = self.PropertySettingsDic[Name]\n            return Fun(Value)\n        else:\n            print(Entity.ErrorSet)\n            return None\n\n    def EntityPointDistance(self, otherEntity="", errorValue=0.0):\n        # type: (str, float) -> float\n        """ 获取与另外一个实体对应的脚部中心点距离(若实体异常将返回errorValue) """\n        myPos = serverApi.GetEngineCompFactory().CreatePos(self.entityId).GetPos()\n        otherPos = serverApi.GetEngineCompFactory().CreatePos(otherEntity).GetPos()\n        if myPos == None or otherPos == None:\n            return errorValue\n        return Vec3.tupleToVec(myPos).vectorSubtraction(Vec3.tupleToVec(otherPos)).getLength()\n\n    def EntityCenterPointDistance(self, otherEntity="", errorValue=0.0):\n        # type: (str, float) -> float\n        """ 获取与另外一个实体的中心点距离(若实体异常将返回errorValue) """\n        myPos = serverApi.GetEngineCompFactory().CreatePos(self.entityId).GetPos()\n        otherPos = serverApi.GetEngineCompFactory().CreatePos(otherEntity).GetPos()\n        if myPos == None or otherPos == None:\n            return errorValue\n        myVec = Vec3.tupleToVec(myPos)\n        otherVec = Vec3.tupleToVec(otherPos)\n        comp = serverApi.GetEngineCompFactory().CreateCollisionBox(self.entityId)\n        mySize = comp.GetSize()\n        comp = serverApi.GetEngineCompFactory().CreateCollisionBox(otherEntity)\n        otherSize = comp.GetSize()\n        myVec.y -= mySize[1] * 0.5\n        otherVec.y -= otherSize[1] * 0.5\n        return myVec.vectorSubtraction(otherVec).getLength()\n\n    def LookAt(self, otherPos=(0, 0, 0), minTime=2.0, maxTime=3.0, reject=True):\n        comp = serverApi.GetEngineCompFactory().CreateRot(self.entityId)\n        comp.SetEntityLookAtPos(otherPos, minTime, maxTime, reject)\n\n    def getBox3D(self, useBodyRot=False):\n        # type: (bool) -> QBox3D\n        """ 获取该实体的三维空间盒对象 """\n        footPos = self.FootPos\n        if not footPos:\n            return QBox3D.createNullBox3D()\n        comp = serverApi.GetEngineCompFactory().CreateCollisionBox(self.entityId)\n        sx, sy = comp.GetSize()\n        x, y, z = footPos\n        return QBox3D(Vec3(sx, sy, sx), Vec3(x, y + sy * 0.5, z), None, rotationAngle = 0 if not useBodyRot else self.Rot[1])\n\n    def SetMarkVariant(self, value=1):\n        # type: (int | float) -> bool\n        """ 设置对应JSON组件的MarkVariant值 对应query.mark_variant(底层同步) """\n        comp = serverApi.GetEngineCompFactory().CreateEntityDefinitions(self.entityId)\n        return comp.SetMarkVariant(value)\n\n    def SetVariant(self, value=1):\n        # type: (int | float) -> bool\n        """ 设置对应JSON组件的Variant值 对应query.variant(底层同步) """\n        comp = serverApi.GetEngineCompFactory().CreateEntityDefinitions(self.entityId)\n        return comp.SetVariant(value)\n\n    def GetAttackTarget(self):\n        # type: () -> str\n        """ 获取攻击目标 """\n        comp = serverApi.GetEngineCompFactory().CreateAction(self.entityId)\n        return comp.GetAttackTarget()\n\n    def SetAttackTarget(self, targetId=None, autoResetAttackTarget=True):\n        # type: (str | None, bool) -> bool\n        """ 设置攻击目标 """\n        comp = serverApi.GetEngineCompFactory().CreateAction(self.entityId)\n        if autoResetAttackTarget and self.GetAttackTarget() != targetId:\n            self.ResetAttackTarget()\n        if targetId:\n            return comp.SetAttackTarget(targetId)\n\n    def ResetAttackTarget(self):\n        # type: () -> bool\n        """ 重置攻击目标 """\n        comp = serverApi.GetEngineCompFactory().CreateAction(self.entityId)\n        return comp.ResetAttackTarget()\n\n    def GetMotionComp(self):\n        """ 获取移动向量管理组件 """\n        return serverApi.GetEngineCompFactory().CreateActorMotion(self.entityId)\n\n    def SetRuntimeAttr(self, attrName, value):\n        """ 设置运行时属性数据(根据MOD隔离并同步客户端) """\n        comp = serverApi.GetEngineCompFactory().CreateModAttr(self.entityId)\n        return comp.SetAttr("{}_{}".format(ModDirName, attrName), value)\n\n    def GetRuntimeAttr(self, attrName, nullValue=None):\n        """ 获取运行时属性数据(根据MOD隔离) """\n        comp = serverApi.GetEngineCompFactory().CreateModAttr(self.entityId)\n        return comp.GetAttr("{}_{}".format(ModDirName, attrName), nullValue)\n\n    @property\n    def Health(self):\n        # type: () -> Entity.HealthComp\n        """ 实体生命值属性 """\n        return self.__class__.HealthComp(self.entityId)\n    \n    @property\n    def Pos(self):\n        # type: () -> tuple[float,float,float]  | None\n        return serverApi.GetEngineCompFactory().CreatePos(self.entityId).GetPos()\n\n    @property\n    def Vec3Pos(self):\n        # type: () -> Vec3 | None\n        """ 获取Vec3坐标 失败则返回None """\n        pos = self.Pos\n        if pos == None:\n            return None\n        return Vec3.tupleToVec(pos)\n\n    @property\n    def IsPlayer(self):\n        # type: () -> bool\n        """ 判断目标是不是玩家单位 """\n        return self.Identifier == "minecraft:player"\n\n    @property\n    def Vec3FootPos(self):\n        # type: () -> Vec3 | None\n        """ 获取Vec3脚下坐标 失败则返回None """\n        pos = self.FootPos\n        if pos == None:\n            return None\n        return Vec3.tupleToVec(pos)\n\n    @property\n    def FootPos(self):\n        # type: () -> tuple[float,float,float]  | None\n        return serverApi.GetEngineCompFactory().CreatePos(self.entityId).GetFootPos()\n\n    @property\n    def Rot(self):\n        # type: () -> tuple[float,float]  | None\n        return serverApi.GetEngineCompFactory().CreateRot(self.entityId).GetRot()\n\n    @property\n    def Vec2Rot(self):\n        # type: () -> Vec2 | None\n        """ 获取Vec2旋转角度 失败则返回None """\n        rot = self.Rot\n        if rot == None:\n            return None\n        return Vec2.tupleToVec(rot)\n\n    @property\n    def Identifier(self):\n        # type: () -> str\n        return serverApi.GetEngineCompFactory().CreateEngineType(self.entityId).GetEngineTypeStr()\n\n    @property\n    def Dm(self):\n        # type: () -> int\n        return serverApi.GetEngineCompFactory().CreateDimension(self.entityId).GetEntityDimensionId()\n    \n    @property\n    def DirFromRot(self):\n        # type: () -> tuple[float,float,float]  | None\n        return serverApi.GetDirFromRot(self.Rot)\n\n    @property\n    def Vec3DirFromRot(self):\n        # type: () -> Vec3 | None\n        rot = self.DirFromRot\n        if rot == None:\n            return None\n        return Vec3.tupleToVec(rot)\n    \n    @property\n    def DimensionId(self):\n        # type: () -> int\n        return self.Dm\n    \n    def __SetPos(self,Value):\n        # type: (tuple[float, float, float] | Vec3) -> bool\n        if Value and isinstance(Value, Vec3):\n            Value = Value.getTuple()\n        return serverApi.GetEngineCompFactory().CreatePos(self.entityId).SetPos(Value)\n\n    def __SetRot(self,Value):\n        # type: (tuple[float, float] | Vec2) -> bool\n        if Value and isinstance(Value, Vec2):\n            Value = Value.getTuple()\n        return serverApi.GetEngineCompFactory().CreateRot(self.entityId).SetRot(Value)\n    \n    def Destroy(self):\n        """ 注销 销毁实体 """\n        return DestroyEntity(self.entityId)\n    \n    def Kill(self):\n        """ 杀死实体 """\n        return serverApi.GetEngineCompFactory().CreateGame(levelId).KillEntity(self.entityId)\n    \n    def exeCmd(self, cmd):\n        # type: (str) -> bool\n        """ 使实体执行命令 """\n        if self.Identifier == Entity.Type.PLAYER:\n            # 玩家类型无需处理\n            return serverApi.GetEngineCompFactory().CreateCommand(levelId).SetCommand(cmd, self.entityId)\n        # 非玩家实体类型处理\n        playerId = self.getNearPlayer()\n        if not playerId:\n            return False\n        from Util import RandomUid\n        comp = serverApi.GetEngineCompFactory().CreateTag(self.entityId)\n        tag = RandomUid()\n        comp.AddEntityTag(tag)\n        state = serverApi.GetEngineCompFactory().CreateCommand(levelId).SetCommand("/execute as @e[tag={}] at @s run {}".format(tag, cmd), playerId)\n        comp.RemoveEntityTag(tag)\n        return state\n\n    def getNearPlayer(self):\n        # type: () -> str | None\n        """ 获取任意一个最近的玩家单位(渲染范围内) 可能为None """\n        playerList = serverApi.GetEngineCompFactory().CreatePlayer(self.entityId).GetRelevantPlayer([])\n        if playerList:\n            return playerList[0]\n        return None\n\nclass TaskProcessObj(object):\n    def __init__(self, obj, workingHours, waitingTime):\n        # type: (object, float, float) -> None\n        self.obj = obj\n        self.workingHours = workingHours\n        self.waitingTime = waitingTime\n        self._lock = False\n        self.__isWorking = False\n        self.__gen = None\n    \n    def stopTask(self):\n        if not self.__isWorking:\n            return\n        self.__isWorking = False\n    \n    def clone(self):\n        return TaskProcessObj(self.obj, self.workingHours, self.waitingTime)\n    \n    def run(self, *args, **kwargs):\n        if self.__isWorking or self._lock:\n            return\n        self.__gen = self.obj(*args, **kwargs)\n        self.__isWorking = True\n        self._onStart()\n    \n    def _onStart(self):\n        from time import time\n        startTime = time()\n        try:\n            while self.__isWorking:\n                slpTime = next(self.__gen)\n                nowTime = time()\n                if nowTime - self.workingHours >= startTime:\n                    serverApi.GetEngineCompFactory().CreateGame(levelId).AddTimer(self.waitingTime, self._onStart)\n                    break\n                elif slpTime:\n                    serverApi.GetEngineCompFactory().CreateGame(levelId).AddTimer(slpTime, self._onStart)\n                    break\n        except StopIteration:\n            self.stopTask()\n        except Exception as e:\n            print("[Error] {} 任务异常: {}".format(self.obj.__name__, e))\n            self.stopTask()\n\ndef TaskProcess(workingHours = 0.02, waitingTime = 0.04):\n    """ 任务进程装饰器 """\n    def _zsq(obj):\n        taskProcessObj = TaskProcessObj(obj, workingHours, waitingTime)\n        taskProcessObj._lock = True\n        return taskProcessObj\n    return _zsq\n\ndef TaskProcessCreate(obj):\n    # type: (TaskProcessObj) -> TaskProcessObj\n    """ 创建任务进程 """\n    return obj.clone()\n\n# ================== 客户端请求实现 ==================\n@CallBackKey("__Client.Request__")\ndef __ClientRequest(PlayerId, Key, Args, Kwargs, BackKey):\n    try:\n        BackData = LocalCall(Key, *Args, **Kwargs)\n    except Exception as e:\n        Call(PlayerId, "__DelCallBackKey__", Key)\n        raise e\n    Call(PlayerId, BackKey, BackData)\n    \n@CallBackKey("__CALL.CLIENT__")\ndef __CallCLIENT(PlayerId, Key, Args, Kwargs):\n    Call(PlayerId, Key, *Args, **Kwargs)\n# ================== 客户端请求实现 ==================\n\nclass QuObjectConversion(__ObjectConversion):\n    @staticmethod\n    def getClsWithPath(path):\n        # type: (str) -> object\n        lastPos = path.rfind(".")\n        impObj = serverApi.ImportModule((path[:lastPos]))\n        return getattr(impObj, path[lastPos+1:])\n\nclass QuDataStorage:\n    """ Qu数据储存管理 """\n    _versionKey = "__version__"\n    _dataKey = "__data__"\n    _autoMap = {}   # type: dict[type, dict]\n    _init = False\n\n    @staticmethod\n    def formatStrType(typ):\n        # type: (str) -> str\n        """ 格式化字符串类型 """\n        if typ in ("float", "int"):\n            return "number"\n        elif typ in ("str", "unicode"):\n            return "baseString"\n        return typ\n\n    @staticmethod\n    def loadData(clsObj, data):\n        # type: (type, dict) -> None\n        """ 加载数据 """\n        for k, v in data.items():\n            try:\n                newObj = QuObjectConversion.loadDumpsObject(v)\n                oldType = QuDataStorage.formatStrType(QuObjectConversion.getType(getattr(clsObj, k)))\n                newType = QuDataStorage.formatStrType(QuObjectConversion.getType(newObj))\n                if oldType != newType:\n                    print("[QuDataStorage] 新旧数据类型不一已被放弃 (\'{}\' != \'{}\')".format(newType, oldType))\n                    continue\n                setattr(clsObj, k, newObj)\n            except Exception as e:\n                print(e)\n    \n    @staticmethod\n    def dumpsData(clsObj):\n        # type: (type) -> dict\n        """ 获取序列化数据 """\n        return {\n            k : QuObjectConversion.dumpsObject(getattr(clsObj, k)) for k in dir(clsObj) if not k.startswith("__")\n        }\n\n    @staticmethod\n    def AutoSave(version = 1):\n        """ 自动保存装饰器\n            @version 版本控制 当版本号不同时将会抛弃当前存档数据该用新版数据 一般用于大型数据变动\n        """\n        if not QuDataStorage._init:\n            QuDataStorage._init = True\n            _loaderSystem._onDestroyCall_LAST.append(QuDataStorage.saveData)\n\n        def _autoSave(cls):\n            path = QuObjectConversion.getClsPathWithClass(cls)\n            comp = serverApi.GetEngineCompFactory().CreateExtraData(levelId)\n            levelExData = comp.GetExtraData(path)\n            if levelExData == None:\n                levelExData = {}\n            if levelExData.get(QuDataStorage._versionKey, version) == version:\n                QuDataStorage.loadData(cls, levelExData.get(QuDataStorage._dataKey, {}))\n            levelExData[QuDataStorage._versionKey] = version\n            if not path in QuDataStorage._autoMap:\n                QuDataStorage._autoMap[path] = levelExData\n            return cls\n        return _autoSave\n    \n    @staticmethod\n    def saveData():\n        """ 保存存档数据 """\n        saveCount = 0\n        levelcomp = serverApi.GetEngineCompFactory().CreateExtraData(levelId)\n        for k, v in QuDataStorage._autoMap.items():\n            saveCount += 1\n            try:\n                cls = QuObjectConversion.getClsWithPath(k)\n                v[QuDataStorage._dataKey] = QuDataStorage.dumpsData(cls)\n                levelcomp.SetExtraData(k, v, False)\n            except Exception as e:\n                print(e)\n        if saveCount > 0:\n            levelcomp.SaveExtraData()\n\n@CallBackKey("__calls__")\ndef QUMOD_SERVER_CALLS_(datLis):\n    # type: (list[tuple]) -> None\n    """ 内置的多callData处理请求 """\n    for key, args, kwargs in datLis:\n        try:\n            LocalCall(key, *args, **kwargs)\n        except Exception as e:\n            errorPrint("CALL发生异常 KEY值 \'{}\' >> {}".format(key, e))\n            import traceback\n            traceback.print_exc()\n\ndef EventHandler(key):\n    """ 注册EventHandler 可搭配QuPresteTool完成代码分析并建立关联 """\n    def _EventHandler(fun):\n        return fun\n    return _EventHandler\n\ndef Emit(eventHandler, *args, **kwargs):\n    """ 发送消息 执行特定eventHandler """\n    pass',quUtilPy='# -*- coding: utf-8 -*-\nfrom functools import wraps\nfrom threading import Thread,Lock\nfrom types import FunctionType\nfrom time import time\nimport pickle as _pickle\n\nclass UniversalObject(object):\n    """ 万用对象 """\n    def __init__(self):\n        pass\n\n    def __getattribute__(self, __name):\n        return self\n\n    def __call__(self, *args, **kwds):\n        return self\n\nclass EventsData(object):\n    """ 事件Data """\n    def __init__(self, json):\n        self._quJson = json\n\n    def __getattribute__(self, __name):\n        return object.__getattribute__(self, "_quJson")[__name]\n\nclass EventsRedirect(object):\n    """ 事件重定向 """\n    def __getattribute__(self, __name):\n        return type(__name, (EventsData,), {})\n    \n_eventsRedirect = EventsRedirect()\n\nclass SystemSide(object):\n    def __init__(self, Path, SystemName = None):\n        self.SystemName = SystemName # 绑定系统\n        self.Path = Path\n\nModDirName = SystemSide.__module__.split(".")[0]\nbuil = UniversalObject()\nUnknown = type("Unknown",(object,),{})\nThreadLock = Lock()\n\ndef ParameterType(*Args, **Kwargs):       # 运行时类型检测有损性能\n    """ 函数类型校验装饰器 可以使用列表/元组代表多个类型 """\n    def __ParameterType(Func):\n        ArgsType = Args+tuple(Kwargs.values())\n        KwargsType = Kwargs\n        @wraps(Func)\n        def newFun(*__Args, **__Kwargs):\n            # Args参数类型校验\n            for i, data in enumerate(__Args):\n                if i>=len(ArgsType): continue       # 类型限制外 通过\n                typ = ArgsType[i]\n                TypeList = [typ] if not isinstance(typ, list) and not isinstance(typ, tuple) else typ\n                if any((isinstance(data, Type) for Type in TypeList)):\n                    continue                        # 符合其中的任意类型 通过\n                Error = "类型异常({name}) {data} 不是 {args}".format(name=Func.__name__, data=data,\n                    args=TypeList[0] if len(TypeList) == 1 else " | ".join((str(x) for x in TypeList))\n                )\n                raise TypeError(Error)\n            # Kwargs参数类型校验\n            for Key, Data in __Kwargs.items():\n                if not Key in KwargsType: continue\n                typ = KwargsType[Key]\n                TypeList = [typ] if not isinstance(typ, list) and not isinstance(typ, tuple) else typ\n                if any((isinstance(Data, Type) for Type in TypeList)):\n                    continue                        # 符合其中的任意类型 通过\n                Error = "类型异常({name}) {Key} = {data} 不是 {args}".format(\n                    Key = Key,\n                    name=Func.__name__, \n                    data=Data,\n                    args=TypeList[0] if len(TypeList) == 1 else " | ".join((str(x) for x in TypeList))\n                )\n                raise TypeError(Error)\n            return Func(*__Args, **__Kwargs)\n        return newFun\n    return __ParameterType\n\ndef RandomUid():\n    """ 创建随机UID """\n    from uuid import uuid4\n    return "QuMod_"+uuid4().hex\n\ndef Base64(_text = ""):\n    # type: (str) -> str\n    """ 将string值进行加密 """\n    from base64 import b64encode\n    _text = str(_text)\n    basText = str(b64encode(_text.encode()))\n    if len(basText) > 16:\n        basText = basText[:16]\n    return basText\n\ndef ExceptionHandling(errorFun=lambda: None, output=False):\n    """ 异常处理装饰器 当函数抛出异常时将会返回预定值 """\n    def exceptionHandling(func):\n        @wraps(func)\n        def newFun(*args, **kwargs):\n            try:\n                return func(*args, **kwargs)\n            except Exception as e:\n                if output:\n                    print("[Error]: 异常捕获 {}".format(str(e)))\n                    import traceback\n                    traceback.print_exc()\n                return errorFun()\n        return newFun\n    return exceptionHandling\n\ndef IsThread(Fun):\n    """ [装饰器] 是多线程的 @IsThread 使得该函数在独立新线程工作 """\n    @wraps(Fun)\n    def newFun(*Args,**Kwargs):\n        Xc = Thread(target=Fun,args=tuple(Args),kwargs=dict(Kwargs)); Xc.start()\n        return Xc\n    return newFun\n\ndef InitOperation(fun):\n    """ 初始化运行 装饰器 @InitOperation 函数将会自动执行一次 不支持传参 """\n    try:\n        fun()\n    except Exception as e:\n        print("[Error] " + str(e))\n    return fun\n\nclass Math:\n    """ 简易数学运算类 """\n    @staticmethod\n    def pointDistance(point1, point2):\n        # type: (tuple, tuple) -> float\n        """ 两点距离计算 """\n        x1, y1, z1 = point1\n        x2, y2, z2 = point2\n        result = ((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2)**0.5\n        return result\n\n    @staticmethod\n    def getUnitVector(vector):\n        # type: (tuple[int|float]) -> tuple[int|float]\n        """ 获取向量的单位向量 """\n        length = (sum(i ** 2 for i in vector)) ** 0.5\n        if length == 0:\n            return vector\n        unitVector = tuple((i / length) for i in vector)\n        return unitVector\n\nclass ObjectConversion:\n    """ 对象转换工具类 By Zero123\n        此工具类用于旧版本中解决自定义数据对象的序列化与反序列化加载 用于持久化储存数据/传输数据\n        新版本推荐使用pickle模块\n    """\n\n    baseType = set([\n        "str", "list", "float", "int", "bool", "dict", "unicode"\n    ])\n\n    _typeKey = "__type__"\n    _valueKey = "__value__"\n\n    @staticmethod\n    def getClsPathWithClass(clsObj):\n        return clsObj.__module__ + "." + clsObj.__name__\n\n    @staticmethod\n    def getClsWithPath(path):\n        # type: (str) -> object\n        lastPos = path.rfind(".")\n        impObj = Unknown\n        return getattr(impObj, path[lastPos+1:])\n\n    @staticmethod\n    def getClsPath(data):\n        return data.__class__.__module__ + "." + data.__class__.__name__\n\n    @staticmethod\n    def dumpsObject(data):\n        # type: (object) -> dict\n        """ 序列化对象 """\n        if data == None:\n            return data\n        elif type(data).__name__ in ObjectConversion.baseType:\n            if isinstance(data, list):\n                return [ObjectConversion.dumpsObject(v) for v in data]\n            elif isinstance(data, dict):\n                return {str(k):ObjectConversion.dumpsObject(v) for k, v in data.items()}\n            return data\n        value = {\n            k: ObjectConversion.dumpsObject(getattr(data, k))\n            for k in dir(data) if not k.startswith("__") and not hasattr(getattr(data, k), "__call__") and not isinstance(getattr(data, k), type)\n        }\n        return {\n            ObjectConversion._typeKey: ObjectConversion.getClsPath(data),\n            ObjectConversion._valueKey: value\n        }\n\n    @staticmethod\n    def getType(data):\n        # type: (object) -> str | None\n        if data == None:\n            return None\n        if isinstance(data, dict) and ObjectConversion._typeKey in data and ObjectConversion._valueKey in data:\n            return data[ObjectConversion._typeKey]\n        return type(data).__name__\n\n    @classmethod\n    def loadDumpsObject(cls, data):\n        # type: (object) -> object | dict\n        """ 加载序列化对象 (当类匹配失败/构造失败将会抛出异常) """\n        dataType = cls.getType(data)\n        if dataType == None:\n            return None\n        if dataType in cls.baseType:\n            # 原生数据类型\n            if isinstance(data, list):\n                return [cls.loadDumpsObject(v) for v in data]\n            elif isinstance(data, dict):\n                return {str(k):cls.loadDumpsObject(v) for k, v in data.items()}\n            return data\n        dataCls = cls.getClsWithPath(data[cls._typeKey])\n        value = data[cls._valueKey]\n        createKey = "create"\n        if hasattr(dataCls, createKey):\n            # 使用静态构造方法\n            obj = getattr(dataCls, createKey)()\n            for k, v in cls.loadDumpsObject(value).items():\n                setattr(obj, k, v)\n            return obj\n        return dataCls(**cls.loadDumpsObject(value))\n\nclass QuFreeObject(object):\n    def free(self):\n        pass\n\ndef errorPrint(charPtr):\n    """ 异常输出 """\n    print("[Error] "+str(charPtr))\n\ndef TRY_EXEC_FUN(funObj, *args, **kwargs):\n    try:\n        return funObj(*args, **kwargs)\n    except Exception as e:\n        import traceback\n        print("TRY_EXEC发生异常: {}".format(e))\n        traceback.print_exc()\n\ndef printStack(printNow=True):  \n    # 获取当前的堆栈跟踪\n    import traceback\n    stackTrace = traceback.extract_stack()\n    # 打印堆栈跟踪\n    outStr = []\n    for args in stackTrace:\n        outStr.append("<{}({})> {}".format(args[0], args[1], args[2]))\n    outPut = "\\n".join(outStr)\n    if printNow:\n        print("\\n".join(outStr))\n    return outPut\n\ndef getObjectPathName(_callObj = lambda: None):\n    # type: (object) -> str\n    """ 获取可执行对象的目录名 """\n    funcModule = _callObj.__module__\n    funcName = _callObj.__name__\n    keyName = "{}.{}".format(funcModule, funcName)\n    return keyName\n\ndef QThrottle(intervalTime=0.1):\n    """ 该装饰器用于限制函数重复执行的最小时间间隔 """\n    def _func(f):\n        lastTime = [0.0]\n        def _newFunc(*args, **kwargs):\n            nowTime = time()\n            if nowTime > lastTime[0] + intervalTime:\n                lastTime[0] = nowTime\n                return f(*args, **kwargs)\n            return None\n        return _newFunc\n    return _func\n\nclass QStruct:\n    """ 结构体 用于通用数据模型约定(即不涉及任何API) 应定义在Server/Client以外的通用文件 同理Struct也不应该持有任何涉及端侧API的内容 """\n    _SIGN_FORMAT = "_QSTRUCT[{}]"\n    def dumps(self):\n        """ 序列化对象 """\n        return _pickle.dumps(self)\n\n    def signDumps(self):\n        """ 带有特征签名的序列化 """\n        data = self.dumps()\n        return [QStruct._SIGN_FORMAT.format(hex(hash(data))), data]\n\n    @staticmethod\n    def isSignData(data):\n        """ 校验数据 """\n        if not isinstance(data, list) or len(data) != 2:\n            return False\n        signKey = data[0]\n        if isinstance(signKey, str):\n            dataObj = data[1]\n            return signKey == QStruct._SIGN_FORMAT.format(hex(hash(dataObj)))\n        return False\n\n    @staticmethod\n    def loads(data):\n        # type: (str) -> QStruct\n        """ 反序列化加载对象 """\n        return _pickle.loads(data)\n\n    @staticmethod\n    def loadSignData(data):\n        # type: (list) -> QStruct\n        """ 反序列化加载Sign对象表(不会校验) """\n        return _pickle.loads(data[1])\n\n    def onNetUnPack(self):\n        return self\n\n# 为性能考虑Call不会盲目的计算每一个容器的所有数据字段 因此有了以下类型封装 在Call后将会解包原型数据\nclass QRefStruct(QStruct):\n    """ 万能引用 """\n    def __init__(self, refObject):\n        self.ref = refObject\n\n    def onNetUnPack(self):\n        return self.ref\n\nclass QListStruct(QStruct, list):\n    """ List容器结构 """\n    def onNetUnPack(self):\n        return list(self)\n\nclass QDictStruct(QStruct, dict):\n    """ Dict容器结构 """\n    def onNetUnPack(self):\n        return dict(self)\n\nclass QTupleStruct(QStruct, tuple):\n    """ Tuple容器结构 """\n    def onNetUnPack(self):\n        return tuple(self)',rootClientSystemPy='# -*- coding: utf-8 -*-\r\nfrom QuModLibs.Client import *\r\nfrom modConfig import *\r\n\r\ncompFactory = clientApi.GetEngineCompFactory()\r\nlevelId = clientApi.GetLevelId()\r\nsubsidiaryInterface = None\r\ninitializeInterface = None\r\ntimer = None\r\ntipsCount = 5\r\n\r\ndef MainTip():\r\n    global tipsCount, subsidiaryInterface, initializeInterface\r\n    if not subsidiaryInterface:\r\n        # ===== 尝试重新获取主包接口 =====\r\n        subsidiaryInterface = compFactory.CreateModAttr("ysm").GetAttr("ysmConfigInterface")\r\n        initializeInterface = compFactory.CreateModAttr("ysm").GetAttr("ysmInitializeInterface")\r\n        # =============================\r\n        compFactory.CreateTextNotifyClient(levelId).SetLeftCornerNotify("§7=====[ §bYSM §e提示 §7]=====\\n§r检测到您§4未安装§aYSM主包!\\n§b[YSM]是，史蒂夫模型(Yes Steve Model)\\n§r请前往§e资源中心§r下载并安装!\\n否则附属包将§e无法正常运行!\\n§7如果是误报请忽略,剩余提醒次数: §r{}\\n\\n§r正在尝试重新获取主包...\\n\\n§7-----Yes Steve Model".format(tipsCount))\r\n        tipsCount -= 1\r\n        if tipsCount <= 0:\r\n            compFactory.CreateGame(levelId).CancelTimer(timer)\r\n            compFactory.CreateTextNotifyClient(levelId).SetLeftCornerNotify("§b获取YSM主包 §c失败!")\r\n    else:\r\n        compFactory.CreateTextNotifyClient(levelId).SetLeftCornerNotify("§b获取YSM主包 §a成功!")\r\n        compFactory.CreateGame(levelId).CancelTimer(timer)\r\n\r\n@Listen("LoadClientAddonScriptsAfter")\r\ndef OnLoadScriptsAfter(args):\r\n    # ========== 获取接口并添加模型数据 ==========\r\n    global subsidiaryInterface, initializeInterface, timer\r\n    subsidiaryInterface = compFactory.CreateModAttr("ysm").GetAttr("ysmConfigInterface")\r\n    if not subsidiaryInterface:\r\n        timer = compFactory.CreateGame(levelId).AddRepeatedTimer(10.0, MainTip)\r\n        return\r\n    modelList = subsidiaryInterface(configList)\r\n    print("=== 附属包添加以下成功模型 ===\\n{}".format(str(modelList)))\r\n    # ========== 获取接口并添加初始化变量 ==========\r\n    initializeInterface = compFactory.CreateModAttr("ysm").GetAttr("ysmInitializeInterface")\r\n    if not initializeInterface:\r\n        return\r\n    try:\r\n        initializeInterface(initialize)\r\n    except NameError:\r\n        print("=== 未定义 initialize ===")\r\n',rootModMainPy='# -*- coding: utf-8 -*-\r\nfrom QuModLibs.QuMod import *\r\nMOD = EasyMod()\r\nMOD.Client("ClientSystem")\r\n',modules=[{description:"",type:"resources",uuid:"",version:[0,0,1]}],header={description:"",name:"resource_pack",uuid:"",version:[0,0,1],min_engine_version:[1,18,0]},format_version=1,resourcePackManifest={modules:modules,header:header,format_version:format_version};function behaviorPackGenerator(behaviorPackPath,modelId){fs$1.mkdirSync(behaviorPackPath,{recursive:!0}),fs$1.mkdirSync(path.join(behaviorPackPath,"entities"),{recursive:!0});let camelModelId=modelId.replace(/_([a-z])/g,((_,text)=>text.toUpperCase())),scriptsPath=path.join(behaviorPackPath,camelModelId+"Scripts");fs$1.mkdirSync(path.join(scriptsPath,"QuModLibs","Systems","Loader"),{recursive:!0});let copyPackManifest=JSON.parse(JSON.stringify(behaviorPackManifest));copyPackManifest.modules[0].uuid=crypto.randomUUID(),copyPackManifest.header.uuid=crypto.randomUUID(),fs.writeFileSync(path.join(behaviorPackPath,"pack_manifest.json"),compileJSON(copyPackManifest));let loaderDir=path.join(scriptsPath,"QuModLibs","Systems","Loader");fs.writeFileSync(path.join(loaderDir,"__init__.py"),""),fs.writeFileSync(path.join(loaderDir,"Client.py"),loaderClientPy),fs.writeFileSync(path.join(loaderDir,"Server.py"),loaderServerPy),fs.writeFileSync(path.join(loaderDir,"SharedRes.py"),loaderSharedResPy),fs.writeFileSync(path.join(scriptsPath,"QuModLibs","Systems","__init__.py"),"");let quModLibsDir=path.join(scriptsPath,"QuModLibs");return fs.writeFileSync(path.join(quModLibsDir,"__init__.py"),""),fs.writeFileSync(path.join(quModLibsDir,"Client.py"),quClientPy),fs.writeFileSync(path.join(quModLibsDir,"IN.py"),quINPy),fs.writeFileSync(path.join(quModLibsDir,"Information.py"),quInformationPy),fs.writeFileSync(path.join(quModLibsDir,"Math.py"),quMathPy),fs.writeFileSync(path.join(quModLibsDir,"QuMod.py"),quQuModPy),fs.writeFileSync(path.join(quModLibsDir,"Server.py"),quServerPy),fs.writeFileSync(path.join(quModLibsDir,"Util.py"),quUtilPy),fs.writeFileSync(path.join(scriptsPath,"__init__.py"),""),fs.writeFileSync(path.join(scriptsPath,"ClientSystem.py"),rootClientSystemPy),fs.writeFileSync(path.join(scriptsPath,"modMain.py"),rootModMainPy),scriptsPath}function resourcePackGenerator(resourcePackPath,modelId){fs$1.mkdirSync(resourcePackPath,{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"animations"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"animation_controllers"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"entity"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"models","entity"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"render_controllers"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"shaders"),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"textures","entity",modelId),{recursive:!0}),fs$1.mkdirSync(path.join(resourcePackPath,"textures","ui",modelId),{recursive:!0});let copyPackManifest=JSON.parse(JSON.stringify(resourcePackManifest));copyPackManifest.modules[0].uuid=crypto.randomUUID(),copyPackManifest.header.uuid=crypto.randomUUID(),fs.writeFileSync(path.join(resourcePackPath,"pack_manifest.json"),compileJSON(copyPackManifest))}var configAnimations=[["idle","animation.%model_id%.idle"],["jump","animation.%model_id%.jump"],["run","animation.%model_id%.run"],["walk","animation.%model_id%.walk"],["attacked","animation.%model_id%.attacked"],["sneak","animation.%model_id%.sneak"],["sneaking","animation.%model_id%.sneaking"],["sneak_arm","animation.%model_id%.sneak_arm"],["sneaking_arm","animation.%model_id%.sneaking_arm"],["swim","animation.%model_id%.swim"],["sit","animation.%model_id%.sit"],["ride","animation.%model_id%.ride"],["ride_pig","animation.%model_id%.ride_pig"],["boat","animation.%model_id%.boat"],["sleep","animation.%model_id%.sleep"],["fly","animation.%model_id%.fly"],["elytra_fly","animation.%model_id%.elytra_fly"],["swim_stand","animation.%model_id%.swim_stand"],["climbing","animation.%model_id%.climbing"],["use_righthand","animation.%model_id%.use_mainhand"],["use_lefthand","animation.%model_id%.use_offhand"],["parallel0","animation.%model_id%.parallel0"],["parallel1","animation.%model_id%.parallel1"],["parallel2","animation.%model_id%.parallel2"],["parallel3","animation.%model_id%.parallel3"],["parallel4","animation.%model_id%.parallel4"],["parallel5","animation.%model_id%.parallel5"],["parallel6","animation.%model_id%.parallel6"],["parallel7","animation.%model_id%.parallel7"],["pre_parallel0","animation.%model_id%.pre_parallel0"],["pre_parallel1","animation.%model_id%.pre_parallel1"],["pre_parallel2","animation.%model_id%.pre_parallel2"],["pre_parallel3","animation.%model_id%.pre_parallel3"],["pre_parallel4","animation.%model_id%.pre_parallel4"],["pre_parallel5","animation.%model_id%.pre_parallel5"],["pre_parallel6","animation.%model_id%.pre_parallel6"],["pre_parallel7","animation.%model_id%.pre_parallel7"],["carryon_block","animation.carryon_block"],["carryon_entity","animation.carryon_entity"],["carryon_player","animation.carryon_player"],["carryon_princess","animation.carryon_princess"],["paperdoll","animation.%model_id%.paperdoll"],["sleep_fix","animation.%model_id%.sleep_fix"],["lean","animation.actor.lean_forward"],["riding.landing","animation.riding_land"],["stop","animation.actor.sudden_stop"],["land.local","animation.actor.land.local"],["land","animation.actor.land"],["fall","animation.actor.fall"],["mace_hold","animation.fight.hold_mace"],["third_person_crossbow_equipped","animation.fight.hold_crossbow_normal"],["crossbow_hold","animation.fight.hold_crossbow"],["crossbow_load","animation.fight.load_crossbow"],["crossbow_fire","animation.fight.fire_crossbow"],["crossbow_lock","animation.fight.lock_crossbow"],["mace_hold","animation.fight.hold_mace"],["humanoid_base_pose","animation.actor.base_pose"],["look_at_target_ui","animation.player.look_at_target.ui"],["look_at_target_default","animation.humanoid.look_at_target.default"],["look_at_target_gliding","animation.anthro.glide_pose"],["look_at_target_inverted","animation.anthro.glide_factor"],["lean","animation.actor.lean_forward"],["stop","animation.actor.sudden_stop"],["jump_right","animation.actor.jump_right"],["jump_left","animation.actor.jump_left"],["jump_timer","animation.jump_timer.short"],["fall","animation.actor.fall"],["free_fall","animation.actor.free_fall"],["vert_cap","animation.actor.vertical_cap"],["crawling","animation.actor.crawl"],["crawling.legs","animation.actor.dive"],["swimming","animation.actor.swim_0"],["swim_rot","animation.actor.swim_1"],["riding.legs","animation.anthro.riding_legs"],["holding","animation.fight.hold_item"],["hold_light","animation.fight.hold_light"],["swing_sword_0","animation.fight.sword_swing_0"],["swing_sword_1","animation.fight.sword_swing_1"],["swing_sword_2","animation.fight.sword_swing_2"],["hold_tool","animation.fight.hold_tool"],["hold_tool_right","animation.fight.hold_tool_right"],["hold_tool_bob","animation.fight.tool_bob"],["swing_axe","animation.fight.axe_swing"],["swing_pickaxe","animation.fight.pickaxe_swing"],["skeleton_attack","animation.fight.spike_attack"],["tool_1","animation.fight.tool_1"],["tool_2","animation.fight.tool_2"],["shield_right","animation.fight.shield_right"],["shield_left","animation.fight.shield_left"],["hold_weapon","animation.fight.hold_weapon"],["attack_lock","animation.fight.attack_lock"],["spear_target","animation.fight.spear_rot"],["spear_target_f","animation.fight.spear_rot_f"],["brandish_spear","animation.fight.spear_brandish"],["throw_spear","animation.fight.spear_throw"],["holding_spyglass","animation.action.spyglass"],["put_down_spyglass","animation.action.spyglass_f"],["brushing","animation.action.brush"],["holding_brush","animation.action.brush_stop"],["tooting_goat_horn","animation.toot_horn"],["use_item_progress","animation.using_item_lock"],["attack_timer","animation.fight.attack_timer"],["attack_timer.long","animation.fight.attack_timer.long"],["attack.positions","animation.actor.action"],["attack.rotations","animation.actor.hurt"],["eat","animation.action.eat"],["drink","animation.action.drink"],["bob","animation.actor.idle"],["bow_target","animation.fight.bow_target"],["bow_target_f","animation.fight.bow_target_f"],["bow_and_arrow","animation.fight.bow_pull"],["bow_release","animation.fight.bow_release"],["sleeping","animation.empty"],["die_anim","animation.actor.death"],["die_rot","animation.anthro.death_rot_1"],["cns","animation.conflicting_namespace"],["first_person_base_pose","animation.player.first_person.base_pose"],["first_person_empty_hand","animation.player.first_person.empty_hand"],["first_person_swap_item","animation.player.first_person.swap_item"],["first_person_attack_rotation","animation.player.first_person.attack_test"],["first_person_map_hold","animation.fight.spike_a"],["first_person_map_hold_attack","animation.fight.spike_b"],["first_person_map_hold_off_hand","animation.fight.spike_cancel"],["first_person_map_hold_main_hand","animation.fight.ekips"]],configAnimationsControllers=[["pre_default_ctl","controller.animation.ysm.pre_default_%model_id%"],["move_ctl","controller.animation.ysm.move"],["idle_ctl","controller.animation.ysm.idle_%model_id%"],["fall_ctl","controller.animation.ysm.fall"],["sneak_ctl","controller.animation.ysm.sneak"],["attacked_ctl","controller.animation.ysm.attacked"],["jump_ctl","controller.animation.ysm.jump"],["riding_ctl","controller.animation.ysm.riding"],["sleep_ctl","controller.animation.ysm.sleep"],["carryon_ctl","controller.animation.ysm.carryon"],["axe_controller","controller.animation.fight.axe"],["crossbow_controller","controller.animation.fight.crossbow"],["controller_third_person","controller.animation.third_person"],["controller_sprint","controller.animation.player.sprint"],["controller_fall","controller.animation.fall"],["controller_land","controller.animation.player.land"],["controller_land.local","controller.animation.local.land"],["controller_jump.1st_p","controller.animation.first_person.jump"],["controller_fall.1st_p","controller.animation.first_person.fall"],["controller_land.1st_p","controller.animation.first_person.land"],["controller_in_air","controller.animation.player.in_air"],["controller_hold","controller.animation.player.hold"],["controller_use","controller.animation.player.use"],["controller_swim","controller.animation.player_anim.swim"],["controller_swing","controller.animation.fight"],["root","controller.animation.actor.root"],["hudplayer","controller.animation.player.hudplayer"],["look_at_target","controller.animation.humanoid.target_anim"],["first_person_attack_controller","controller.animation.fight.1st_person"],["first_person_map_controller",""],["paperdoll_ctl","controller.animation.paperdoll"]],configAnimate=[["paperdoll_ctl","v.is_paperdoll"],["carryon_ctl","!v.is_first_person"],["root",""],["first_person_attack_controller","v.is_first_person"],["controller_third_person","!v.is_paperdoll&&!v.is_first_person&&!q.is_spectator"],["pre_default_ctl","!v.is_first_person&&!v.is_paperdoll"],["fall_ctl","!v.is_first_person"],["jump_ctl","!v.is_first_person"],["land_ctl","!v.is_first_person"],["sneak_ctl","!v.is_first_person"],["attacked_ctl","!v.is_first_person"],["riding_ctl","!v.is_first_person"],["idle_ctl","!q.is_sneaking&&!v.is_first_person&&!v.is_paperdoll&&q.is_on_ground&&!q.is_moving&&!q.is_in_water&&!query.is_sleeping&&!q.is_riding"],["move_ctl","!q.is_sneaking&&!v.is_first_person"],["sleep_ctl","!v.is_first_person"],["crossbow_ctl",""]],configPreviewAnimation=[["idle","animation.%model_id%.idle","待机"],["walk","animation.%model_id%.walk","走路"],["run","animation.%model_id%.run","跑步"],["jump","animation.%model_id%.jump","跳跃"],["attacked","animation.%model_id%.attacked","受击"],["sneak","animation.%model_id%.sneak","潜行"],["swim","animation.%model_id%.swim","游泳"],["sit","animation.%model_id%.sit","坐"],["ride","animation.%model_id%.ride","骑乘(马、驴、骡)"],["boat","animation.%model_id%.boat","坐船"],["sleep","animation.%model_id%.sleep","睡觉"],["fly","animation.%model_id%.fly","飞行(创造)"],["elytra_fly","animation.%model_id%.elytra_fly","飞行(鞘翅)"],["swim_stand","animation.%model_id%.swim_stand","水面飘浮"],["climbing","animation.%model_id%.climbing","爬行"],["use_righthand","animation.%model_id%.use_righthand","使用右手"],["use_lefthand","animation.%model_id%.use_lefthand","使用左手"],["carryon_block","animation.carryon_block","抱起方块"],["carryon_entity","animation.carryon_entity","抱起生物"],["carryon_player","animation.carryon_player","抱起玩家"],["carryon_princess","animation.carryon_princess","被抱着"]];function jsToPythonConfig(obj,forceTuple=!1){if(Array.isArray(obj))return forceTuple?`(${obj.map((v=>jsToPythonConfig(v,forceTuple))).join(", ")}${1===obj.length?",":""})`:`[${obj.map(jsToPythonConfig).join(", ")}]`;if("boolean"==typeof obj)return obj?"True":"False";if("number"==typeof obj)return obj.toString();if("string"==typeof obj)return`"${obj=obj.replaceAll("\n","")}"`;if("object"==typeof obj){const entries=Object.entries(obj).map((([key,value])=>"animations"===key||"animation_controllers"===key||"animate"===key||"render_controllers"===key||"extra"===key||"preview_animation"===key||"labels"===key?`"${key}": [${jsToPythonConfig(value,!0).slice(1,-1)}]`:`"${key}": ${jsToPythonConfig(value)}`));return`{${entries.join(", ")}}`}}function fixTextureName(name){if(name=name.toLowerCase().replace(/[\s-]+/g,"_"),/[\u4E00-\u9FA5]+/g.test(name)){let hasExtension=!1;name.endsWith(".png")&&(hasExtension=!0,name=name.substring(0,name.length-4));const bytes=(new TextEncoder).encode(name);let binary="";for(let i=0;i<bytes.length;i++)binary+=String.fromCharCode(bytes[i]);return hasExtension?btoa(binary).toLowerCase().replaceAll("+","_").replaceAll("/","_").replaceAll("=","")+".png":btoa(binary).toLowerCase().replaceAll("+","_").replaceAll("/","_").replaceAll("=","")}return name}function authorTransform(srcAuthors,modelId){if(!srcAuthors)return[{name:"???",role:"",comment:""}];let outputAuthors=[];for(let author of srcAuthors){let newAuthor={name:author.name??"???",role:author.role??"",comment:author.comment??""};if(author.avatar){let avatarName=fixTextureName(pathToName(author.avatar,!1));newAuthor.avatar=`textures/ui/${modelId}/${avatarName}`}outputAuthors.push(newAuthor)}return outputAuthors}function screenSortTransformWithoutDefaultTexture(screenSort,files){let defaultTextureName,index=0;for(let texture of files.player.texture){if("object"==typeof texture&&texture.uv&&(texture=texture.uv),0===index)screenSort.push("default"),defaultTextureName=fixTextureName(pathToName(texture,!1));else{let textureName=fixTextureName(pathToName(texture,!1));screenSort.push(textureName)}index++}return defaultTextureName}function screenSortTransformWithDefaultTexture(defaultTextureName,screenSort,files){screenSort.push("default");for(let texture of files.player.texture){"object"==typeof texture&&texture.uv&&(texture=texture.uv);let textureName=fixTextureName(pathToName(texture,!1));textureName!==defaultTextureName&&screenSort.push(textureName)}}function screenSortTransform(files,ysmJson){let defaultTextureName,screenSort=[],allTextureNames=[];if(ysmJson.files&&ysmJson.files.player&&ysmJson.files.player.texture&&ysmJson.files.player.texture.forEach((texture=>{"object"==typeof texture&&texture.uv&&(texture=texture.uv);let textureName=fixTextureName(pathToName(texture,!1));allTextureNames.push(textureName)})),ysmJson.properties&&ysmJson.properties.default_texture){let defaultTextureName=fixTextureName(pathToName(ysmJson.properties.default_texture,!1));return allTextureNames.includes(defaultTextureName)?screenSortTransformWithDefaultTexture(defaultTextureName,screenSort,files):defaultTextureName=screenSortTransformWithoutDefaultTexture(screenSort,files),{screenSort:screenSort,defaultTextureName:defaultTextureName}}return defaultTextureName=screenSortTransformWithoutDefaultTexture(screenSort,files),{screenSort:screenSort,defaultTextureName:defaultTextureName}}function defaultSkinSwitchTransform(skinSwitch,ysmJson,modelId,defaultTextureName,extraAnimation,existAnimations){let heightScale=ysmJson.properties?.height_scale??.7,widthScale=ysmJson.properties?.width_scale??.7,defaultSkinSwitch={y_offset:0,main_scale:.5,gui_scale:1,player_scale:Math.min(widthScale,heightScale),gui_animation:`animation.${modelId}.gui`,texture:`textures/entity/${modelId}/${defaultTextureName}`,geometry:`geometry.${modelId}`,animations:[],animation_controllers:[],animate:[],render_controllers:[],extra:[]};skinSwitch.default=defaultSkinSwitch;let defaultAnimations=defaultSkinSwitch.animations;for(let animation of configAnimations){let transformName=animation[1].replace("%model_id%",modelId);existAnimations.includes(transformName)?defaultAnimations.push([animation[0],transformName]):"use_righthand"===animation[0]||"use_lefthand"===animation[0]?defaultAnimations.push([animation[0],`animation.commander.${animation[0]}`]):defaultAnimations.push([animation[0],animation[1].replace("%model_id%","commander")])}Object.values(extraAnimation).forEach((value=>{if(value[1].startsWith("#"))return;let newAnimationName=`animation.${modelId}.${value[1]}`;existAnimations.includes(newAnimationName)?defaultAnimations.push([value[1],newAnimationName]):defaultAnimations.push([value[1],`animation.commander.${value[1]}`])}));let extraAnimationButtons=ysmJson.properties?.extra_animation_buttons??[];for(let button of extraAnimationButtons)if(Array.isArray(button.config_forms))for(let form of button.config_forms){form.id=crypto.randomUUID();let labels=form.labels;if(labels){let outputLabels=[];Object.keys(labels).forEach((key=>{let value=labels[key];outputLabels.push([key,value])})),form.labels=outputLabels}}extraAnimationButtons&&extraAnimationButtons.length>0&&(defaultSkinSwitch.extra_animation_buttons=extraAnimationButtons);let defaultAnimationController=defaultSkinSwitch.animation_controllers;for(let controller of configAnimationsControllers)defaultAnimationController.push([controller[0],controller[1].replace("%model_id%",modelId)]);let defaultAnimate=defaultSkinSwitch.animate;for(let animate of configAnimate)defaultAnimate.push([animate[0],animate[1]]);defaultSkinSwitch.render_controllers=[[`controller.render.player.ysm_${modelId}_first_person`,""]];let defaultExtraAnimation=defaultSkinSwitch.extra;Object.values(extraAnimation).map((value=>{let displayAnimationName=value[0],newAnimationName=value[1];newAnimationName.startsWith("#")?defaultExtraAnimation.push([displayAnimationName,newAnimationName]):defaultExtraAnimation.push([displayAnimationName,`/playanimation @s ${newAnimationName} default 0 \\"query.vertical_speed>0.3||query.ground_speed>0.3||q.is_sneaking\\"`])}))}function extraSkinSwitchTransform(screenSort,skinSwitch,modelId){if(!(screenSort.length<=1))for(let i=1;i<screenSort.length;i++){let textureName=screenSort[i];skinSwitch[textureName]={inherit:!0,player_scale:.8,texture:`textures/entity/${modelId}/${textureName}`}}}function modConfigGenerator(filePath,ysmJson,modelId,variables,extraAnimation,existAnimations){let metadata=ysmJson.metadata,files=ysmJson.files,configList={};configList.text=metadata.name??"",configList.entityIdentifier=`ysm:${modelId}`,configList.tips=metadata.tips??"",configList.gui_render_controller=`controller.render.ysm_${modelId}_gui`,configList.preview_parallel=`animation.${modelId}.paperdoll`,configList.authors=authorTransform(metadata.authors,modelId);let{screenSort:screenSort,defaultTextureName:defaultTextureName}=screenSortTransform(files,ysmJson);configList.screen_sort=screenSort;let skinSwitch={};defaultSkinSwitchTransform(skinSwitch,ysmJson,modelId,defaultTextureName,extraAnimation,existAnimations),extraSkinSwitchTransform(screenSort,skinSwitch,modelId),configList.skin_switch=skinSwitch;let previewAnimation=[];for(let entry of configPreviewAnimation)previewAnimation.push([entry[0],entry[1].replace("%model_id%",modelId),entry[2]]);configList.preview_animation=previewAnimation;let newVariables=[];variables.forEach((v=>{newVariables.push(v+"=0;")}));let outputVariables=jsToPythonConfig(newVariables).slice(1,-1),outputConfigList=jsToPythonConfig(configList);fs.writeFileSync(filePath,`# -*- coding: utf-8 -*-\ninitialize = [${outputVariables}]\nconfigList = [${outputConfigList}]`)}var allowAnimation=["idle","jump","run","walk","attacked","sneak","sneaking","sneak_arm","sneaking_arm","swim","sit","ride","ride_pig","boat","sleep","fly","elytra_fly","swim_stand","climbing","use_righthand","use_lefthand","parallel0","parallel1","parallel2","parallel3","parallel4","parallel5","parallel6","parallel7","pre_parallel0","pre_parallel1","pre_parallel2","pre_parallel3","pre_parallel4","pre_parallel5","pre_parallel6","pre_parallel7","carryon_block","carryon_entity","carryon_player","carryon_princess","paperdoll","sleep_fix","lean","riding.landing","stop","land.local","land","fall","mace_hold","third_person_crossbow_equipped","crossbow_hold","crossbow_load","crossbow_fire","crossbow_lock","mace_hold","humanoid_base_pose","look_at_target_ui","look_at_target_default","look_at_target_gliding","look_at_target_inverted","lean","stop","jump_right","jump_left","jump_timer","fall","free_fall","vert_cap","crawling","crawling.legs","swimming","swim_rot","riding.legs","holding","hold_light","swing_sword_0","swing_sword_1","swing_sword_2","hold_tool","hold_tool_right","hold_tool_bob","swing_axe","swing_pickaxe","skeleton_attack","tool_1","tool_2","shield_right","shield_left","hold_weapon","attack_lock","spear_target","spear_target_f","brandish_spear","throw_spear","holding_spyglass","put_down_spyglass","brushing","holding_brush","tooting_goat_horn","use_item_progress","attack_timer","attack_timer.long","attack.positions","attack.rotations","eat","drink","bob","bow_target","bow_target_f","bow_and_arrow","bow_release","sleeping","die_anim","die_rot","cns","first_person_base_pose","first_person_empty_hand","first_person_swap_item","first_person_attack_rotation","first_person_map_hold","first_person_map_hold_attack","first_person_map_hold_off_hand","first_person_map_hold_main_hand"],string={"ysm.has_helmet":"query.has_armor_slot(0)","ysm.has_chest_plate":"query.has_armor_slot(1)","ysm.has_leggings":"query.has_armor_slot(2)","ysm.has_boots":"query.has_armor_slot(3)","ysm.has_mainhand":"query.is_item_equipped(0)","ysm.has_offhand":"query.is_item_equipped(1)","ysm.is_riptide":"query.can_damage_nearby_mobs","ysm.has_elytra":"query.is_item_name_any('slot.armor.chest','minecraft:elytra')","ysm.":"query.mod.ysm_","q.":"query.","v.":"variable.","query.head_x_rotation":"query.head_x_rotation(0)","query.head_y_rotation":"query.head_y_rotation(0)","query.is_item_name_any('Mainhand'":"query.is_item_name_any('slot.weapon.mainhand'","query.is_item_name_any('Offhand'":"query.is_item_name_any('slot.weapon.offhand'"},regex={},molangReplacerTable={string:string,regex:regex},util$6,objectUtil;function molangReplacer(animation,variables,isTimeline=!1){if(Array.isArray(animation))return animation.map((v=>allAllowCheck(v)?molangReplacer(v,variables,isTimeline):isTimeline?void 0:0));if("object"==typeof animation){for(let key in animation)"lerp_mode"!==key&&(animation[key]=molangReplacer(animation[key],variables,isTimeline));return animation}if("string"==typeof animation){for(let key in molangReplacerTable.string)animation=animation.replaceAll(key,molangReplacerTable.string[key]);for(let key in molangReplacerTable.regex)animation=animation.replaceAll(new RegExp(key,"g"),molangReplacerTable.regex[key]);let variableReg=/(variable\.[\w.]+)/g,variableResult=(animation=animation.replaceAll(/\{data\d}/g,"0")).match(variableReg);return variableResult&&variableResult.forEach((v=>variables.add(v))),isTimeline||";"!==animation.charAt(animation.length-1)||(animation=animation.substring(0,animation.length-1)),!(/[><!=]=/.test(animation)&&animation.includes("?"))&&animation.includes("=")&&";"!==animation.charAt(animation.length-1)&&(animation+=";"),animation}return animation}function molangRemoveVariable(animation){if(Array.isArray(animation))return animation.map((v=>molangRemoveVariable(v)));if("object"==typeof animation){for(let key in animation)"lerp_mode"!==key&&(animation[key]=molangRemoveVariable(animation[key]));return animation}return"string"==typeof animation&&(animation=Animator.MolangParser.parse(animation)),animation}function hasMolangToLinear(allTimeKey,animation){let hasMolang=!1;for(let time of allTimeKey){let frameData=animation[time];hasMolang&&(hasMolang=!1,"object"==typeof frameData&&frameData.lerp_mode&&(frameData.lerp_mode="linear")),Array.isArray(frameData)?hasMolang=arrayHasMolang(frameData):"string"==typeof frameData?hasMolang=!0:"object"==typeof frameData&&(frameData.pre&&Array.isArray(frameData.pre)&&(hasMolang=arrayHasMolang(frameData.pre)),!hasMolang&&frameData.post&&Array.isArray(frameData.post)&&(hasMolang=arrayHasMolang(frameData.post)))}}function lastFrameToLinear(allTimeKey,animation){let lastFrame=animation[allTimeKey[allTimeKey.length-1]];"object"==typeof lastFrame&&lastFrame.lerp_mode&&(lastFrame.lerp_mode="linear")}function catmullRomFrameToLinear(animation){if("object"==typeof animation){let allTimeKey=Object.keys(animation);hasMolangToLinear(allTimeKey,animation),lastFrameToLinear(allTimeKey,animation)}}function arrayHasMolang(array){for(let i=0;i<array.length;i++)if("string"==typeof array[i])return!0;return!1}function allAllowCheck(text){if("string"==typeof text){if(/[\u4E00-\u9FA5]+/g.test(text))return!1;if("[;"===text||"];"===text)return!1;if(text.includes("ysm.bone_rot"))return!1}return!0}function animationControllersGenerator(resourcePackPath,modelId){let filePath=path.join(resourcePackPath,"animation_controllers",`${modelId}.animation_controllers.json`),fileJson={format_version:"1.19.0",animation_controllers:{}};fileJson.animation_controllers[`controller.animation.ysm.idle_${modelId}`]={states:{default:{animations:["idle"]}}};let preDefaultJson=fileJson.animation_controllers[`controller.animation.ysm.pre_default_${modelId}`]={states:{default:{animations:[]}}};for(let num=0;num<8;num++)preDefaultJson.states.default.animations.push(`pre_parallel${num}`);for(let num=0;num<8;num++)preDefaultJson.states.default.animations.push(`parallel${num}`);fs.writeFileSync(filePath,compileJSON(fileJson))}function fixHeadXRotationPrePost(value,bone,key){if(value.pre){let pre=value.pre;"number"==typeof pre||"string"==typeof pre?bone.rotation[key].pre=0:Array.isArray(pre)&&(pre[0]=0)}if(value.post){let post=value.post;"number"==typeof post||"string"==typeof post?bone.rotation[key].post=0:Array.isArray(post)&&(post[0]=0)}}function fixHeadXRotationList(headRotation,bone){Object.entries(headRotation).map((([key,value])=>{"number"==typeof value||"string"==typeof value?bone.rotation[key]=0:Array.isArray(value)?value[0]=0:"object"==typeof value&&fixHeadXRotationPrePost(value,bone,key)}))}function fixHeadXRotation(bone){let headRotation=bone.rotation;"number"==typeof headRotation||"string"==typeof headRotation?bone.rotation=0:Array.isArray(headRotation)?headRotation[0]=0:"object"==typeof headRotation&&fixHeadXRotationList(headRotation,bone)}function fixSneakArmAnimations(animation,transformAnimations,modelId,animationName){let needCutArmBones=["LeftArm","RightArm","LeftForeArm","RightForeArm"],armAnimation={loop:!0,bones:{}};for(let boneName in animation.bones)needCutArmBones.includes(boneName)&&(armAnimation.bones[boneName]=animation.bones[boneName],delete animation.bones[boneName]);animation.animation_length&&(armAnimation.animation_length=animation.animation_length),transformAnimations[`animation.${modelId}.${animationName}_arm`]=armAnimation}function perBoneFix(animation,boneName,variables){let bone=animation.bones[boneName];bone.rotation&&(bone.rotation=molangReplacer(bone.rotation,variables),"Head"===boneName&&fixHeadXRotation(bone),catmullRomFrameToLinear(bone.rotation)),bone.position&&(bone.position=molangReplacer(bone.position,variables),catmullRomFrameToLinear(bone.position)),bone.scale&&(bone.scale=molangReplacer(bone.scale,variables),catmullRomFrameToLinear(bone.scale))}function handleGuiAnimation(tmpGuiAnimations,guiAnimationName,transformAnimations,modelId){let guiAnimations={loop:!0,bones:{}};for(let i=0;i<8;i++){let name=`pre_parallel${i}`;tmpGuiAnimations[name]&&Object.assign(guiAnimations.bones,tmpGuiAnimations[name].bones)}guiAnimationName&&tmpGuiAnimations[guiAnimationName]&&Object.assign(guiAnimations.bones,tmpGuiAnimations[guiAnimationName].bones);for(let i=0;i<8;i++){let name=`parallel${i}`;tmpGuiAnimations[name]&&Object.assign(guiAnimations.bones,tmpGuiAnimations[name].bones)}guiAnimations=JSON.parse(JSON.stringify(guiAnimations));for(let boneName in guiAnimations.bones){let bone=guiAnimations.bones[boneName];bone.rotation&&(bone.rotation=molangRemoveVariable(bone.rotation)),bone.position&&(bone.position=molangRemoveVariable(bone.position)),bone.scale&&(bone.scale=molangRemoveVariable(bone.scale))}transformAnimations[`animation.${modelId}.gui`]=guiAnimations}function animationTransformGenerator(srcPath,destPath,modelId,guiAnimationName,variables){let srcAnimationJson=autoParseJSON(fs.readFileSync(srcPath,"utf-8"),!1),transformAnimations={},tmpGuiAnimations={};srcAnimationJson.format_version="1.8.0";for(let animationName in srcAnimationJson.animations){if(!allowAnimation.includes(animationName))continue;let animation=srcAnimationJson.animations[animationName];for(let boneName in animation.bones)perBoneFix(animation,boneName,variables);transformAnimations[`animation.${modelId}.${animationName}`]=animation,animation.timeline=molangReplacer(animation.timeline,variables,!0),"sneak"!==animationName&&"sneaking"!==animationName||fixSneakArmAnimations(animation,transformAnimations,modelId,animationName),["ride","ride_pig","boat","sleep"].includes(animationName)&&(animation.loop=!0),animationName.includes("parallel")&&(tmpGuiAnimations[animationName]=animation),guiAnimationName&&animationName===guiAnimationName&&(tmpGuiAnimations[guiAnimationName]=animation)}handleGuiAnimation(tmpGuiAnimations,guiAnimationName,transformAnimations,modelId),transformAnimations[`animation.${modelId}.paperdoll`]??=transformAnimations[`animation.${modelId}.gui`],transformAnimations[`animation.${modelId}.sleep_fix`]??={loop:!0,bones:{sleepfix:{rotation:[-90,0,0]}}},transformAnimations=moveKeyAfter(transformAnimations,`animation.${modelId}.sleep_fix`,`animation.${modelId}.sleep`),srcAnimationJson.animations=transformAnimations,srcAnimationJson.geckolib_format_version&&delete srcAnimationJson.geckolib_format_version,fs.writeFileSync(destPath,compileJSON(srcAnimationJson))}function extraAnimationTransformGenerator(srcPath,destPath,ysmJson,modelId,variables){let extraAnimation={};if(ysmJson.properties&&ysmJson.properties.extra_animation){let rawExtraAnimation=ysmJson.properties.extra_animation,index=0;for(let key in rawExtraAnimation){let displayName=rawExtraAnimation[key];displayName.startsWith("#")?(extraAnimation[`button${index}`]=[`button${index}`,displayName],extraAnimation[key]=[`extra${index}`,`extra${index}`]):(displayName=displayName||`extra${index}`,extraAnimation[key]=[displayName,`extra${index}`]),index++}}else for(let index=0;index<8;index++)extraAnimation[`extra${index}`]=[`extra${index}`,`extra${index}`];if(!fs.existsSync(srcPath))return{};let srcAnimationJson=autoParseJSON(fs.readFileSync(srcPath,"utf-8"),!1),transformAnimations={};srcAnimationJson.format_version="1.8.0";for(let animationName in srcAnimationJson.animations){if(!extraAnimation[animationName])continue;let animation=srcAnimationJson.animations[animationName];for(let boneName in animation.bones)perBoneFix(animation,boneName,variables);if(extraAnimation[animationName]){transformAnimations[`animation.${modelId}.${extraAnimation[animationName][1]}`]=animation}else transformAnimations[`animation.${modelId}.${animationName}`]=animation;animation.timeline=molangReplacer(animation.timeline,variables,!0),animation.override_previous_animation=!0}return srcAnimationJson.animations=transformAnimations,srcAnimationJson.geckolib_format_version&&delete srcAnimationJson.geckolib_format_version,fs.writeFileSync(destPath,compileJSON(srcAnimationJson)),extraAnimation}function moveKeyAfter(obj,keyToMove,keyAfter){if(!(keyToMove in obj)||!(keyAfter in obj))return console.error("Both keys must exist in the object!"),obj;const newObj={},keys=Object.keys(obj);for(let key of keys)key!==keyToMove&&(newObj[key]=obj[key],key===keyAfter&&(newObj[keyToMove]=obj[keyToMove]));return newObj}function entityJsonGenerator(entityJsonFilePath,defaultTextureName,modelId){fs.writeFileSync(entityJsonFilePath,compileJSON({format_version:"1.10.0","minecraft:client_entity":{description:{identifier:`ysm:${modelId}`,materials:{default:"entity_alphatest"},textures:{default:`textures/entity/${modelId}/${defaultTextureName}`},geometry:{default:`geometry.${modelId}`},render_controllers:[`controller.render.ysm_${modelId}_gui`],scripts:{initialize:["variable.ysm_skin = 0.0;","variable.ysm_gui = 0.0;","variable.ysm_show = 0.0;","variable.ysm_preview = 0.0;","variable.ysm_light = 0.0;"]}}}}))}function entityModelGenerator(srcModelPath,destModelPath,modelId){let modelJson=autoParseJSON(fs.readFileSync(srcModelPath,"utf-8"),!1);modelJson.format_version="1.12.0",modelJson["minecraft:geometry"][0].description.identifier=`geometry.${modelId}`;let hasWaistBone=!1,upBodyIndex=-1,hasSleepFixBone=!1,rootIndex=-1,bones=modelJson["minecraft:geometry"][0].bones;for(let i=bones.length-1;i>=0;i--){let bone=bones[i];if("RightHandLocator"===bone.name){let newBone={name:"rightItem",parent:"RightHandLocator",pivot:bone.pivot,locators:{lead_hold:bone.pivot}};bones.splice(i+1,0,newBone)}else if("LeftHandLocator"===bone.name){let newBone={name:"leftItem",parent:"LeftHandLocator",pivot:bone.pivot};bones.splice(i+1,0,newBone)}else"waist"===bone.name?(hasWaistBone=!0,Blockbench.notification("提示：","当前模型已经包含了 waist 组，插件无法再添加 waist 组")):"UpBody"===bone.name?upBodyIndex=i:"sleepfix"===bone.name?(hasSleepFixBone=!0,Blockbench.notification("提示：","当前模型已经包含了 sleepfix 组，插件无法再添加 sleepfix 组")):"Root"===bone.name&&(rootIndex=i)}if(!hasWaistBone)if(upBodyIndex<0)Blockbench.notification("提示：","当前模型缺少 UpBody 组，插件无法添加 waist 组");else if("UpBody"===bones[upBodyIndex].name){let parent=bones[upBodyIndex].parent;bones[upBodyIndex].parent="waist";let waist={name:"waist",parent:parent,pivot:bones[upBodyIndex].pivot};bones.splice(upBodyIndex,0,waist)}if(!hasSleepFixBone)if(rootIndex<0)Blockbench.notification("提示：","当前模型缺少 Root 组，插件无法添加 sleepfix 组");else if("Root"===bones[rootIndex].name){let parent=bones[rootIndex].parent;bones[rootIndex].parent="sleepfix";let sleepFix={name:"sleepfix",pivot:bones[rootIndex].pivot};parent&&(sleepFix.parent=parent),bones.splice(rootIndex,0,sleepFix)}fs.writeFileSync(destModelPath,compileJSON(modelJson))}function guiRenderGenerator(modelId,renderFilePath){let renderJson={format_version:"1.8.0",render_controllers:{}};renderJson.render_controllers[`controller.render.ysm_${modelId}_gui`]={arrays:{textures:{"Array.skins":["Texture.default"]},materials:{"Array.materials":["Material.default","Material.tohru"]}},geometry:"Geometry.default",materials:[{"*":"Array.materials[variable.ysm_light]"}],textures:["Array.skins[variable.ysm_skin]"]},fs.writeFileSync(renderFilePath,compileJSON(renderJson))}function getRightArmBones(modelFilePath){let bones=autoParseJSON(fs.readFileSync(modelFilePath,"utf-8"),!1)["minecraft:geometry"][0].bones,rightArmBones=["RightArm"];for(let bone of bones)bone.parent&&rightArmBones.includes(bone.parent)&&rightArmBones.push(bone.name);return rightArmBones}function firstPersonRenderGenerator(modelId,modelFilePath,renderFilePath,rawArmModelPath){let renderJson={format_version:"1.8.0",render_controllers:{}},firstPersonRender=renderJson.render_controllers[`controller.render.player.ysm_${modelId}_first_person`]={geometry:"Geometry.default",materials:[{"*":"Material.default"}],textures:["Texture.default"],part_visibility:[]},mainModelRightArm=getRightArmBones(modelFilePath),armModelRightArm=getRightArmBones(rawArmModelPath),intersection=mainModelRightArm.filter((v=>armModelRightArm.includes(v))),partVisibility=firstPersonRender.part_visibility;partVisibility.push({"*":!1}),intersection.forEach((bone=>{let part={};part[bone]="q.get_equipped_item_name(0) == ''",partVisibility.push(part)})),fs.writeFileSync(renderFilePath,compileJSON(renderJson))}function entityRenderGenerator(resourcePackPath,modelFilePath,modelId,rawArmModelPath){guiRenderGenerator(modelId,path.join(resourcePackPath,"render_controllers",`ysm_${modelId}_gui.render_controllers.json`)),firstPersonRenderGenerator(modelId,modelFilePath,path.join(resourcePackPath,"render_controllers",`ysm_${modelId}_first_person.render_controllers.json`),rawArmModelPath)}!function(util){util.assertEqual=val=>val,util.assertIs=function(_arg){},util.assertNever=function(_x){throw new Error},util.arrayToEnum=items=>{const obj={};for(const item of items)obj[item]=item;return obj},util.getValidEnumValues=obj=>{const validKeys=util.objectKeys(obj).filter((k=>"number"!=typeof obj[obj[k]])),filtered={};for(const k of validKeys)filtered[k]=obj[k];return util.objectValues(filtered)},util.objectValues=obj=>util.objectKeys(obj).map((function(e){return obj[e]})),util.objectKeys="function"==typeof Object.keys?obj=>Object.keys(obj):object=>{const keys=[];for(const key in object)Object.prototype.hasOwnProperty.call(object,key)&&keys.push(key);return keys},util.find=(arr,checker)=>{for(const item of arr)if(checker(item))return item},util.isInteger="function"==typeof Number.isInteger?val=>Number.isInteger(val):val=>"number"==typeof val&&isFinite(val)&&Math.floor(val)===val,util.joinValues=function(array,separator=" | "){return array.map((val=>"string"==typeof val?`'${val}'`:val)).join(separator)},util.jsonStringifyReplacer=(_,value)=>"bigint"==typeof value?value.toString():value}(util$6||(util$6={})),function(objectUtil){objectUtil.mergeShapes=(first,second)=>({...first,...second})}(objectUtil||(objectUtil={}));const ZodParsedType=util$6.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=data=>{switch(typeof data){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return isNaN(data)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":return Array.isArray(data)?ZodParsedType.array:null===data?ZodParsedType.null:data.then&&"function"==typeof data.then&&data.catch&&"function"==typeof data.catch?ZodParsedType.promise:"undefined"!=typeof Map&&data instanceof Map?ZodParsedType.map:"undefined"!=typeof Set&&data instanceof Set?ZodParsedType.set:"undefined"!=typeof Date&&data instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},ZodIssueCode=util$6.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),quotelessJson=obj=>JSON.stringify(obj,null,2).replace(/"([^"]+)":/g,"$1:");class ZodError extends Error{get errors(){return this.issues}constructor(issues){super(),this.issues=[],this.addIssue=sub=>{this.issues=[...this.issues,sub]},this.addIssues=(subs=[])=>{this.issues=[...this.issues,...subs]};const actualProto=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,actualProto):this.__proto__=actualProto,this.name="ZodError",this.issues=issues}format(_mapper){const mapper=_mapper||function(issue){return issue.message},fieldErrors={_errors:[]},processError=error=>{for(const issue of error.issues)if("invalid_union"===issue.code)issue.unionErrors.map(processError);else if("invalid_return_type"===issue.code)processError(issue.returnTypeError);else if("invalid_arguments"===issue.code)processError(issue.argumentsError);else if(0===issue.path.length)fieldErrors._errors.push(mapper(issue));else{let curr=fieldErrors,i=0;for(;i<issue.path.length;){const el=issue.path[i];i===issue.path.length-1?(curr[el]=curr[el]||{_errors:[]},curr[el]._errors.push(mapper(issue))):curr[el]=curr[el]||{_errors:[]},curr=curr[el],i++}}};return processError(this),fieldErrors}static assert(value){if(!(value instanceof ZodError))throw new Error(`Not a ZodError: ${value}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,util$6.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(mapper=issue=>issue.message){const fieldErrors={},formErrors=[];for(const sub of this.issues)sub.path.length>0?(fieldErrors[sub.path[0]]=fieldErrors[sub.path[0]]||[],fieldErrors[sub.path[0]].push(mapper(sub))):formErrors.push(mapper(sub));return{formErrors:formErrors,fieldErrors:fieldErrors}}get formErrors(){return this.flatten()}}ZodError.create=issues=>new ZodError(issues);const errorMap=(issue,_ctx)=>{let message;switch(issue.code){case ZodIssueCode.invalid_type:message=issue.received===ZodParsedType.undefined?"Required":`Expected ${issue.expected}, received ${issue.received}`;break;case ZodIssueCode.invalid_literal:message=`Invalid literal value, expected ${JSON.stringify(issue.expected,util$6.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:message=`Unrecognized key(s) in object: ${util$6.joinValues(issue.keys,", ")}`;break;case ZodIssueCode.invalid_union:message="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:message=`Invalid discriminator value. Expected ${util$6.joinValues(issue.options)}`;break;case ZodIssueCode.invalid_enum_value:message=`Invalid enum value. Expected ${util$6.joinValues(issue.options)}, received '${issue.received}'`;break;case ZodIssueCode.invalid_arguments:message="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:message="Invalid function return type";break;case ZodIssueCode.invalid_date:message="Invalid date";break;case ZodIssueCode.invalid_string:"object"==typeof issue.validation?"includes"in issue.validation?(message=`Invalid input: must include "${issue.validation.includes}"`,"number"==typeof issue.validation.position&&(message=`${message} at one or more positions greater than or equal to ${issue.validation.position}`)):"startsWith"in issue.validation?message=`Invalid input: must start with "${issue.validation.startsWith}"`:"endsWith"in issue.validation?message=`Invalid input: must end with "${issue.validation.endsWith}"`:util$6.assertNever(issue.validation):message="regex"!==issue.validation?`Invalid ${issue.validation}`:"Invalid";break;case ZodIssueCode.too_small:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at least":"more than"} ${issue.minimum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at least":"over"} ${issue.minimum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(issue.minimum))}`:"Invalid input";break;case ZodIssueCode.too_big:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at most":"less than"} ${issue.maximum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at most":"under"} ${issue.maximum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"bigint"===issue.type?`BigInt must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly":issue.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(issue.maximum))}`:"Invalid input";break;case ZodIssueCode.custom:message="Invalid input";break;case ZodIssueCode.invalid_intersection_types:message="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:message=`Number must be a multiple of ${issue.multipleOf}`;break;case ZodIssueCode.not_finite:message="Number must be finite";break;default:message=_ctx.defaultError,util$6.assertNever(issue)}return{message:message}};let overrideErrorMap=errorMap;function setErrorMap(map){overrideErrorMap=map}function getErrorMap(){return overrideErrorMap}const makeIssue=params=>{const{data:data,path:path,errorMaps:errorMaps,issueData:issueData}=params,fullPath=[...path,...issueData.path||[]],fullIssue={...issueData,path:fullPath};if(void 0!==issueData.message)return{...issueData,path:fullPath,message:issueData.message};let errorMessage="";const maps=errorMaps.filter((m=>!!m)).slice().reverse();for(const map of maps)errorMessage=map(fullIssue,{data:data,defaultError:errorMessage}).message;return{...issueData,path:fullPath,message:errorMessage}},EMPTY_PATH=[];function addIssueToContext(ctx,issueData){const overrideMap=getErrorMap(),issue=makeIssue({issueData:issueData,data:ctx.data,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideMap,overrideMap===errorMap?void 0:errorMap].filter((x=>!!x))});ctx.common.issues.push(issue)}class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(status,results){const arrayValue=[];for(const s of results){if("aborted"===s.status)return INVALID;"dirty"===s.status&&status.dirty(),arrayValue.push(s.value)}return{status:status.value,value:arrayValue}}static async mergeObjectAsync(status,pairs){const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key:key,value:value})}return ParseStatus.mergeObjectSync(status,syncPairs)}static mergeObjectSync(status,pairs){const finalObject={};for(const pair of pairs){const{key:key,value:value}=pair;if("aborted"===key.status)return INVALID;if("aborted"===value.status)return INVALID;"dirty"===key.status&&status.dirty(),"dirty"===value.status&&status.dirty(),"__proto__"===key.value||void 0===value.value&&!pair.alwaysSet||(finalObject[key.value]=value.value)}return{status:status.value,value:finalObject}}}const INVALID=Object.freeze({status:"aborted"}),DIRTY=value=>({status:"dirty",value:value}),OK=value=>({status:"valid",value:value}),isAborted=x=>"aborted"===x.status,isDirty=x=>"dirty"===x.status,isValid=x=>"valid"===x.status,isAsync=x=>"undefined"!=typeof Promise&&x instanceof Promise;function __classPrivateFieldGet(receiver,state,kind,f){if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return state.get(receiver)}function __classPrivateFieldSet(receiver,state,value,kind,f){if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return state.set(receiver,value),value}var errorUtil,_ZodEnum_cache,_ZodNativeEnum_cache;"function"==typeof SuppressedError&&SuppressedError,function(errorUtil){errorUtil.errToObj=message=>"string"==typeof message?{message:message}:message||{},errorUtil.toString=message=>"string"==typeof message?message:null==message?void 0:message.message}(errorUtil||(errorUtil={}));class ParseInputLazyPath{constructor(parent,value,path,key){this._cachedPath=[],this.parent=parent,this.data=value,this._path=path,this._key=key}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const handleResult=(ctx,result)=>{if(isValid(result))return{success:!0,data:result.value};if(!ctx.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const error=new ZodError(ctx.common.issues);return this._error=error,this._error}}};function processCreateParams(params){if(!params)return{};const{errorMap:errorMap,invalid_type_error:invalid_type_error,required_error:required_error,description:description}=params;if(errorMap&&(invalid_type_error||required_error))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(errorMap)return{errorMap:errorMap,description:description};return{errorMap:(iss,ctx)=>{var _a,_b;const{message:message}=params;return"invalid_enum_value"===iss.code?{message:null!=message?message:ctx.defaultError}:void 0===ctx.data?{message:null!==(_a=null!=message?message:required_error)&&void 0!==_a?_a:ctx.defaultError}:"invalid_type"!==iss.code?{message:ctx.defaultError}:{message:null!==(_b=null!=message?message:invalid_type_error)&&void 0!==_b?_b:ctx.defaultError}},description:description}}class ZodType{get description(){return this._def.description}_getType(input){return getParsedType(input.data)}_getOrReturnCtx(input,ctx){return ctx||{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}_processInputParams(input){return{status:new ParseStatus,ctx:{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}}_parseSync(input){const result=this._parse(input);if(isAsync(result))throw new Error("Synchronous parse encountered promise.");return result}_parseAsync(input){const result=this._parse(input);return Promise.resolve(result)}parse(data,params){const result=this.safeParse(data,params);if(result.success)return result.data;throw result.error}safeParse(data,params){var _a;const ctx={common:{issues:[],async:null!==(_a=null==params?void 0:params.async)&&void 0!==_a&&_a,contextualErrorMap:null==params?void 0:params.errorMap},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:data,parsedType:getParsedType(data)},result=this._parseSync({data:data,path:ctx.path,parent:ctx});return handleResult(ctx,result)}"~validate"(data){var _a,_b;const ctx={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:data,parsedType:getParsedType(data)};if(!this["~standard"].async)try{const result=this._parseSync({data:data,path:[],parent:ctx});return isValid(result)?{value:result.value}:{issues:ctx.common.issues}}catch(err){(null===(_b=null===(_a=null==err?void 0:err.message)||void 0===_a?void 0:_a.toLowerCase())||void 0===_b?void 0:_b.includes("encountered"))&&(this["~standard"].async=!0),ctx.common={issues:[],async:!0}}return this._parseAsync({data:data,path:[],parent:ctx}).then((result=>isValid(result)?{value:result.value}:{issues:ctx.common.issues}))}async parseAsync(data,params){const result=await this.safeParseAsync(data,params);if(result.success)return result.data;throw result.error}async safeParseAsync(data,params){const ctx={common:{issues:[],contextualErrorMap:null==params?void 0:params.errorMap,async:!0},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:data,parsedType:getParsedType(data)},maybeAsyncResult=this._parse({data:data,path:ctx.path,parent:ctx}),result=await(isAsync(maybeAsyncResult)?maybeAsyncResult:Promise.resolve(maybeAsyncResult));return handleResult(ctx,result)}refine(check,message){const getIssueProperties=val=>"string"==typeof message||void 0===message?{message:message}:"function"==typeof message?message(val):message;return this._refinement(((val,ctx)=>{const result=check(val),setError=()=>ctx.addIssue({code:ZodIssueCode.custom,...getIssueProperties(val)});return"undefined"!=typeof Promise&&result instanceof Promise?result.then((data=>!!data||(setError(),!1))):!!result||(setError(),!1)}))}refinement(check,refinementData){return this._refinement(((val,ctx)=>!!check(val)||(ctx.addIssue("function"==typeof refinementData?refinementData(val,ctx):refinementData),!1)))}_refinement(refinement){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"refinement",refinement:refinement}})}superRefine(refinement){return this._refinement(refinement)}constructor(def){this.spa=this.safeParseAsync,this._def=def,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:data=>this["~validate"](data)}}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this,this._def)}or(option){return ZodUnion.create([this,option],this._def)}and(incoming){return ZodIntersection.create(this,incoming,this._def)}transform(transform){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"transform",transform:transform}})}default(def){const defaultValueFunc="function"==typeof def?def:()=>def;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:defaultValueFunc,typeName:ZodFirstPartyTypeKind.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind.ZodBranded,type:this,...processCreateParams(this._def)})}catch(def){const catchValueFunc="function"==typeof def?def:()=>def;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:catchValueFunc,typeName:ZodFirstPartyTypeKind.ZodCatch})}describe(description){return new(0,this.constructor)({...this._def,description:description})}pipe(target){return ZodPipeline.create(this,target)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[0-9a-z]+$/,ulidRegex=/^[0-9A-HJKMNP-TV-Z]{26}$/i,uuidRegex=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,nanoidRegex=/^[a-z0-9_-]{21}$/i,jwtRegex=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,durationRegex=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,emailRegex=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,_emojiRegex="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let emojiRegex;const ipv4Regex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ipv4CidrRegex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,ipv6Regex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,ipv6CidrRegex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,base64Regex=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,base64urlRegex=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,dateRegexSource="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dateRegex=new RegExp(`^${dateRegexSource}$`);function timeRegexSource(args){let regex="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return args.precision?regex=`${regex}\\.\\d{${args.precision}}`:null==args.precision&&(regex=`${regex}(\\.\\d+)?`),regex}function timeRegex(args){return new RegExp(`^${timeRegexSource(args)}$`)}function datetimeRegex(args){let regex=`${dateRegexSource}T${timeRegexSource(args)}`;const opts=[];return opts.push(args.local?"Z?":"Z"),args.offset&&opts.push("([+-]\\d{2}:?\\d{2})"),regex=`${regex}(${opts.join("|")})`,new RegExp(`^${regex}$`)}function isValidIP(ip,version){return!("v4"!==version&&version||!ipv4Regex.test(ip))||!("v6"!==version&&version||!ipv6Regex.test(ip))}function isValidJWT(jwt,alg){if(!jwtRegex.test(jwt))return!1;try{const[header]=jwt.split("."),base64=header.replace(/-/g,"+").replace(/_/g,"/").padEnd(header.length+(4-header.length%4)%4,"="),decoded=JSON.parse(atob(base64));return"object"==typeof decoded&&null!==decoded&&(!(!decoded.typ||!decoded.alg)&&(!alg||decoded.alg===alg))}catch(_a){return!1}}function isValidCidr(ip,version){return!("v4"!==version&&version||!ipv4CidrRegex.test(ip))||!("v6"!==version&&version||!ipv6CidrRegex.test(ip))}class ZodString extends ZodType{_parse(input){this._def.coerce&&(input.data=String(input.data));if(this._getType(input)!==ZodParsedType.string){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:ctx.parsedType}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)if("min"===check.kind)input.data.length<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("max"===check.kind)input.data.length>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("length"===check.kind){const tooBig=input.data.length>check.value,tooSmall=input.data.length<check.value;(tooBig||tooSmall)&&(ctx=this._getOrReturnCtx(input,ctx),tooBig?addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}):tooSmall&&addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}),status.dirty())}else if("email"===check.kind)emailRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"email",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("emoji"===check.kind)emojiRegex||(emojiRegex=new RegExp(_emojiRegex,"u")),emojiRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"emoji",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("uuid"===check.kind)uuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"uuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("nanoid"===check.kind)nanoidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"nanoid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid"===check.kind)cuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid2"===check.kind)cuid2Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid2",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("ulid"===check.kind)ulidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ulid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("url"===check.kind)try{new URL(input.data)}catch(_a){ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()}else if("regex"===check.kind){check.regex.lastIndex=0;check.regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"regex",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())}else if("trim"===check.kind)input.data=input.data.trim();else if("includes"===check.kind)input.data.includes(check.value,check.position)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{includes:check.value,position:check.position},message:check.message}),status.dirty());else if("toLowerCase"===check.kind)input.data=input.data.toLowerCase();else if("toUpperCase"===check.kind)input.data=input.data.toUpperCase();else if("startsWith"===check.kind)input.data.startsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{startsWith:check.value},message:check.message}),status.dirty());else if("endsWith"===check.kind)input.data.endsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{endsWith:check.value},message:check.message}),status.dirty());else if("datetime"===check.kind){datetimeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"datetime",message:check.message}),status.dirty())}else if("date"===check.kind){dateRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"date",message:check.message}),status.dirty())}else if("time"===check.kind){timeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"time",message:check.message}),status.dirty())}else"duration"===check.kind?durationRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"duration",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"ip"===check.kind?isValidIP(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ip",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"jwt"===check.kind?isValidJWT(input.data,check.alg)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"jwt",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"cidr"===check.kind?isValidCidr(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cidr",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"base64"===check.kind?base64Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):"base64url"===check.kind?base64urlRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):util$6.assertNever(check);return{status:status.value,value:input.data}}_regex(regex,validation,message){return this.refinement((data=>regex.test(data)),{validation:validation,code:ZodIssueCode.invalid_string,...errorUtil.errToObj(message)})}_addCheck(check){return new ZodString({...this._def,checks:[...this._def.checks,check]})}email(message){return this._addCheck({kind:"email",...errorUtil.errToObj(message)})}url(message){return this._addCheck({kind:"url",...errorUtil.errToObj(message)})}emoji(message){return this._addCheck({kind:"emoji",...errorUtil.errToObj(message)})}uuid(message){return this._addCheck({kind:"uuid",...errorUtil.errToObj(message)})}nanoid(message){return this._addCheck({kind:"nanoid",...errorUtil.errToObj(message)})}cuid(message){return this._addCheck({kind:"cuid",...errorUtil.errToObj(message)})}cuid2(message){return this._addCheck({kind:"cuid2",...errorUtil.errToObj(message)})}ulid(message){return this._addCheck({kind:"ulid",...errorUtil.errToObj(message)})}base64(message){return this._addCheck({kind:"base64",...errorUtil.errToObj(message)})}base64url(message){return this._addCheck({kind:"base64url",...errorUtil.errToObj(message)})}jwt(options){return this._addCheck({kind:"jwt",...errorUtil.errToObj(options)})}ip(options){return this._addCheck({kind:"ip",...errorUtil.errToObj(options)})}cidr(options){return this._addCheck({kind:"cidr",...errorUtil.errToObj(options)})}datetime(options){var _a,_b;return"string"==typeof options?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:options}):this._addCheck({kind:"datetime",precision:void 0===(null==options?void 0:options.precision)?null:null==options?void 0:options.precision,offset:null!==(_a=null==options?void 0:options.offset)&&void 0!==_a&&_a,local:null!==(_b=null==options?void 0:options.local)&&void 0!==_b&&_b,...errorUtil.errToObj(null==options?void 0:options.message)})}date(message){return this._addCheck({kind:"date",message:message})}time(options){return"string"==typeof options?this._addCheck({kind:"time",precision:null,message:options}):this._addCheck({kind:"time",precision:void 0===(null==options?void 0:options.precision)?null:null==options?void 0:options.precision,...errorUtil.errToObj(null==options?void 0:options.message)})}duration(message){return this._addCheck({kind:"duration",...errorUtil.errToObj(message)})}regex(regex,message){return this._addCheck({kind:"regex",regex:regex,...errorUtil.errToObj(message)})}includes(value,options){return this._addCheck({kind:"includes",value:value,position:null==options?void 0:options.position,...errorUtil.errToObj(null==options?void 0:options.message)})}startsWith(value,message){return this._addCheck({kind:"startsWith",value:value,...errorUtil.errToObj(message)})}endsWith(value,message){return this._addCheck({kind:"endsWith",value:value,...errorUtil.errToObj(message)})}min(minLength,message){return this._addCheck({kind:"min",value:minLength,...errorUtil.errToObj(message)})}max(maxLength,message){return this._addCheck({kind:"max",value:maxLength,...errorUtil.errToObj(message)})}length(len,message){return this._addCheck({kind:"length",value:len,...errorUtil.errToObj(message)})}nonempty(message){return this.min(1,errorUtil.errToObj(message))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((ch=>"datetime"===ch.kind))}get isDate(){return!!this._def.checks.find((ch=>"date"===ch.kind))}get isTime(){return!!this._def.checks.find((ch=>"time"===ch.kind))}get isDuration(){return!!this._def.checks.find((ch=>"duration"===ch.kind))}get isEmail(){return!!this._def.checks.find((ch=>"email"===ch.kind))}get isURL(){return!!this._def.checks.find((ch=>"url"===ch.kind))}get isEmoji(){return!!this._def.checks.find((ch=>"emoji"===ch.kind))}get isUUID(){return!!this._def.checks.find((ch=>"uuid"===ch.kind))}get isNANOID(){return!!this._def.checks.find((ch=>"nanoid"===ch.kind))}get isCUID(){return!!this._def.checks.find((ch=>"cuid"===ch.kind))}get isCUID2(){return!!this._def.checks.find((ch=>"cuid2"===ch.kind))}get isULID(){return!!this._def.checks.find((ch=>"ulid"===ch.kind))}get isIP(){return!!this._def.checks.find((ch=>"ip"===ch.kind))}get isCIDR(){return!!this._def.checks.find((ch=>"cidr"===ch.kind))}get isBase64(){return!!this._def.checks.find((ch=>"base64"===ch.kind))}get isBase64url(){return!!this._def.checks.find((ch=>"base64url"===ch.kind))}get minLength(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxLength(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}function floatSafeRemainder(val,step){const valDecCount=(val.toString().split(".")[1]||"").length,stepDecCount=(step.toString().split(".")[1]||"").length,decCount=valDecCount>stepDecCount?valDecCount:stepDecCount;return parseInt(val.toFixed(decCount).replace(".",""))%parseInt(step.toFixed(decCount).replace(".",""))/Math.pow(10,decCount)}ZodString.create=params=>{var _a;return new ZodString({checks:[],typeName:ZodFirstPartyTypeKind.ZodString,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(input){this._def.coerce&&(input.data=Number(input.data));if(this._getType(input)!==ZodParsedType.number){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:ctx.parsedType}),INVALID}let ctx;const status=new ParseStatus;for(const check of this._def.checks)if("int"===check.kind)util$6.isInteger(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:check.message}),status.dirty());else if("min"===check.kind){(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else if("max"===check.kind){(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else"multipleOf"===check.kind?0!==floatSafeRemainder(input.data,check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):"finite"===check.kind?Number.isFinite(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_finite,message:check.message}),status.dirty()):util$6.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:kind,value:value,inclusive:inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new ZodNumber({...this._def,checks:[...this._def.checks,check]})}int(message){return this._addCheck({kind:"int",message:errorUtil.toString(message)})}positive(message){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value:value,message:errorUtil.toString(message)})}finite(message){return this._addCheck({kind:"finite",message:errorUtil.toString(message)})}safe(message){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil.toString(message)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}get isInt(){return!!this._def.checks.find((ch=>"int"===ch.kind||"multipleOf"===ch.kind&&util$6.isInteger(ch.value)))}get isFinite(){let max=null,min=null;for(const ch of this._def.checks){if("finite"===ch.kind||"int"===ch.kind||"multipleOf"===ch.kind)return!0;"min"===ch.kind?(null===min||ch.value>min)&&(min=ch.value):"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value)}return Number.isFinite(min)&&Number.isFinite(max)}}ZodNumber.create=params=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(input){if(this._def.coerce)try{input.data=BigInt(input.data)}catch(_a){return this._getInvalidInput(input)}if(this._getType(input)!==ZodParsedType.bigint)return this._getInvalidInput(input);let ctx;const status=new ParseStatus;for(const check of this._def.checks)if("min"===check.kind){(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,type:"bigint",minimum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else if("max"===check.kind){(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,type:"bigint",maximum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else"multipleOf"===check.kind?input.data%check.value!==BigInt(0)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):util$6.assertNever(check);return{status:status.value,value:input.data}}_getInvalidInput(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:ctx.parsedType}),INVALID}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind:kind,value:value,inclusive:inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new ZodBigInt({...this._def,checks:[...this._def.checks,check]})}positive(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value:value,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}ZodBigInt.create=params=>{var _a;return new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind.ZodBigInt,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodBoolean extends ZodType{_parse(input){this._def.coerce&&(input.data=Boolean(input.data));if(this._getType(input)!==ZodParsedType.boolean){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodBoolean.create=params=>new ZodBoolean({typeName:ZodFirstPartyTypeKind.ZodBoolean,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodDate extends ZodType{_parse(input){this._def.coerce&&(input.data=new Date(input.data));if(this._getType(input)!==ZodParsedType.date){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:ctx.parsedType}),INVALID}if(isNaN(input.data.getTime())){return addIssueToContext(this._getOrReturnCtx(input),{code:ZodIssueCode.invalid_date}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)"min"===check.kind?input.data.getTime()<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,message:check.message,inclusive:!0,exact:!1,minimum:check.value,type:"date"}),status.dirty()):"max"===check.kind?input.data.getTime()>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,message:check.message,inclusive:!0,exact:!1,maximum:check.value,type:"date"}),status.dirty()):util$6.assertNever(check);return{status:status.value,value:new Date(input.data.getTime())}}_addCheck(check){return new ZodDate({...this._def,checks:[...this._def.checks,check]})}min(minDate,message){return this._addCheck({kind:"min",value:minDate.getTime(),message:errorUtil.toString(message)})}max(maxDate,message){return this._addCheck({kind:"max",value:maxDate.getTime(),message:errorUtil.toString(message)})}get minDate(){let min=null;for(const ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return null!=min?new Date(min):null}get maxDate(){let max=null;for(const ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return null!=max?new Date(max):null}}ZodDate.create=params=>new ZodDate({checks:[],coerce:(null==params?void 0:params.coerce)||!1,typeName:ZodFirstPartyTypeKind.ZodDate,...processCreateParams(params)});class ZodSymbol extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.symbol){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodSymbol.create=params=>new ZodSymbol({typeName:ZodFirstPartyTypeKind.ZodSymbol,...processCreateParams(params)});class ZodUndefined extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodUndefined.create=params=>new ZodUndefined({typeName:ZodFirstPartyTypeKind.ZodUndefined,...processCreateParams(params)});class ZodNull extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.null){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodNull.create=params=>new ZodNull({typeName:ZodFirstPartyTypeKind.ZodNull,...processCreateParams(params)});class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(input){return OK(input.data)}}ZodAny.create=params=>new ZodAny({typeName:ZodFirstPartyTypeKind.ZodAny,...processCreateParams(params)});class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(input){return OK(input.data)}}ZodUnknown.create=params=>new ZodUnknown({typeName:ZodFirstPartyTypeKind.ZodUnknown,...processCreateParams(params)});class ZodNever extends ZodType{_parse(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:ctx.parsedType}),INVALID}}ZodNever.create=params=>new ZodNever({typeName:ZodFirstPartyTypeKind.ZodNever,...processCreateParams(params)});class ZodVoid extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodVoid.create=params=>new ZodVoid({typeName:ZodFirstPartyTypeKind.ZodVoid,...processCreateParams(params)});class ZodArray extends ZodType{_parse(input){const{ctx:ctx,status:status}=this._processInputParams(input),def=this._def;if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(null!==def.exactLength){const tooBig=ctx.data.length>def.exactLength.value,tooSmall=ctx.data.length<def.exactLength.value;(tooBig||tooSmall)&&(addIssueToContext(ctx,{code:tooBig?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:tooSmall?def.exactLength.value:void 0,maximum:tooBig?def.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:def.exactLength.message}),status.dirty())}if(null!==def.minLength&&ctx.data.length<def.minLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minLength.value,type:"array",inclusive:!0,exact:!1,message:def.minLength.message}),status.dirty()),null!==def.maxLength&&ctx.data.length>def.maxLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxLength.value,type:"array",inclusive:!0,exact:!1,message:def.maxLength.message}),status.dirty()),ctx.common.async)return Promise.all([...ctx.data].map(((item,i)=>def.type._parseAsync(new ParseInputLazyPath(ctx,item,ctx.path,i))))).then((result=>ParseStatus.mergeArray(status,result)));const result=[...ctx.data].map(((item,i)=>def.type._parseSync(new ParseInputLazyPath(ctx,item,ctx.path,i))));return ParseStatus.mergeArray(status,result)}get element(){return this._def.type}min(minLength,message){return new ZodArray({...this._def,minLength:{value:minLength,message:errorUtil.toString(message)}})}max(maxLength,message){return new ZodArray({...this._def,maxLength:{value:maxLength,message:errorUtil.toString(message)}})}length(len,message){return new ZodArray({...this._def,exactLength:{value:len,message:errorUtil.toString(message)}})}nonempty(message){return this.min(1,message)}}function deepPartialify(schema){if(schema instanceof ZodObject){const newShape={};for(const key in schema.shape){const fieldSchema=schema.shape[key];newShape[key]=ZodOptional.create(deepPartialify(fieldSchema))}return new ZodObject({...schema._def,shape:()=>newShape})}return schema instanceof ZodArray?new ZodArray({...schema._def,type:deepPartialify(schema.element)}):schema instanceof ZodOptional?ZodOptional.create(deepPartialify(schema.unwrap())):schema instanceof ZodNullable?ZodNullable.create(deepPartialify(schema.unwrap())):schema instanceof ZodTuple?ZodTuple.create(schema.items.map((item=>deepPartialify(item)))):schema}ZodArray.create=(schema,params)=>new ZodArray({type:schema,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind.ZodArray,...processCreateParams(params)});class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const shape=this._def.shape(),keys=util$6.objectKeys(shape);return this._cached={shape:shape,keys:keys}}_parse(input){if(this._getType(input)!==ZodParsedType.object){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID}const{status:status,ctx:ctx}=this._processInputParams(input),{shape:shape,keys:shapeKeys}=this._getCached(),extraKeys=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(const key in ctx.data)shapeKeys.includes(key)||extraKeys.push(key);const pairs=[];for(const key of shapeKeys){const keyValidator=shape[key],value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:keyValidator._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}if(this._def.catchall instanceof ZodNever){const unknownKeys=this._def.unknownKeys;if("passthrough"===unknownKeys)for(const key of extraKeys)pairs.push({key:{status:"valid",value:key},value:{status:"valid",value:ctx.data[key]}});else if("strict"===unknownKeys)extraKeys.length>0&&(addIssueToContext(ctx,{code:ZodIssueCode.unrecognized_keys,keys:extraKeys}),status.dirty());else if("strip"!==unknownKeys)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const catchall=this._def.catchall;for(const key of extraKeys){const value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:catchall._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}}return ctx.common.async?Promise.resolve().then((async()=>{const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key:key,value:value,alwaysSet:pair.alwaysSet})}return syncPairs})).then((syncPairs=>ParseStatus.mergeObjectSync(status,syncPairs))):ParseStatus.mergeObjectSync(status,pairs)}get shape(){return this._def.shape()}strict(message){return errorUtil.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==message?{errorMap:(issue,ctx)=>{var _a,_b,_c,_d;const defaultError=null!==(_c=null===(_b=(_a=this._def).errorMap)||void 0===_b?void 0:_b.call(_a,issue,ctx).message)&&void 0!==_c?_c:ctx.defaultError;return"unrecognized_keys"===issue.code?{message:null!==(_d=errorUtil.errToObj(message).message)&&void 0!==_d?_d:defaultError}:{message:defaultError}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(augmentation){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...augmentation})})}merge(merging){return new ZodObject({unknownKeys:merging._def.unknownKeys,catchall:merging._def.catchall,shape:()=>({...this._def.shape(),...merging._def.shape()}),typeName:ZodFirstPartyTypeKind.ZodObject})}setKey(key,schema){return this.augment({[key]:schema})}catchall(index){return new ZodObject({...this._def,catchall:index})}pick(mask){const shape={};return util$6.objectKeys(mask).forEach((key=>{mask[key]&&this.shape[key]&&(shape[key]=this.shape[key])})),new ZodObject({...this._def,shape:()=>shape})}omit(mask){const shape={};return util$6.objectKeys(this.shape).forEach((key=>{mask[key]||(shape[key]=this.shape[key])})),new ZodObject({...this._def,shape:()=>shape})}deepPartial(){return deepPartialify(this)}partial(mask){const newShape={};return util$6.objectKeys(this.shape).forEach((key=>{const fieldSchema=this.shape[key];mask&&!mask[key]?newShape[key]=fieldSchema:newShape[key]=fieldSchema.optional()})),new ZodObject({...this._def,shape:()=>newShape})}required(mask){const newShape={};return util$6.objectKeys(this.shape).forEach((key=>{if(mask&&!mask[key])newShape[key]=this.shape[key];else{let newField=this.shape[key];for(;newField instanceof ZodOptional;)newField=newField._def.innerType;newShape[key]=newField}})),new ZodObject({...this._def,shape:()=>newShape})}keyof(){return createZodEnum(util$6.objectKeys(this.shape))}}ZodObject.create=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)}),ZodObject.strictCreate=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)}),ZodObject.lazycreate=(shape,params)=>new ZodObject({shape:shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});class ZodUnion extends ZodType{_parse(input){const{ctx:ctx}=this._processInputParams(input),options=this._def.options;if(ctx.common.async)return Promise.all(options.map((async option=>{const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null};return{result:await option._parseAsync({data:ctx.data,path:ctx.path,parent:childCtx}),ctx:childCtx}}))).then((function(results){for(const result of results)if("valid"===result.result.status)return result.result;for(const result of results)if("dirty"===result.result.status)return ctx.common.issues.push(...result.ctx.common.issues),result.result;const unionErrors=results.map((result=>new ZodError(result.ctx.common.issues)));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors:unionErrors}),INVALID}));{let dirty;const issues=[];for(const option of options){const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null},result=option._parseSync({data:ctx.data,path:ctx.path,parent:childCtx});if("valid"===result.status)return result;"dirty"!==result.status||dirty||(dirty={result:result,ctx:childCtx}),childCtx.common.issues.length&&issues.push(childCtx.common.issues)}if(dirty)return ctx.common.issues.push(...dirty.ctx.common.issues),dirty.result;const unionErrors=issues.map((issues=>new ZodError(issues)));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors:unionErrors}),INVALID}}get options(){return this._def.options}}ZodUnion.create=(types,params)=>new ZodUnion({options:types,typeName:ZodFirstPartyTypeKind.ZodUnion,...processCreateParams(params)});const getDiscriminator=type=>type instanceof ZodLazy?getDiscriminator(type.schema):type instanceof ZodEffects?getDiscriminator(type.innerType()):type instanceof ZodLiteral?[type.value]:type instanceof ZodEnum?type.options:type instanceof ZodNativeEnum?util$6.objectValues(type.enum):type instanceof ZodDefault?getDiscriminator(type._def.innerType):type instanceof ZodUndefined?[void 0]:type instanceof ZodNull?[null]:type instanceof ZodOptional?[void 0,...getDiscriminator(type.unwrap())]:type instanceof ZodNullable?[null,...getDiscriminator(type.unwrap())]:type instanceof ZodBranded||type instanceof ZodReadonly?getDiscriminator(type.unwrap()):type instanceof ZodCatch?getDiscriminator(type._def.innerType):[];class ZodDiscriminatedUnion extends ZodType{_parse(input){const{ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;const discriminator=this.discriminator,discriminatorValue=ctx.data[discriminator],option=this.optionsMap.get(discriminatorValue);return option?ctx.common.async?option._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}):option._parseSync({data:ctx.data,path:ctx.path,parent:ctx}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[discriminator]}),INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(discriminator,options,params){const optionsMap=new Map;for(const type of options){const discriminatorValues=getDiscriminator(type.shape[discriminator]);if(!discriminatorValues.length)throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);for(const value of discriminatorValues){if(optionsMap.has(value))throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);optionsMap.set(value,type)}}return new ZodDiscriminatedUnion({typeName:ZodFirstPartyTypeKind.ZodDiscriminatedUnion,discriminator:discriminator,options:options,optionsMap:optionsMap,...processCreateParams(params)})}}function mergeValues(a,b){const aType=getParsedType(a),bType=getParsedType(b);if(a===b)return{valid:!0,data:a};if(aType===ZodParsedType.object&&bType===ZodParsedType.object){const bKeys=util$6.objectKeys(b),sharedKeys=util$6.objectKeys(a).filter((key=>-1!==bKeys.indexOf(key))),newObj={...a,...b};for(const key of sharedKeys){const sharedValue=mergeValues(a[key],b[key]);if(!sharedValue.valid)return{valid:!1};newObj[key]=sharedValue.data}return{valid:!0,data:newObj}}if(aType===ZodParsedType.array&&bType===ZodParsedType.array){if(a.length!==b.length)return{valid:!1};const newArray=[];for(let index=0;index<a.length;index++){const sharedValue=mergeValues(a[index],b[index]);if(!sharedValue.valid)return{valid:!1};newArray.push(sharedValue.data)}return{valid:!0,data:newArray}}return aType===ZodParsedType.date&&bType===ZodParsedType.date&&+a==+b?{valid:!0,data:a}:{valid:!1}}class ZodIntersection extends ZodType{_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input),handleParsed=(parsedLeft,parsedRight)=>{if(isAborted(parsedLeft)||isAborted(parsedRight))return INVALID;const merged=mergeValues(parsedLeft.value,parsedRight.value);return merged.valid?((isDirty(parsedLeft)||isDirty(parsedRight))&&status.dirty(),{status:status.value,value:merged.data}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_intersection_types}),INVALID)};return ctx.common.async?Promise.all([this._def.left._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseAsync({data:ctx.data,path:ctx.path,parent:ctx})]).then((([left,right])=>handleParsed(left,right))):handleParsed(this._def.left._parseSync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseSync({data:ctx.data,path:ctx.path,parent:ctx}))}}ZodIntersection.create=(left,right,params)=>new ZodIntersection({left:left,right:right,typeName:ZodFirstPartyTypeKind.ZodIntersection,...processCreateParams(params)});class ZodTuple extends ZodType{_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(ctx.data.length<this._def.items.length)return addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;!this._def.rest&&ctx.data.length>this._def.items.length&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),status.dirty());const items=[...ctx.data].map(((item,itemIndex)=>{const schema=this._def.items[itemIndex]||this._def.rest;return schema?schema._parse(new ParseInputLazyPath(ctx,item,ctx.path,itemIndex)):null})).filter((x=>!!x));return ctx.common.async?Promise.all(items).then((results=>ParseStatus.mergeArray(status,results))):ParseStatus.mergeArray(status,items)}get items(){return this._def.items}rest(rest){return new ZodTuple({...this._def,rest:rest})}}ZodTuple.create=(schemas,params)=>{if(!Array.isArray(schemas))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:schemas,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null,...processCreateParams(params)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;const pairs=[],keyType=this._def.keyType,valueType=this._def.valueType;for(const key in ctx.data)pairs.push({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,key)),value:valueType._parse(new ParseInputLazyPath(ctx,ctx.data[key],ctx.path,key)),alwaysSet:key in ctx.data});return ctx.common.async?ParseStatus.mergeObjectAsync(status,pairs):ParseStatus.mergeObjectSync(status,pairs)}get element(){return this._def.valueType}static create(first,second,third){return new ZodRecord(second instanceof ZodType?{keyType:first,valueType:second,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(third)}:{keyType:ZodString.create(),valueType:first,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(second)})}}class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.map)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:ctx.parsedType}),INVALID;const keyType=this._def.keyType,valueType=this._def.valueType,pairs=[...ctx.data.entries()].map((([key,value],index)=>({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,[index,"key"])),value:valueType._parse(new ParseInputLazyPath(ctx,value,ctx.path,[index,"value"]))})));if(ctx.common.async){const finalMap=new Map;return Promise.resolve().then((async()=>{for(const pair of pairs){const key=await pair.key,value=await pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;"dirty"!==key.status&&"dirty"!==value.status||status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}))}{const finalMap=new Map;for(const pair of pairs){const key=pair.key,value=pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;"dirty"!==key.status&&"dirty"!==value.status||status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}}}ZodMap.create=(keyType,valueType,params)=>new ZodMap({valueType:valueType,keyType:keyType,typeName:ZodFirstPartyTypeKind.ZodMap,...processCreateParams(params)});class ZodSet extends ZodType{_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.set)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:ctx.parsedType}),INVALID;const def=this._def;null!==def.minSize&&ctx.data.size<def.minSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minSize.value,type:"set",inclusive:!0,exact:!1,message:def.minSize.message}),status.dirty()),null!==def.maxSize&&ctx.data.size>def.maxSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxSize.value,type:"set",inclusive:!0,exact:!1,message:def.maxSize.message}),status.dirty());const valueType=this._def.valueType;function finalizeSet(elements){const parsedSet=new Set;for(const element of elements){if("aborted"===element.status)return INVALID;"dirty"===element.status&&status.dirty(),parsedSet.add(element.value)}return{status:status.value,value:parsedSet}}const elements=[...ctx.data.values()].map(((item,i)=>valueType._parse(new ParseInputLazyPath(ctx,item,ctx.path,i))));return ctx.common.async?Promise.all(elements).then((elements=>finalizeSet(elements))):finalizeSet(elements)}min(minSize,message){return new ZodSet({...this._def,minSize:{value:minSize,message:errorUtil.toString(message)}})}max(maxSize,message){return new ZodSet({...this._def,maxSize:{value:maxSize,message:errorUtil.toString(message)}})}size(size,message){return this.min(size,message).max(size,message)}nonempty(message){return this.min(1,message)}}ZodSet.create=(valueType,params)=>new ZodSet({valueType:valueType,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind.ZodSet,...processCreateParams(params)});class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(input){const{ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.function)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:ctx.parsedType}),INVALID;function makeArgsIssue(args,error){return makeIssue({data:args,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter((x=>!!x)),issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:error}})}function makeReturnsIssue(returns,error){return makeIssue({data:returns,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter((x=>!!x)),issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:error}})}const params={errorMap:ctx.common.contextualErrorMap},fn=ctx.data;if(this._def.returns instanceof ZodPromise){const me=this;return OK((async function(...args){const error=new ZodError([]),parsedArgs=await me._def.args.parseAsync(args,params).catch((e=>{throw error.addIssue(makeArgsIssue(args,e)),error})),result=await Reflect.apply(fn,this,parsedArgs);return await me._def.returns._def.type.parseAsync(result,params).catch((e=>{throw error.addIssue(makeReturnsIssue(result,e)),error}))}))}{const me=this;return OK((function(...args){const parsedArgs=me._def.args.safeParse(args,params);if(!parsedArgs.success)throw new ZodError([makeArgsIssue(args,parsedArgs.error)]);const result=Reflect.apply(fn,this,parsedArgs.data),parsedReturns=me._def.returns.safeParse(result,params);if(!parsedReturns.success)throw new ZodError([makeReturnsIssue(result,parsedReturns.error)]);return parsedReturns.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...items){return new ZodFunction({...this._def,args:ZodTuple.create(items).rest(ZodUnknown.create())})}returns(returnType){return new ZodFunction({...this._def,returns:returnType})}implement(func){return this.parse(func)}strictImplement(func){return this.parse(func)}static create(args,returns,params){return new ZodFunction({args:args||ZodTuple.create([]).rest(ZodUnknown.create()),returns:returns||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind.ZodFunction,...processCreateParams(params)})}}class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(input){const{ctx:ctx}=this._processInputParams(input);return this._def.getter()._parse({data:ctx.data,path:ctx.path,parent:ctx})}}ZodLazy.create=(getter,params)=>new ZodLazy({getter:getter,typeName:ZodFirstPartyTypeKind.ZodLazy,...processCreateParams(params)});class ZodLiteral extends ZodType{_parse(input){if(input.data!==this._def.value){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:input.data}}get value(){return this._def.value}}function createZodEnum(values,params){return new ZodEnum({values:values,typeName:ZodFirstPartyTypeKind.ZodEnum,...processCreateParams(params)})}ZodLiteral.create=(value,params)=>new ZodLiteral({value:value,typeName:ZodFirstPartyTypeKind.ZodLiteral,...processCreateParams(params)});class ZodEnum extends ZodType{constructor(){super(...arguments),_ZodEnum_cache.set(this,void 0)}_parse(input){if("string"!=typeof input.data){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{expected:util$6.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodEnum_cache)||__classPrivateFieldSet(this,_ZodEnum_cache,new Set(this._def.values)),!__classPrivateFieldGet(this,_ZodEnum_cache).has(input.data)){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get options(){return this._def.values}get enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Values(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}extract(values,newDef=this._def){return ZodEnum.create(values,{...this._def,...newDef})}exclude(values,newDef=this._def){return ZodEnum.create(this.options.filter((opt=>!values.includes(opt))),{...this._def,...newDef})}}_ZodEnum_cache=new WeakMap,ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{constructor(){super(...arguments),_ZodNativeEnum_cache.set(this,void 0)}_parse(input){const nativeEnumValues=util$6.getValidEnumValues(this._def.values),ctx=this._getOrReturnCtx(input);if(ctx.parsedType!==ZodParsedType.string&&ctx.parsedType!==ZodParsedType.number){const expectedValues=util$6.objectValues(nativeEnumValues);return addIssueToContext(ctx,{expected:util$6.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodNativeEnum_cache)||__classPrivateFieldSet(this,_ZodNativeEnum_cache,new Set(util$6.getValidEnumValues(this._def.values))),!__classPrivateFieldGet(this,_ZodNativeEnum_cache).has(input.data)){const expectedValues=util$6.objectValues(nativeEnumValues);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get enum(){return this._def.values}}_ZodNativeEnum_cache=new WeakMap,ZodNativeEnum.create=(values,params)=>new ZodNativeEnum({values:values,typeName:ZodFirstPartyTypeKind.ZodNativeEnum,...processCreateParams(params)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(input){const{ctx:ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.promise&&!1===ctx.common.async)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:ctx.parsedType}),INVALID;const promisified=ctx.parsedType===ZodParsedType.promise?ctx.data:Promise.resolve(ctx.data);return OK(promisified.then((data=>this._def.type.parseAsync(data,{path:ctx.path,errorMap:ctx.common.contextualErrorMap}))))}}ZodPromise.create=(schema,params)=>new ZodPromise({type:schema,typeName:ZodFirstPartyTypeKind.ZodPromise,...processCreateParams(params)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input),effect=this._def.effect||null,checkCtx={addIssue:arg=>{addIssueToContext(ctx,arg),arg.fatal?status.abort():status.dirty()},get path(){return ctx.path}};if(checkCtx.addIssue=checkCtx.addIssue.bind(checkCtx),"preprocess"===effect.type){const processed=effect.transform(ctx.data,checkCtx);if(ctx.common.async)return Promise.resolve(processed).then((async processed=>{if("aborted"===status.value)return INVALID;const result=await this._def.schema._parseAsync({data:processed,path:ctx.path,parent:ctx});return"aborted"===result.status?INVALID:"dirty"===result.status||"dirty"===status.value?DIRTY(result.value):result}));{if("aborted"===status.value)return INVALID;const result=this._def.schema._parseSync({data:processed,path:ctx.path,parent:ctx});return"aborted"===result.status?INVALID:"dirty"===result.status||"dirty"===status.value?DIRTY(result.value):result}}if("refinement"===effect.type){const executeRefinement=acc=>{const result=effect.refinement(acc,checkCtx);if(ctx.common.async)return Promise.resolve(result);if(result instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return acc};if(!1===ctx.common.async){const inner=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value),{status:status.value,value:inner.value})}return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then((inner=>"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value).then((()=>({status:status.value,value:inner.value}))))))}if("transform"===effect.type){if(!1===ctx.common.async){const base=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});if(!isValid(base))return base;const result=effect.transform(base.value,checkCtx);if(result instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:status.value,value:result}}return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then((base=>isValid(base)?Promise.resolve(effect.transform(base.value,checkCtx)).then((result=>({status:status.value,value:result}))):base))}util$6.assertNever(effect)}}ZodEffects.create=(schema,effect,params)=>new ZodEffects({schema:schema,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:effect,...processCreateParams(params)}),ZodEffects.createWithPreprocess=(preprocess,schema,params)=>new ZodEffects({schema:schema,effect:{type:"preprocess",transform:preprocess},typeName:ZodFirstPartyTypeKind.ZodEffects,...processCreateParams(params)});class ZodOptional extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodOptional.create=(type,params)=>new ZodOptional({innerType:type,typeName:ZodFirstPartyTypeKind.ZodOptional,...processCreateParams(params)});class ZodNullable extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.null?OK(null):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodNullable.create=(type,params)=>new ZodNullable({innerType:type,typeName:ZodFirstPartyTypeKind.ZodNullable,...processCreateParams(params)});class ZodDefault extends ZodType{_parse(input){const{ctx:ctx}=this._processInputParams(input);let data=ctx.data;return ctx.parsedType===ZodParsedType.undefined&&(data=this._def.defaultValue()),this._def.innerType._parse({data:data,path:ctx.path,parent:ctx})}removeDefault(){return this._def.innerType}}ZodDefault.create=(type,params)=>new ZodDefault({innerType:type,typeName:ZodFirstPartyTypeKind.ZodDefault,defaultValue:"function"==typeof params.default?params.default:()=>params.default,...processCreateParams(params)});class ZodCatch extends ZodType{_parse(input){const{ctx:ctx}=this._processInputParams(input),newCtx={...ctx,common:{...ctx.common,issues:[]}},result=this._def.innerType._parse({data:newCtx.data,path:newCtx.path,parent:{...newCtx}});return isAsync(result)?result.then((result=>({status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}))):{status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}}removeCatch(){return this._def.innerType}}ZodCatch.create=(type,params)=>new ZodCatch({innerType:type,typeName:ZodFirstPartyTypeKind.ZodCatch,catchValue:"function"==typeof params.catch?params.catch:()=>params.catch,...processCreateParams(params)});class ZodNaN extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.nan){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:ctx.parsedType}),INVALID}return{status:"valid",value:input.data}}}ZodNaN.create=params=>new ZodNaN({typeName:ZodFirstPartyTypeKind.ZodNaN,...processCreateParams(params)});const BRAND=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(input){const{ctx:ctx}=this._processInputParams(input),data=ctx.data;return this._def.type._parse({data:data,path:ctx.path,parent:ctx})}unwrap(){return this._def.type}}class ZodPipeline extends ZodType{_parse(input){const{status:status,ctx:ctx}=this._processInputParams(input);if(ctx.common.async){return(async()=>{const inResult=await this._def.in._parseAsync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),DIRTY(inResult.value)):this._def.out._parseAsync({data:inResult.value,path:ctx.path,parent:ctx})})()}{const inResult=this._def.in._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),{status:"dirty",value:inResult.value}):this._def.out._parseSync({data:inResult.value,path:ctx.path,parent:ctx})}}static create(a,b){return new ZodPipeline({in:a,out:b,typeName:ZodFirstPartyTypeKind.ZodPipeline})}}class ZodReadonly extends ZodType{_parse(input){const result=this._def.innerType._parse(input),freeze=data=>(isValid(data)&&(data.value=Object.freeze(data.value)),data);return isAsync(result)?result.then((data=>freeze(data))):freeze(result)}unwrap(){return this._def.innerType}}function custom(check,params={},fatal){return check?ZodAny.create().superRefine(((data,ctx)=>{var _a,_b;if(!check(data)){const p="function"==typeof params?params(data):"string"==typeof params?{message:params}:params,_fatal=null===(_b=null!==(_a=p.fatal)&&void 0!==_a?_a:fatal)||void 0===_b||_b,p2="string"==typeof p?{message:p}:p;ctx.addIssue({code:"custom",...p2,fatal:_fatal})}})):ZodAny.create()}ZodReadonly.create=(type,params)=>new ZodReadonly({innerType:type,typeName:ZodFirstPartyTypeKind.ZodReadonly,...processCreateParams(params)});const late={object:ZodObject.lazycreate};var ZodFirstPartyTypeKind;!function(ZodFirstPartyTypeKind){ZodFirstPartyTypeKind.ZodString="ZodString",ZodFirstPartyTypeKind.ZodNumber="ZodNumber",ZodFirstPartyTypeKind.ZodNaN="ZodNaN",ZodFirstPartyTypeKind.ZodBigInt="ZodBigInt",ZodFirstPartyTypeKind.ZodBoolean="ZodBoolean",ZodFirstPartyTypeKind.ZodDate="ZodDate",ZodFirstPartyTypeKind.ZodSymbol="ZodSymbol",ZodFirstPartyTypeKind.ZodUndefined="ZodUndefined",ZodFirstPartyTypeKind.ZodNull="ZodNull",ZodFirstPartyTypeKind.ZodAny="ZodAny",ZodFirstPartyTypeKind.ZodUnknown="ZodUnknown",ZodFirstPartyTypeKind.ZodNever="ZodNever",ZodFirstPartyTypeKind.ZodVoid="ZodVoid",ZodFirstPartyTypeKind.ZodArray="ZodArray",ZodFirstPartyTypeKind.ZodObject="ZodObject",ZodFirstPartyTypeKind.ZodUnion="ZodUnion",ZodFirstPartyTypeKind.ZodDiscriminatedUnion="ZodDiscriminatedUnion",ZodFirstPartyTypeKind.ZodIntersection="ZodIntersection",ZodFirstPartyTypeKind.ZodTuple="ZodTuple",ZodFirstPartyTypeKind.ZodRecord="ZodRecord",ZodFirstPartyTypeKind.ZodMap="ZodMap",ZodFirstPartyTypeKind.ZodSet="ZodSet",ZodFirstPartyTypeKind.ZodFunction="ZodFunction",ZodFirstPartyTypeKind.ZodLazy="ZodLazy",ZodFirstPartyTypeKind.ZodLiteral="ZodLiteral",ZodFirstPartyTypeKind.ZodEnum="ZodEnum",ZodFirstPartyTypeKind.ZodEffects="ZodEffects",ZodFirstPartyTypeKind.ZodNativeEnum="ZodNativeEnum",ZodFirstPartyTypeKind.ZodOptional="ZodOptional",ZodFirstPartyTypeKind.ZodNullable="ZodNullable",ZodFirstPartyTypeKind.ZodDefault="ZodDefault",ZodFirstPartyTypeKind.ZodCatch="ZodCatch",ZodFirstPartyTypeKind.ZodPromise="ZodPromise",ZodFirstPartyTypeKind.ZodBranded="ZodBranded",ZodFirstPartyTypeKind.ZodPipeline="ZodPipeline",ZodFirstPartyTypeKind.ZodReadonly="ZodReadonly"}(ZodFirstPartyTypeKind||(ZodFirstPartyTypeKind={}));const instanceOfType=(cls,params={message:`Input not instance of ${cls.name}`})=>custom((data=>data instanceof cls),params),stringType=ZodString.create,numberType=ZodNumber.create,nanType=ZodNaN.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,symbolType=ZodSymbol.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,discriminatedUnionType=ZodDiscriminatedUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,pipelineType=ZodPipeline.create,ostring=()=>stringType().optional(),onumber=()=>numberType().optional(),oboolean=()=>booleanType().optional(),coerce={string:arg=>ZodString.create({...arg,coerce:!0}),number:arg=>ZodNumber.create({...arg,coerce:!0}),boolean:arg=>ZodBoolean.create({...arg,coerce:!0}),bigint:arg=>ZodBigInt.create({...arg,coerce:!0}),date:arg=>ZodDate.create({...arg,coerce:!0})},NEVER=INVALID;var z=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap:setErrorMap,getErrorMap:getErrorMap,makeIssue:makeIssue,EMPTY_PATH:EMPTY_PATH,addIssueToContext:addIssueToContext,ParseStatus:ParseStatus,INVALID:INVALID,DIRTY:DIRTY,OK:OK,isAborted:isAborted,isDirty:isDirty,isValid:isValid,isAsync:isAsync,get util(){return util$6},get objectUtil(){return objectUtil},ZodParsedType:ZodParsedType,getParsedType:getParsedType,ZodType:ZodType,datetimeRegex:datetimeRegex,ZodString:ZodString,ZodNumber:ZodNumber,ZodBigInt:ZodBigInt,ZodBoolean:ZodBoolean,ZodDate:ZodDate,ZodSymbol:ZodSymbol,ZodUndefined:ZodUndefined,ZodNull:ZodNull,ZodAny:ZodAny,ZodUnknown:ZodUnknown,ZodNever:ZodNever,ZodVoid:ZodVoid,ZodArray:ZodArray,ZodObject:ZodObject,ZodUnion:ZodUnion,ZodDiscriminatedUnion:ZodDiscriminatedUnion,ZodIntersection:ZodIntersection,ZodTuple:ZodTuple,ZodRecord:ZodRecord,ZodMap:ZodMap,ZodSet:ZodSet,ZodFunction:ZodFunction,ZodLazy:ZodLazy,ZodLiteral:ZodLiteral,ZodEnum:ZodEnum,ZodNativeEnum:ZodNativeEnum,ZodPromise:ZodPromise,ZodEffects:ZodEffects,ZodTransformer:ZodEffects,ZodOptional:ZodOptional,ZodNullable:ZodNullable,ZodDefault:ZodDefault,ZodCatch:ZodCatch,ZodNaN:ZodNaN,BRAND:BRAND,ZodBranded:ZodBranded,ZodPipeline:ZodPipeline,ZodReadonly:ZodReadonly,custom:custom,Schema:ZodType,ZodSchema:ZodType,late:late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind},coerce:coerce,any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,discriminatedUnion:discriminatedUnionType,effect:effectsType,enum:enumType,function:functionType,instanceof:instanceOfType,intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nan:nanType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean:oboolean,onumber:onumber,optional:optionalType,ostring:ostring,pipeline:pipelineType,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,symbol:symbolType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,NEVER:NEVER,ZodIssueCode:ZodIssueCode,quotelessJson:quotelessJson,ZodError:ZodError}),Edge;function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}!function(Edge){Edge[Edge.EXTEND=1]="EXTEND",Edge[Edge.WRAP=2]="WRAP",Edge[Edge.CROP=3]="CROP"}(Edge||(Edge={})),z.object({bitmap:z.object({data:z.union([z.instanceof(Buffer),z.instanceof(Uint8Array)]),width:z.number(),height:z.number()})});var trimLeft=/^\s+/,trimRight=/\s+$/;function tinycolor(color,opts){if(opts=opts||{},(color=color||"")instanceof tinycolor)return color;if(!(this instanceof tinycolor))return new tinycolor(color,opts);var rgb=inputToRGB(color);this._originalInput=color,this._r=rgb.r,this._g=rgb.g,this._b=rgb.b,this._a=rgb.a,this._roundA=Math.round(100*this._a)/100,this._format=opts.format||rgb.format,this._gradientType=opts.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=rgb.ok}function inputToRGB(color){var rgb={r:0,g:0,b:0},a=1,s=null,v=null,l=null,ok=!1,format=!1;return"string"==typeof color&&(color=stringInputToObject(color)),"object"==_typeof(color)&&(isValidCSSUnit(color.r)&&isValidCSSUnit(color.g)&&isValidCSSUnit(color.b)?(rgb=rgbToRgb(color.r,color.g,color.b),ok=!0,format="%"===String(color.r).substr(-1)?"prgb":"rgb"):isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.v)?(s=convertToPercentage(color.s),v=convertToPercentage(color.v),rgb=hsvToRgb(color.h,s,v),ok=!0,format="hsv"):isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.l)&&(s=convertToPercentage(color.s),l=convertToPercentage(color.l),rgb=hslToRgb(color.h,s,l),ok=!0,format="hsl"),color.hasOwnProperty("a")&&(a=color.a)),a=boundAlpha(a),{ok:ok,format:color.format||format,r:Math.min(255,Math.max(rgb.r,0)),g:Math.min(255,Math.max(rgb.g,0)),b:Math.min(255,Math.max(rgb.b,0)),a:a}}function rgbToRgb(r,g,b){return{r:255*bound01(r,255),g:255*bound01(g,255),b:255*bound01(b,255)}}function rgbToHsl(r,g,b){r=bound01(r,255),g=bound01(g,255),b=bound01(b,255);var h,s,max=Math.max(r,g,b),min=Math.min(r,g,b),l=(max+min)/2;if(max==min)h=s=0;else{var d=max-min;switch(s=l>.5?d/(2-max-min):d/(max+min),max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4}h/=6}return{h:h,s:s,l:l}}function hslToRgb(h,s,l){var r,g,b;function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}if(h=bound01(h,360),s=bound01(s,100),l=bound01(l,100),0===s)r=g=b=l;else{var q=l<.5?l*(1+s):l+s-l*s,p=2*l-q;r=hue2rgb(p,q,h+1/3),g=hue2rgb(p,q,h),b=hue2rgb(p,q,h-1/3)}return{r:255*r,g:255*g,b:255*b}}function rgbToHsv(r,g,b){r=bound01(r,255),g=bound01(g,255),b=bound01(b,255);var h,s,max=Math.max(r,g,b),min=Math.min(r,g,b),v=max,d=max-min;if(s=0===max?0:d/max,max==min)h=0;else{switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4}h/=6}return{h:h,s:s,v:v}}function hsvToRgb(h,s,v){h=6*bound01(h,360),s=bound01(s,100),v=bound01(v,100);var i=Math.floor(h),f=h-i,p=v*(1-s),q=v*(1-f*s),t=v*(1-(1-f)*s),mod=i%6;return{r:255*[v,q,p,p,t,v][mod],g:255*[t,v,v,q,p,p][mod],b:255*[p,p,t,v,v,q][mod]}}function rgbToHex(r,g,b,allow3Char){var hex=[pad2(Math.round(r).toString(16)),pad2(Math.round(g).toString(16)),pad2(Math.round(b).toString(16))];return allow3Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)?hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0):hex.join("")}function rgbaToHex(r,g,b,a,allow4Char){var hex=[pad2(Math.round(r).toString(16)),pad2(Math.round(g).toString(16)),pad2(Math.round(b).toString(16)),pad2(convertDecimalToHex(a))];return allow4Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)&&hex[3].charAt(0)==hex[3].charAt(1)?hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0)+hex[3].charAt(0):hex.join("")}function rgbaToArgbHex(r,g,b,a){return[pad2(convertDecimalToHex(a)),pad2(Math.round(r).toString(16)),pad2(Math.round(g).toString(16)),pad2(Math.round(b).toString(16))].join("")}function _desaturate(color,amount){amount=0===amount?0:amount||10;var hsl=tinycolor(color).toHsl();return hsl.s-=amount/100,hsl.s=clamp01(hsl.s),tinycolor(hsl)}function _saturate(color,amount){amount=0===amount?0:amount||10;var hsl=tinycolor(color).toHsl();return hsl.s+=amount/100,hsl.s=clamp01(hsl.s),tinycolor(hsl)}function _greyscale(color){return tinycolor(color).desaturate(100)}function _lighten(color,amount){amount=0===amount?0:amount||10;var hsl=tinycolor(color).toHsl();return hsl.l+=amount/100,hsl.l=clamp01(hsl.l),tinycolor(hsl)}function _brighten(color,amount){amount=0===amount?0:amount||10;var rgb=tinycolor(color).toRgb();return rgb.r=Math.max(0,Math.min(255,rgb.r-Math.round(-amount/100*255))),rgb.g=Math.max(0,Math.min(255,rgb.g-Math.round(-amount/100*255))),rgb.b=Math.max(0,Math.min(255,rgb.b-Math.round(-amount/100*255))),tinycolor(rgb)}function _darken(color,amount){amount=0===amount?0:amount||10;var hsl=tinycolor(color).toHsl();return hsl.l-=amount/100,hsl.l=clamp01(hsl.l),tinycolor(hsl)}function _spin(color,amount){var hsl=tinycolor(color).toHsl(),hue=(hsl.h+amount)%360;return hsl.h=hue<0?360+hue:hue,tinycolor(hsl)}function _complement(color){var hsl=tinycolor(color).toHsl();return hsl.h=(hsl.h+180)%360,tinycolor(hsl)}function polyad(color,number){if(isNaN(number)||number<=0)throw new Error("Argument to polyad must be a positive number");for(var hsl=tinycolor(color).toHsl(),result=[tinycolor(color)],step=360/number,i=1;i<number;i++)result.push(tinycolor({h:(hsl.h+i*step)%360,s:hsl.s,l:hsl.l}));return result}function _splitcomplement(color){var hsl=tinycolor(color).toHsl(),h=hsl.h;return[tinycolor(color),tinycolor({h:(h+72)%360,s:hsl.s,l:hsl.l}),tinycolor({h:(h+216)%360,s:hsl.s,l:hsl.l})]}function _analogous(color,results,slices){results=results||6,slices=slices||30;var hsl=tinycolor(color).toHsl(),part=360/slices,ret=[tinycolor(color)];for(hsl.h=(hsl.h-(part*results>>1)+720)%360;--results;)hsl.h=(hsl.h+part)%360,ret.push(tinycolor(hsl));return ret}function _monochromatic(color,results){results=results||6;for(var hsv=tinycolor(color).toHsv(),h=hsv.h,s=hsv.s,v=hsv.v,ret=[],modification=1/results;results--;)ret.push(tinycolor({h:h,s:s,v:v})),v=(v+modification)%1;return ret}tinycolor.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var rgb=this.toRgb();return(299*rgb.r+587*rgb.g+114*rgb.b)/1e3},getLuminance:function(){var RsRGB,GsRGB,BsRGB,rgb=this.toRgb();return RsRGB=rgb.r/255,GsRGB=rgb.g/255,BsRGB=rgb.b/255,.2126*(RsRGB<=.03928?RsRGB/12.92:Math.pow((RsRGB+.055)/1.055,2.4))+.7152*(GsRGB<=.03928?GsRGB/12.92:Math.pow((GsRGB+.055)/1.055,2.4))+.0722*(BsRGB<=.03928?BsRGB/12.92:Math.pow((BsRGB+.055)/1.055,2.4))},setAlpha:function(value){return this._a=boundAlpha(value),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var hsv=rgbToHsv(this._r,this._g,this._b);return{h:360*hsv.h,s:hsv.s,v:hsv.v,a:this._a}},toHsvString:function(){var hsv=rgbToHsv(this._r,this._g,this._b),h=Math.round(360*hsv.h),s=Math.round(100*hsv.s),v=Math.round(100*hsv.v);return 1==this._a?"hsv("+h+", "+s+"%, "+v+"%)":"hsva("+h+", "+s+"%, "+v+"%, "+this._roundA+")"},toHsl:function(){var hsl=rgbToHsl(this._r,this._g,this._b);return{h:360*hsl.h,s:hsl.s,l:hsl.l,a:this._a}},toHslString:function(){var hsl=rgbToHsl(this._r,this._g,this._b),h=Math.round(360*hsl.h),s=Math.round(100*hsl.s),l=Math.round(100*hsl.l);return 1==this._a?"hsl("+h+", "+s+"%, "+l+"%)":"hsla("+h+", "+s+"%, "+l+"%, "+this._roundA+")"},toHex:function(allow3Char){return rgbToHex(this._r,this._g,this._b,allow3Char)},toHexString:function(allow3Char){return"#"+this.toHex(allow3Char)},toHex8:function(allow4Char){return rgbaToHex(this._r,this._g,this._b,this._a,allow4Char)},toHex8String:function(allow4Char){return"#"+this.toHex8(allow4Char)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(100*bound01(this._r,255))+"%",g:Math.round(100*bound01(this._g,255))+"%",b:Math.round(100*bound01(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+Math.round(100*bound01(this._r,255))+"%, "+Math.round(100*bound01(this._g,255))+"%, "+Math.round(100*bound01(this._b,255))+"%)":"rgba("+Math.round(100*bound01(this._r,255))+"%, "+Math.round(100*bound01(this._g,255))+"%, "+Math.round(100*bound01(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(hexNames[rgbToHex(this._r,this._g,this._b,!0)]||!1)},toFilter:function(secondColor){var hex8String="#"+rgbaToArgbHex(this._r,this._g,this._b,this._a),secondHex8String=hex8String,gradientType=this._gradientType?"GradientType = 1, ":"";if(secondColor){var s=tinycolor(secondColor);secondHex8String="#"+rgbaToArgbHex(s._r,s._g,s._b,s._a)}return"progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")"},toString:function(format){var formatSet=!!format;format=format||this._format;var formattedString=!1,hasAlpha=this._a<1&&this._a>=0;return formatSet||!hasAlpha||"hex"!==format&&"hex6"!==format&&"hex3"!==format&&"hex4"!==format&&"hex8"!==format&&"name"!==format?("rgb"===format&&(formattedString=this.toRgbString()),"prgb"===format&&(formattedString=this.toPercentageRgbString()),"hex"!==format&&"hex6"!==format||(formattedString=this.toHexString()),"hex3"===format&&(formattedString=this.toHexString(!0)),"hex4"===format&&(formattedString=this.toHex8String(!0)),"hex8"===format&&(formattedString=this.toHex8String()),"name"===format&&(formattedString=this.toName()),"hsl"===format&&(formattedString=this.toHslString()),"hsv"===format&&(formattedString=this.toHsvString()),formattedString||this.toHexString()):"name"===format&&0===this._a?this.toName():this.toRgbString()},clone:function(){return tinycolor(this.toString())},_applyModification:function(fn,args){var color=fn.apply(null,[this].concat([].slice.call(args)));return this._r=color._r,this._g=color._g,this._b=color._b,this.setAlpha(color._a),this},lighten:function(){return this._applyModification(_lighten,arguments)},brighten:function(){return this._applyModification(_brighten,arguments)},darken:function(){return this._applyModification(_darken,arguments)},desaturate:function(){return this._applyModification(_desaturate,arguments)},saturate:function(){return this._applyModification(_saturate,arguments)},greyscale:function(){return this._applyModification(_greyscale,arguments)},spin:function(){return this._applyModification(_spin,arguments)},_applyCombination:function(fn,args){return fn.apply(null,[this].concat([].slice.call(args)))},analogous:function(){return this._applyCombination(_analogous,arguments)},complement:function(){return this._applyCombination(_complement,arguments)},monochromatic:function(){return this._applyCombination(_monochromatic,arguments)},splitcomplement:function(){return this._applyCombination(_splitcomplement,arguments)},triad:function(){return this._applyCombination(polyad,[3])},tetrad:function(){return this._applyCombination(polyad,[4])}},tinycolor.fromRatio=function(color,opts){if("object"==_typeof(color)){var newColor={};for(var i in color)color.hasOwnProperty(i)&&(newColor[i]="a"===i?color[i]:convertToPercentage(color[i]));color=newColor}return tinycolor(color,opts)},tinycolor.equals=function(color1,color2){return!(!color1||!color2)&&tinycolor(color1).toRgbString()==tinycolor(color2).toRgbString()},tinycolor.random=function(){return tinycolor.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})},tinycolor.mix=function(color1,color2,amount){amount=0===amount?0:amount||50;var rgb1=tinycolor(color1).toRgb(),rgb2=tinycolor(color2).toRgb(),p=amount/100;return tinycolor({r:(rgb2.r-rgb1.r)*p+rgb1.r,g:(rgb2.g-rgb1.g)*p+rgb1.g,b:(rgb2.b-rgb1.b)*p+rgb1.b,a:(rgb2.a-rgb1.a)*p+rgb1.a})},tinycolor.readability=function(color1,color2){var c1=tinycolor(color1),c2=tinycolor(color2);return(Math.max(c1.getLuminance(),c2.getLuminance())+.05)/(Math.min(c1.getLuminance(),c2.getLuminance())+.05)},tinycolor.isReadable=function(color1,color2,wcag2){var wcag2Parms,out,readability=tinycolor.readability(color1,color2);switch(out=!1,(wcag2Parms=validateWCAG2Parms(wcag2)).level+wcag2Parms.size){case"AAsmall":case"AAAlarge":out=readability>=4.5;break;case"AAlarge":out=readability>=3;break;case"AAAsmall":out=readability>=7}return out},tinycolor.mostReadable=function(baseColor,colorList,args){var readability,includeFallbackColors,level,size,bestColor=null,bestScore=0;includeFallbackColors=(args=args||{}).includeFallbackColors,level=args.level,size=args.size;for(var i=0;i<colorList.length;i++)(readability=tinycolor.readability(baseColor,colorList[i]))>bestScore&&(bestScore=readability,bestColor=tinycolor(colorList[i]));return tinycolor.isReadable(baseColor,bestColor,{level:level,size:size})||!includeFallbackColors?bestColor:(args.includeFallbackColors=!1,tinycolor.mostReadable(baseColor,["#fff","#000"],args))};var names$1=tinycolor.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},hexNames=tinycolor.hexNames=flip(names$1);function flip(o){var flipped={};for(var i in o)o.hasOwnProperty(i)&&(flipped[o[i]]=i);return flipped}function boundAlpha(a){return a=parseFloat(a),(isNaN(a)||a<0||a>1)&&(a=1),a}function bound01(n,max){isOnePointZero(n)&&(n="100%");var processPercent=isPercentage(n);return n=Math.min(max,Math.max(0,parseFloat(n))),processPercent&&(n=parseInt(n*max,10)/100),Math.abs(n-max)<1e-6?1:n%max/parseFloat(max)}function clamp01(val){return Math.min(1,Math.max(0,val))}function parseIntFromHex(val){return parseInt(val,16)}function isOnePointZero(n){return"string"==typeof n&&-1!=n.indexOf(".")&&1===parseFloat(n)}function isPercentage(n){return"string"==typeof n&&-1!=n.indexOf("%")}function pad2(c){return 1==c.length?"0"+c:""+c}function convertToPercentage(n){return n<=1&&(n=100*n+"%"),n}function convertDecimalToHex(d){return Math.round(255*parseFloat(d)).toString(16)}function convertHexToDecimal(h){return parseIntFromHex(h)/255}var matchers=(CSS_UNIT="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)",PERMISSIVE_MATCH3="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?",PERMISSIVE_MATCH4="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?",{CSS_UNIT:new RegExp(CSS_UNIT),rgb:new RegExp("rgb"+PERMISSIVE_MATCH3),rgba:new RegExp("rgba"+PERMISSIVE_MATCH4),hsl:new RegExp("hsl"+PERMISSIVE_MATCH3),hsla:new RegExp("hsla"+PERMISSIVE_MATCH4),hsv:new RegExp("hsv"+PERMISSIVE_MATCH3),hsva:new RegExp("hsva"+PERMISSIVE_MATCH4),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}),CSS_UNIT,PERMISSIVE_MATCH3,PERMISSIVE_MATCH4;function isValidCSSUnit(color){return!!matchers.CSS_UNIT.exec(color)}function stringInputToObject(color){color=color.replace(trimLeft,"").replace(trimRight,"").toLowerCase();var match,named=!1;if(names$1[color])color=names$1[color],named=!0;else if("transparent"==color)return{r:0,g:0,b:0,a:0,format:"name"};return(match=matchers.rgb.exec(color))?{r:match[1],g:match[2],b:match[3]}:(match=matchers.rgba.exec(color))?{r:match[1],g:match[2],b:match[3],a:match[4]}:(match=matchers.hsl.exec(color))?{h:match[1],s:match[2],l:match[3]}:(match=matchers.hsla.exec(color))?{h:match[1],s:match[2],l:match[3],a:match[4]}:(match=matchers.hsv.exec(color))?{h:match[1],s:match[2],v:match[3]}:(match=matchers.hsva.exec(color))?{h:match[1],s:match[2],v:match[3],a:match[4]}:(match=matchers.hex8.exec(color))?{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),a:convertHexToDecimal(match[4]),format:named?"name":"hex8"}:(match=matchers.hex6.exec(color))?{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),format:named?"name":"hex"}:(match=matchers.hex4.exec(color))?{r:parseIntFromHex(match[1]+""+match[1]),g:parseIntFromHex(match[2]+""+match[2]),b:parseIntFromHex(match[3]+""+match[3]),a:convertHexToDecimal(match[4]+""+match[4]),format:named?"name":"hex8"}:!!(match=matchers.hex3.exec(color))&&{r:parseIntFromHex(match[1]+""+match[1]),g:parseIntFromHex(match[2]+""+match[2]),b:parseIntFromHex(match[3]+""+match[3]),format:named?"name":"hex"}}function validateWCAG2Parms(parms){var level,size;return"AA"!==(level=((parms=parms||{level:"AA",size:"small"}).level||"AA").toUpperCase())&&"AAA"!==level&&(level="AA"),"small"!==(size=(parms.size||"small").toLowerCase())&&"large"!==size&&(size="small"),{level:level,size:size}}function scan(image,xArg,yArg,wArg,hArg,cbArg){let x,y,w,h,cb;if("function"==typeof xArg)cb=xArg,x=0,y=0,w=image.bitmap.width,h=image.bitmap.height;else{if(x=xArg,"number"!=typeof yArg)throw new Error("y must be a number");if(y=yArg,"number"!=typeof wArg)throw new Error("w must be a number");if(w=wArg,"number"!=typeof hArg)throw new Error("h must be a number");if(h=hArg,"function"!=typeof cbArg)throw new Error("cb must be a function");cb=cbArg}x=Math.round(x),y=Math.round(y),w=Math.round(w),h=Math.round(h);const bound=cb.bind(image);for(let _y=y;_y<y+h;_y++)for(let _x=x;_x<x+w;_x++){bound(_x,_y,image.bitmap.width*_y+_x<<2)}return image}function*scanIterator(image,x,y,w,h){x=Math.round(x),y=Math.round(y),w=Math.round(w),h=Math.round(h);for(let _y=y;_y<y+h;_y++)for(let _x=x;_x<x+w;_x++){const idx=image.bitmap.width*_y+_x<<2;yield{x:_x,y:_y,idx:idx,image:image}}}function limit255(n){return n=Math.max(n,0),n=Math.min(n,255)}function cssColorToHex(cssColor){return"number"==typeof cssColor?cssColor:parseInt(tinycolor(cssColor).toHex8(),16)}function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var lib$1={},ieee754={
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
read:function(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];for(i+=d,e=s&(1<<-nBits)-1,s>>=-nBits,nBits+=eLen;nBits>0;e=256*e+buffer[offset+i],i+=d,nBits-=8);for(m=e&(1<<-nBits)-1,e>>=-nBits,nBits+=mLen;nBits>0;m=256*m+buffer[offset+i],i+=d,nBits-=8);if(0===e)e=1-eBias;else{if(e===eMax)return m?NaN:1/0*(s?-1:1);m+=Math.pow(2,mLen),e-=eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)},write:function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=23===mLen?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=value<0||0===value&&1/value<0?1:0;for(value=Math.abs(value),isNaN(value)||value===1/0?(m=isNaN(value)?1:0,e=eMax):(e=Math.floor(Math.log(value)/Math.LN2),value*(c=Math.pow(2,-e))<1&&(e--,c*=2),(value+=e+eBias>=1?rt/c:rt*Math.pow(2,1-eBias))*c>=2&&(e++,c/=2),e+eBias>=eMax?(m=0,e=eMax):e+eBias>=1?(m=(value*c-1)*Math.pow(2,mLen),e+=eBias):(m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen),e=0));mLen>=8;buffer[offset+i]=255&m,i+=d,m/=256,mLen-=8);for(e=e<<mLen|m,eLen+=mLen;eLen>0;buffer[offset+i]=255&e,i+=d,e/=256,eLen-=8);buffer[offset+i-d]|=128*s}};!function(exports){Object.defineProperty(exports,"__esModule",{value:!0}),exports.AnsiStringType=exports.StringType=exports.BufferType=exports.Uint8ArrayType=exports.IgnoreType=exports.Float80_LE=exports.Float80_BE=exports.Float64_LE=exports.Float64_BE=exports.Float32_LE=exports.Float32_BE=exports.Float16_LE=exports.Float16_BE=exports.INT64_BE=exports.UINT64_BE=exports.INT64_LE=exports.UINT64_LE=exports.INT32_LE=exports.INT32_BE=exports.INT24_BE=exports.INT24_LE=exports.INT16_LE=exports.INT16_BE=exports.INT8=exports.UINT32_BE=exports.UINT32_LE=exports.UINT24_BE=exports.UINT24_LE=exports.UINT16_BE=exports.UINT16_LE=exports.UINT8=void 0;const ieee754$1=ieee754;function dv(array){return new DataView(array.buffer,array.byteOffset)}exports.UINT8={len:1,get:(array,offset)=>dv(array).getUint8(offset),put:(array,offset,value)=>(dv(array).setUint8(offset,value),offset+1)},exports.UINT16_LE={len:2,get:(array,offset)=>dv(array).getUint16(offset,!0),put:(array,offset,value)=>(dv(array).setUint16(offset,value,!0),offset+2)},exports.UINT16_BE={len:2,get:(array,offset)=>dv(array).getUint16(offset),put:(array,offset,value)=>(dv(array).setUint16(offset,value),offset+2)},exports.UINT24_LE={len:3,get(array,offset){const dataView=dv(array);return dataView.getUint8(offset)+(dataView.getUint16(offset+1,!0)<<8)},put(array,offset,value){const dataView=dv(array);return dataView.setUint8(offset,255&value),dataView.setUint16(offset+1,value>>8,!0),offset+3}},exports.UINT24_BE={len:3,get(array,offset){const dataView=dv(array);return(dataView.getUint16(offset)<<8)+dataView.getUint8(offset+2)},put(array,offset,value){const dataView=dv(array);return dataView.setUint16(offset,value>>8),dataView.setUint8(offset+2,255&value),offset+3}},exports.UINT32_LE={len:4,get:(array,offset)=>dv(array).getUint32(offset,!0),put:(array,offset,value)=>(dv(array).setUint32(offset,value,!0),offset+4)},exports.UINT32_BE={len:4,get:(array,offset)=>dv(array).getUint32(offset),put:(array,offset,value)=>(dv(array).setUint32(offset,value),offset+4)},exports.INT8={len:1,get:(array,offset)=>dv(array).getInt8(offset),put:(array,offset,value)=>(dv(array).setInt8(offset,value),offset+1)},exports.INT16_BE={len:2,get:(array,offset)=>dv(array).getInt16(offset),put:(array,offset,value)=>(dv(array).setInt16(offset,value),offset+2)},exports.INT16_LE={len:2,get:(array,offset)=>dv(array).getInt16(offset,!0),put:(array,offset,value)=>(dv(array).setInt16(offset,value,!0),offset+2)},exports.INT24_LE={len:3,get(array,offset){const unsigned=exports.UINT24_LE.get(array,offset);return unsigned>8388607?unsigned-16777216:unsigned},put(array,offset,value){const dataView=dv(array);return dataView.setUint8(offset,255&value),dataView.setUint16(offset+1,value>>8,!0),offset+3}},exports.INT24_BE={len:3,get(array,offset){const unsigned=exports.UINT24_BE.get(array,offset);return unsigned>8388607?unsigned-16777216:unsigned},put(array,offset,value){const dataView=dv(array);return dataView.setUint16(offset,value>>8),dataView.setUint8(offset+2,255&value),offset+3}},exports.INT32_BE={len:4,get:(array,offset)=>dv(array).getInt32(offset),put:(array,offset,value)=>(dv(array).setInt32(offset,value),offset+4)},exports.INT32_LE={len:4,get:(array,offset)=>dv(array).getInt32(offset,!0),put:(array,offset,value)=>(dv(array).setInt32(offset,value,!0),offset+4)},exports.UINT64_LE={len:8,get:(array,offset)=>dv(array).getBigUint64(offset,!0),put:(array,offset,value)=>(dv(array).setBigUint64(offset,value,!0),offset+8)},exports.INT64_LE={len:8,get:(array,offset)=>dv(array).getBigInt64(offset,!0),put:(array,offset,value)=>(dv(array).setBigInt64(offset,value,!0),offset+8)},exports.UINT64_BE={len:8,get:(array,offset)=>dv(array).getBigUint64(offset),put:(array,offset,value)=>(dv(array).setBigUint64(offset,value),offset+8)},exports.INT64_BE={len:8,get:(array,offset)=>dv(array).getBigInt64(offset),put:(array,offset,value)=>(dv(array).setBigInt64(offset,value),offset+8)},exports.Float16_BE={len:2,get(dataView,offset){return ieee754$1.read(dataView,offset,!1,10,this.len)},put(dataView,offset,value){return ieee754$1.write(dataView,value,offset,!1,10,this.len),offset+this.len}},exports.Float16_LE={len:2,get(array,offset){return ieee754$1.read(array,offset,!0,10,this.len)},put(array,offset,value){return ieee754$1.write(array,value,offset,!0,10,this.len),offset+this.len}},exports.Float32_BE={len:4,get:(array,offset)=>dv(array).getFloat32(offset),put:(array,offset,value)=>(dv(array).setFloat32(offset,value),offset+4)},exports.Float32_LE={len:4,get:(array,offset)=>dv(array).getFloat32(offset,!0),put:(array,offset,value)=>(dv(array).setFloat32(offset,value,!0),offset+4)},exports.Float64_BE={len:8,get:(array,offset)=>dv(array).getFloat64(offset),put:(array,offset,value)=>(dv(array).setFloat64(offset,value),offset+8)},exports.Float64_LE={len:8,get:(array,offset)=>dv(array).getFloat64(offset,!0),put:(array,offset,value)=>(dv(array).setFloat64(offset,value,!0),offset+8)},exports.Float80_BE={len:10,get(array,offset){return ieee754$1.read(array,offset,!1,63,this.len)},put(array,offset,value){return ieee754$1.write(array,value,offset,!1,63,this.len),offset+this.len}},exports.Float80_LE={len:10,get(array,offset){return ieee754$1.read(array,offset,!0,63,this.len)},put(array,offset,value){return ieee754$1.write(array,value,offset,!0,63,this.len),offset+this.len}};exports.IgnoreType=class{constructor(len){this.len=len}get(array,off){}};exports.Uint8ArrayType=class{constructor(len){this.len=len}get(array,offset){return array.subarray(offset,offset+this.len)}};exports.BufferType=class{constructor(len){this.len=len}get(uint8Array,off){return Buffer.from(uint8Array.subarray(off,off+this.len))}};exports.StringType=class{constructor(len,encoding){this.len=len,this.encoding=encoding}get(uint8Array,offset){return Buffer.from(uint8Array).toString(this.encoding,offset,offset+this.len)}};class AnsiStringType{constructor(len){this.len=len}static decode(buffer,offset,until){let str="";for(let i=offset;i<until;++i)str+=AnsiStringType.codePointToString(AnsiStringType.singleByteDecoder(buffer[i]));return str}static inRange(a,min,max){return min<=a&&a<=max}static codePointToString(cp){return cp<=65535?String.fromCharCode(cp):(cp-=65536,String.fromCharCode(55296+(cp>>10),56320+(1023&cp)))}static singleByteDecoder(bite){if(AnsiStringType.inRange(bite,0,127))return bite;const codePoint=AnsiStringType.windows1252[bite-128];if(null===codePoint)throw Error("invaliding encoding");return codePoint}get(buffer,offset=0){return AnsiStringType.decode(buffer,offset,offset+this.len)}}exports.AnsiStringType=AnsiStringType,AnsiStringType.windows1252=[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]}(lib$1);var core$1={},ReadStreamTokenizer$1={},AbstractTokenizer$1={},lib={},EndOfFileStream={};!function(exports){Object.defineProperty(exports,"__esModule",{value:!0}),exports.EndOfStreamError=exports.defaultMessages=void 0,exports.defaultMessages="End-Of-Stream";class EndOfStreamError extends Error{constructor(){super(exports.defaultMessages)}}exports.EndOfStreamError=EndOfStreamError}(EndOfFileStream);var StreamReader={},Deferred$1={};Object.defineProperty(Deferred$1,"__esModule",{value:!0}),Deferred$1.Deferred=void 0;class Deferred{constructor(){this.resolve=()=>null,this.reject=()=>null,this.promise=new Promise(((resolve,reject)=>{this.reject=reject,this.resolve=resolve}))}}Deferred$1.Deferred=Deferred,function(exports){Object.defineProperty(exports,"__esModule",{value:!0}),exports.StreamReader=exports.EndOfStreamError=void 0;const EndOfFileStream_1=EndOfFileStream,Deferred_1=Deferred$1;var EndOfFileStream_2=EndOfFileStream;Object.defineProperty(exports,"EndOfStreamError",{enumerable:!0,get:function(){return EndOfFileStream_2.EndOfStreamError}});exports.StreamReader=class{constructor(s){if(this.s=s,this.deferred=null,this.endOfStream=!1,this.peekQueue=[],!s.read||!s.once)throw new Error("Expected an instance of stream.Readable");this.s.once("end",(()=>this.reject(new EndOfFileStream_1.EndOfStreamError))),this.s.once("error",(err=>this.reject(err))),this.s.once("close",(()=>this.reject(new Error("Stream closed"))))}async peek(uint8Array,offset,length){const bytesRead=await this.read(uint8Array,offset,length);return this.peekQueue.push(uint8Array.subarray(offset,offset+bytesRead)),bytesRead}async read(buffer,offset,length){if(0===length)return 0;if(0===this.peekQueue.length&&this.endOfStream)throw new EndOfFileStream_1.EndOfStreamError;let remaining=length,bytesRead=0;for(;this.peekQueue.length>0&&remaining>0;){const peekData=this.peekQueue.pop();if(!peekData)throw new Error("peekData should be defined");const lenCopy=Math.min(peekData.length,remaining);buffer.set(peekData.subarray(0,lenCopy),offset+bytesRead),bytesRead+=lenCopy,remaining-=lenCopy,lenCopy<peekData.length&&this.peekQueue.push(peekData.subarray(lenCopy))}for(;remaining>0&&!this.endOfStream;){const reqLen=Math.min(remaining,1048576),chunkLen=await this.readFromStream(buffer,offset+bytesRead,reqLen);if(bytesRead+=chunkLen,chunkLen<reqLen)break;remaining-=chunkLen}return bytesRead}async readFromStream(buffer,offset,length){const readBuffer=this.s.read(length);if(readBuffer)return buffer.set(readBuffer,offset),readBuffer.length;{const request={buffer:buffer,offset:offset,length:length,deferred:new Deferred_1.Deferred};return this.deferred=request.deferred,this.s.once("readable",(()=>{this.readDeferred(request)})),request.deferred.promise}}readDeferred(request){const readBuffer=this.s.read(request.length);readBuffer?(request.buffer.set(readBuffer,request.offset),request.deferred.resolve(readBuffer.length),this.deferred=null):this.s.once("readable",(()=>{this.readDeferred(request)}))}reject(err){this.endOfStream=!0,this.deferred&&(this.deferred.reject(err),this.deferred=null)}}}(StreamReader),function(exports){Object.defineProperty(exports,"__esModule",{value:!0}),exports.StreamReader=exports.EndOfStreamError=void 0;var EndOfFileStream_1=EndOfFileStream;Object.defineProperty(exports,"EndOfStreamError",{enumerable:!0,get:function(){return EndOfFileStream_1.EndOfStreamError}});var StreamReader_1=StreamReader;Object.defineProperty(exports,"StreamReader",{enumerable:!0,get:function(){return StreamReader_1.StreamReader}})}(lib),Object.defineProperty(AbstractTokenizer$1,"__esModule",{value:!0}),AbstractTokenizer$1.AbstractTokenizer=void 0;const peek_readable_1$2=lib;class AbstractTokenizer{constructor(fileInfo){this.position=0,this.numBuffer=new Uint8Array(8),this.fileInfo=fileInfo||{}}async readToken(token,position=this.position){const uint8Array=Buffer.alloc(token.len);if(await this.readBuffer(uint8Array,{position:position})<token.len)throw new peek_readable_1$2.EndOfStreamError;return token.get(uint8Array,0)}async peekToken(token,position=this.position){const uint8Array=Buffer.alloc(token.len);if(await this.peekBuffer(uint8Array,{position:position})<token.len)throw new peek_readable_1$2.EndOfStreamError;return token.get(uint8Array,0)}async readNumber(token){if(await this.readBuffer(this.numBuffer,{length:token.len})<token.len)throw new peek_readable_1$2.EndOfStreamError;return token.get(this.numBuffer,0)}async peekNumber(token){if(await this.peekBuffer(this.numBuffer,{length:token.len})<token.len)throw new peek_readable_1$2.EndOfStreamError;return token.get(this.numBuffer,0)}async ignore(length){if(void 0!==this.fileInfo.size){const bytesLeft=this.fileInfo.size-this.position;if(length>bytesLeft)return this.position+=bytesLeft,bytesLeft}return this.position+=length,length}async close(){}normalizeOptions(uint8Array,options){if(options&&void 0!==options.position&&options.position<this.position)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");return options?{mayBeLess:!0===options.mayBeLess,offset:options.offset?options.offset:0,length:options.length?options.length:uint8Array.length-(options.offset?options.offset:0),position:options.position?options.position:this.position}:{mayBeLess:!1,offset:0,length:uint8Array.length,position:this.position}}}AbstractTokenizer$1.AbstractTokenizer=AbstractTokenizer,Object.defineProperty(ReadStreamTokenizer$1,"__esModule",{value:!0}),ReadStreamTokenizer$1.ReadStreamTokenizer=void 0;const AbstractTokenizer_1$1=AbstractTokenizer$1,peek_readable_1$1=lib,maxBufferSize=256e3;class ReadStreamTokenizer extends AbstractTokenizer_1$1.AbstractTokenizer{constructor(stream,fileInfo){super(fileInfo),this.streamReader=new peek_readable_1$1.StreamReader(stream)}async getFileInfo(){return this.fileInfo}async readBuffer(uint8Array,options){const normOptions=this.normalizeOptions(uint8Array,options),skipBytes=normOptions.position-this.position;if(skipBytes>0)return await this.ignore(skipBytes),this.readBuffer(uint8Array,options);if(skipBytes<0)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");if(0===normOptions.length)return 0;const bytesRead=await this.streamReader.read(uint8Array,normOptions.offset,normOptions.length);if(this.position+=bytesRead,(!options||!options.mayBeLess)&&bytesRead<normOptions.length)throw new peek_readable_1$1.EndOfStreamError;return bytesRead}async peekBuffer(uint8Array,options){const normOptions=this.normalizeOptions(uint8Array,options);let bytesRead=0;if(normOptions.position){const skipBytes=normOptions.position-this.position;if(skipBytes>0){const skipBuffer=new Uint8Array(normOptions.length+skipBytes);return bytesRead=await this.peekBuffer(skipBuffer,{mayBeLess:normOptions.mayBeLess}),uint8Array.set(skipBuffer.subarray(skipBytes),normOptions.offset),bytesRead-skipBytes}if(skipBytes<0)throw new Error("Cannot peek from a negative offset in a stream")}if(normOptions.length>0){try{bytesRead=await this.streamReader.peek(uint8Array,normOptions.offset,normOptions.length)}catch(err){if(options&&options.mayBeLess&&err instanceof peek_readable_1$1.EndOfStreamError)return 0;throw err}if(!normOptions.mayBeLess&&bytesRead<normOptions.length)throw new peek_readable_1$1.EndOfStreamError}return bytesRead}async ignore(length){const bufSize=Math.min(maxBufferSize,length),buf=new Uint8Array(bufSize);let totBytesRead=0;for(;totBytesRead<length;){const remaining=length-totBytesRead,bytesRead=await this.readBuffer(buf,{length:Math.min(bufSize,remaining)});if(bytesRead<0)return bytesRead;totBytesRead+=bytesRead}return totBytesRead}}ReadStreamTokenizer$1.ReadStreamTokenizer=ReadStreamTokenizer;var BufferTokenizer$1={};Object.defineProperty(BufferTokenizer$1,"__esModule",{value:!0}),BufferTokenizer$1.BufferTokenizer=void 0;const peek_readable_1=lib,AbstractTokenizer_1=AbstractTokenizer$1;class BufferTokenizer extends AbstractTokenizer_1.AbstractTokenizer{constructor(uint8Array,fileInfo){super(fileInfo),this.uint8Array=uint8Array,this.fileInfo.size=this.fileInfo.size?this.fileInfo.size:uint8Array.length}async readBuffer(uint8Array,options){if(options&&options.position){if(options.position<this.position)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");this.position=options.position}const bytesRead=await this.peekBuffer(uint8Array,options);return this.position+=bytesRead,bytesRead}async peekBuffer(uint8Array,options){const normOptions=this.normalizeOptions(uint8Array,options),bytes2read=Math.min(this.uint8Array.length-normOptions.position,normOptions.length);if(!normOptions.mayBeLess&&bytes2read<normOptions.length)throw new peek_readable_1.EndOfStreamError;return uint8Array.set(this.uint8Array.subarray(normOptions.position,normOptions.position+bytes2read),normOptions.offset),bytes2read}async close(){}}BufferTokenizer$1.BufferTokenizer=BufferTokenizer,function(exports){Object.defineProperty(exports,"__esModule",{value:!0}),exports.fromBuffer=exports.fromStream=exports.EndOfStreamError=void 0;const ReadStreamTokenizer_1=ReadStreamTokenizer$1,BufferTokenizer_1=BufferTokenizer$1;var peek_readable_1=lib;Object.defineProperty(exports,"EndOfStreamError",{enumerable:!0,get:function(){return peek_readable_1.EndOfStreamError}}),exports.fromStream=function(stream,fileInfo){return fileInfo=fileInfo||{},new ReadStreamTokenizer_1.ReadStreamTokenizer(stream,fileInfo)},exports.fromBuffer=function(uint8Array,fileInfo){return new BufferTokenizer_1.BufferTokenizer(uint8Array,fileInfo)}}(core$1);var util$5={stringToBytes:string=>[...string].map((character=>character.charCodeAt(0))),tarHeaderChecksumMatches:(buffer,offset=0)=>{const readSum=parseInt(buffer.toString("utf8",148,154).replace(/\0.*$/,"").trim(),8);if(isNaN(readSum))return!1;let sum=256;for(let i=offset;i<offset+148;i++)sum+=buffer[i];for(let i=offset+156;i<offset+512;i++)sum+=buffer[i];return readSum===sum},uint32SyncSafeToken:{get:(buffer,offset)=>127&buffer[offset+3]|buffer[offset+2]<<7|buffer[offset+1]<<14|buffer[offset]<<21,len:4}},supported$1={extensions:["jpg","png","apng","gif","webp","flif","xcf","cr2","cr3","orf","arw","dng","nef","rw2","raf","tif","bmp","icns","jxr","psd","indd","zip","tar","rar","gz","bz2","7z","dmg","mp4","mid","mkv","webm","mov","avi","mpg","mp2","mp3","m4a","oga","ogg","ogv","opus","flac","wav","spx","amr","pdf","epub","exe","swf","rtf","wasm","woff","woff2","eot","ttf","otf","ico","flv","ps","xz","sqlite","nes","crx","xpi","cab","deb","ar","rpm","Z","lz","cfb","mxf","mts","blend","bpg","docx","pptx","xlsx","3gp","3g2","jp2","jpm","jpx","mj2","aif","qcp","odt","ods","odp","xml","mobi","heic","cur","ktx","ape","wv","dcm","ics","glb","pcap","dsf","lnk","alias","voc","ac3","m4v","m4p","m4b","f4v","f4p","f4b","f4a","mie","asf","ogm","ogx","mpc","arrow","shp","aac","mp1","it","s3m","xm","ai","skp","avif","eps","lzh","pgp","asar","stl","chm","3mf","zst","jxl","vcf"],mimeTypes:["image/jpeg","image/png","image/gif","image/webp","image/flif","image/x-xcf","image/x-canon-cr2","image/x-canon-cr3","image/tiff","image/bmp","image/vnd.ms-photo","image/vnd.adobe.photoshop","application/x-indesign","application/epub+zip","application/x-xpinstall","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/zip","application/x-tar","application/x-rar-compressed","application/gzip","application/x-bzip2","application/x-7z-compressed","application/x-apple-diskimage","application/x-apache-arrow","video/mp4","audio/midi","video/x-matroska","video/webm","video/quicktime","video/vnd.avi","audio/vnd.wave","audio/qcelp","audio/x-ms-asf","video/x-ms-asf","application/vnd.ms-asf","video/mpeg","video/3gpp","audio/mpeg","audio/mp4","audio/opus","video/ogg","audio/ogg","application/ogg","audio/x-flac","audio/ape","audio/wavpack","audio/amr","application/pdf","application/x-msdownload","application/x-shockwave-flash","application/rtf","application/wasm","font/woff","font/woff2","application/vnd.ms-fontobject","font/ttf","font/otf","image/x-icon","video/x-flv","application/postscript","application/eps","application/x-xz","application/x-sqlite3","application/x-nintendo-nes-rom","application/x-google-chrome-extension","application/vnd.ms-cab-compressed","application/x-deb","application/x-unix-archive","application/x-rpm","application/x-compress","application/x-lzip","application/x-cfb","application/x-mie","application/mxf","video/mp2t","application/x-blender","image/bpg","image/jp2","image/jpx","image/jpm","image/mj2","audio/aiff","application/xml","application/x-mobipocket-ebook","image/heif","image/heif-sequence","image/heic","image/heic-sequence","image/icns","image/ktx","application/dicom","audio/x-musepack","text/calendar","text/vcard","model/gltf-binary","application/vnd.tcpdump.pcap","audio/x-dsf","application/x.ms.shortcut","application/x.apple.alias","audio/x-voc","audio/vnd.dolby.dd-raw","audio/x-m4a","image/apng","image/x-olympus-orf","image/x-sony-arw","image/x-adobe-dng","image/x-nikon-nef","image/x-panasonic-rw2","image/x-fujifilm-raf","video/x-m4v","video/3gpp2","application/x-esri-shape","audio/aac","audio/x-it","audio/x-s3m","audio/x-xm","video/MP1S","video/MP2P","application/vnd.sketchup.skp","image/avif","application/x-lzh-compressed","application/pgp-encrypted","application/x-asar","model/stl","application/vnd.ms-htmlhelp","model/3mf","image/jxl","application/zstd"]};const Token=lib$1,strtok3=core$1,{stringToBytes:stringToBytes,tarHeaderChecksumMatches:tarHeaderChecksumMatches,uint32SyncSafeToken:uint32SyncSafeToken}=util$5,supported=supported$1,minimumBytes=4100;async function fromStream(stream){const tokenizer=await strtok3.fromStream(stream);try{return await fromTokenizer(tokenizer)}finally{await tokenizer.close()}}async function fromBuffer(input){if(!(input instanceof Uint8Array||input instanceof ArrayBuffer||Buffer.isBuffer(input)))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof input}\``);const buffer=input instanceof Buffer?input:Buffer.from(input);if(!(buffer&&buffer.length>1))return;return fromTokenizer(strtok3.fromBuffer(buffer))}function _check(buffer,headers,options){options={offset:0,...options};for(const[index,header]of headers.entries())if(options.mask){if(header!==(options.mask[index]&buffer[index+options.offset]))return!1}else if(header!==buffer[index+options.offset])return!1;return!0}async function fromTokenizer(tokenizer){try{return _fromTokenizer(tokenizer)}catch(error){if(!(error instanceof strtok3.EndOfStreamError))throw error}}async function _fromTokenizer(tokenizer){let buffer=Buffer.alloc(minimumBytes);const check=(header,options)=>_check(buffer,header,options),checkString=(header,options)=>check(stringToBytes(header),options);if(tokenizer.fileInfo.size||(tokenizer.fileInfo.size=Number.MAX_SAFE_INTEGER),await tokenizer.peekBuffer(buffer,{length:12,mayBeLess:!0}),check([66,77]))return{ext:"bmp",mime:"image/bmp"};if(check([11,119]))return{ext:"ac3",mime:"audio/vnd.dolby.dd-raw"};if(check([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(check([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if(check([37,33]))return await tokenizer.peekBuffer(buffer,{length:24,mayBeLess:!0}),checkString("PS-Adobe-",{offset:2})&&checkString(" EPSF-",{offset:14})?{ext:"eps",mime:"application/eps"}:{ext:"ps",mime:"application/postscript"};if(check([31,160])||check([31,157]))return{ext:"Z",mime:"application/x-compress"};if(check([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(check([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(check([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(check([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(checkString("ID3")){await tokenizer.ignore(6);const id3HeaderLen=await tokenizer.readToken(uint32SyncSafeToken);return tokenizer.position+id3HeaderLen>tokenizer.fileInfo.size?{ext:"mp3",mime:"audio/mpeg"}:(await tokenizer.ignore(id3HeaderLen),fromTokenizer(tokenizer))}if(checkString("MP+"))return{ext:"mpc",mime:"audio/x-musepack"};if((67===buffer[0]||70===buffer[0])&&check([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(check([71,73,70]))return{ext:"gif",mime:"image/gif"};if(checkString("FLIF"))return{ext:"flif",mime:"image/flif"};if(checkString("8BPS"))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(checkString("WEBP",{offset:8}))return{ext:"webp",mime:"image/webp"};if(checkString("MPCK"))return{ext:"mpc",mime:"audio/x-musepack"};if(checkString("FORM"))return{ext:"aif",mime:"audio/aiff"};if(checkString("icns",{offset:0}))return{ext:"icns",mime:"image/icns"};if(check([80,75,3,4])){try{for(;tokenizer.position+30<tokenizer.fileInfo.size;){await tokenizer.readBuffer(buffer,{length:30});const zipHeader={compressedSize:buffer.readUInt32LE(18),uncompressedSize:buffer.readUInt32LE(22),filenameLength:buffer.readUInt16LE(26),extraFieldLength:buffer.readUInt16LE(28)};if(zipHeader.filename=await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength,"utf-8")),await tokenizer.ignore(zipHeader.extraFieldLength),"META-INF/mozilla.rsa"===zipHeader.filename)return{ext:"xpi",mime:"application/x-xpinstall"};if(zipHeader.filename.endsWith(".rels")||zipHeader.filename.endsWith(".xml")){switch(zipHeader.filename.split("/")[0]){case"_rels":default:break;case"word":return{ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"};case"ppt":return{ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"};case"xl":return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}}}if(zipHeader.filename.startsWith("xl/"))return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};if(zipHeader.filename.startsWith("3D/")&&zipHeader.filename.endsWith(".model"))return{ext:"3mf",mime:"model/3mf"};if("mimetype"===zipHeader.filename&&zipHeader.compressedSize===zipHeader.uncompressedSize){switch(await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize,"utf-8"))){case"application/epub+zip":return{ext:"epub",mime:"application/epub+zip"};case"application/vnd.oasis.opendocument.text":return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};case"application/vnd.oasis.opendocument.spreadsheet":return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};case"application/vnd.oasis.opendocument.presentation":return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"}}}if(0===zipHeader.compressedSize){let nextHeaderIndex=-1;for(;nextHeaderIndex<0&&tokenizer.position<tokenizer.fileInfo.size;)await tokenizer.peekBuffer(buffer,{mayBeLess:!0}),nextHeaderIndex=buffer.indexOf("504B0304",0,"hex"),await tokenizer.ignore(nextHeaderIndex>=0?nextHeaderIndex:buffer.length)}else await tokenizer.ignore(zipHeader.compressedSize)}}catch(error){if(!(error instanceof strtok3.EndOfStreamError))throw error}return{ext:"zip",mime:"application/zip"}}if(checkString("OggS")){await tokenizer.ignore(28);const type=Buffer.alloc(8);return await tokenizer.readBuffer(type),_check(type,[79,112,117,115,72,101,97,100])?{ext:"opus",mime:"audio/opus"}:_check(type,[128,116,104,101,111,114,97])?{ext:"ogv",mime:"video/ogg"}:_check(type,[1,118,105,100,101,111,0])?{ext:"ogm",mime:"video/ogg"}:_check(type,[127,70,76,65,67])?{ext:"oga",mime:"audio/ogg"}:_check(type,[83,112,101,101,120,32,32])?{ext:"spx",mime:"audio/ogg"}:_check(type,[1,118,111,114,98,105,115])?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"}}if(check([80,75])&&(3===buffer[2]||5===buffer[2]||7===buffer[2])&&(4===buffer[3]||6===buffer[3]||8===buffer[3]))return{ext:"zip",mime:"application/zip"};if(checkString("ftyp",{offset:4})&&96&buffer[8]){const brandMajor=buffer.toString("binary",8,12).replace("\0"," ").trim();switch(brandMajor){case"avif":return{ext:"avif",mime:"image/avif"};case"mif1":return{ext:"heic",mime:"image/heif"};case"msf1":return{ext:"heic",mime:"image/heif-sequence"};case"heic":case"heix":return{ext:"heic",mime:"image/heic"};case"hevc":case"hevx":return{ext:"heic",mime:"image/heic-sequence"};case"qt":return{ext:"mov",mime:"video/quicktime"};case"M4V":case"M4VH":case"M4VP":return{ext:"m4v",mime:"video/x-m4v"};case"M4P":return{ext:"m4p",mime:"video/mp4"};case"M4B":return{ext:"m4b",mime:"audio/mp4"};case"M4A":return{ext:"m4a",mime:"audio/x-m4a"};case"F4V":return{ext:"f4v",mime:"video/mp4"};case"F4P":return{ext:"f4p",mime:"video/mp4"};case"F4A":return{ext:"f4a",mime:"audio/mp4"};case"F4B":return{ext:"f4b",mime:"audio/mp4"};case"crx":return{ext:"cr3",mime:"image/x-canon-cr3"};default:return brandMajor.startsWith("3g")?brandMajor.startsWith("3g2")?{ext:"3g2",mime:"video/3gpp2"}:{ext:"3gp",mime:"video/3gpp"}:{ext:"mp4",mime:"video/mp4"}}}if(checkString("MThd"))return{ext:"mid",mime:"audio/midi"};if(checkString("wOFF")&&(check([0,1,0,0],{offset:4})||checkString("OTTO",{offset:4})))return{ext:"woff",mime:"font/woff"};if(checkString("wOF2")&&(check([0,1,0,0],{offset:4})||checkString("OTTO",{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(check([212,195,178,161])||check([161,178,195,212]))return{ext:"pcap",mime:"application/vnd.tcpdump.pcap"};if(checkString("DSD "))return{ext:"dsf",mime:"audio/x-dsf"};if(checkString("LZIP"))return{ext:"lz",mime:"application/x-lzip"};if(checkString("fLaC"))return{ext:"flac",mime:"audio/x-flac"};if(check([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(checkString("wvpk"))return{ext:"wv",mime:"audio/wavpack"};if(checkString("%PDF")){await tokenizer.ignore(1350);const maxBufferSize=10485760,buffer=Buffer.alloc(Math.min(maxBufferSize,tokenizer.fileInfo.size));return await tokenizer.readBuffer(buffer,{mayBeLess:!0}),buffer.includes(Buffer.from("AIPrivateData"))?{ext:"ai",mime:"application/postscript"}:{ext:"pdf",mime:"application/pdf"}}if(check([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(check([73,73,42,0]))return checkString("CR",{offset:8})?{ext:"cr2",mime:"image/x-canon-cr2"}:check([28,0,254,0],{offset:8})||check([31,0,11,0],{offset:8})?{ext:"nef",mime:"image/x-nikon-nef"}:check([8,0,0,0],{offset:4})&&(check([45,0,254,0],{offset:8})||check([39,0,254,0],{offset:8}))?{ext:"dng",mime:"image/x-adobe-dng"}:(buffer=Buffer.alloc(24),await tokenizer.peekBuffer(buffer),(check([16,251,134,1],{offset:4})||check([8,0,0,0],{offset:4}))&&check([0,254,0,4,0,1,0,0,0,1,0,0,0,3,1],{offset:9})?{ext:"arw",mime:"image/x-sony-arw"}:{ext:"tif",mime:"image/tiff"});if(check([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(checkString("MAC "))return{ext:"ape",mime:"audio/ape"};if(check([26,69,223,163])){async function readField(){const msb=await tokenizer.peekNumber(Token.UINT8);let mask=128,ic=0;for(;!(msb&mask)&&0!==mask;)++ic,mask>>=1;const id=Buffer.alloc(ic+1);return await tokenizer.readBuffer(id),id}async function readElement(){const id=await readField(),lenField=await readField();lenField[0]^=128>>lenField.length-1;const nrLen=Math.min(6,lenField.length);return{id:id.readUIntBE(0,id.length),len:lenField.readUIntBE(lenField.length-nrLen,nrLen)}}async function readChildren(level,children){for(;children>0;){const e=await readElement();if(17026===e.id)return tokenizer.readToken(new Token.StringType(e.len,"utf-8"));await tokenizer.ignore(e.len),--children}}const re=await readElement();switch(await readChildren(0,re.len)){case"webm":return{ext:"webm",mime:"video/webm"};case"matroska":return{ext:"mkv",mime:"video/x-matroska"};default:return}}if(check([82,73,70,70])){if(check([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(check([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(check([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(checkString("SQLi"))return{ext:"sqlite",mime:"application/x-sqlite3"};if(check([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(checkString("Cr24"))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(checkString("MSCF")||checkString("ISc("))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(check([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(check([197,208,211,198]))return{ext:"eps",mime:"application/eps"};if(check([40,181,47,253]))return{ext:"zst",mime:"application/zstd"};if(check([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(checkString("#!AMR"))return{ext:"amr",mime:"audio/amr"};if(checkString("{\\rtf"))return{ext:"rtf",mime:"application/rtf"};if(check([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(checkString("IMPM"))return{ext:"it",mime:"audio/x-it"};if(checkString("-lh0-",{offset:2})||checkString("-lh1-",{offset:2})||checkString("-lh2-",{offset:2})||checkString("-lh3-",{offset:2})||checkString("-lh4-",{offset:2})||checkString("-lh5-",{offset:2})||checkString("-lh6-",{offset:2})||checkString("-lh7-",{offset:2})||checkString("-lzs-",{offset:2})||checkString("-lz4-",{offset:2})||checkString("-lz5-",{offset:2})||checkString("-lhd-",{offset:2}))return{ext:"lzh",mime:"application/x-lzh-compressed"};if(check([0,0,1,186])){if(check([33],{offset:4,mask:[241]}))return{ext:"mpg",mime:"video/MP1S"};if(check([68],{offset:4,mask:[196]}))return{ext:"mpg",mime:"video/MP2P"}}if(checkString("ITSF"))return{ext:"chm",mime:"application/vnd.ms-htmlhelp"};if(check([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(checkString("<?xml "))return{ext:"xml",mime:"application/xml"};if(check([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(check([82,97,114,33,26,7])&&(0===buffer[6]||1===buffer[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(checkString("solid "))return{ext:"stl",mime:"model/stl"};if(checkString("BLENDER"))return{ext:"blend",mime:"application/x-blender"};if(checkString("!<arch>")){await tokenizer.ignore(8);return"debian-binary"===await tokenizer.readToken(new Token.StringType(13,"ascii"))?{ext:"deb",mime:"application/x-deb"}:{ext:"ar",mime:"application/x-unix-archive"}}if(check([137,80,78,71,13,10,26,10])){async function readChunkHeader(){return{length:await tokenizer.readToken(Token.INT32_BE),type:await tokenizer.readToken(new Token.StringType(4,"binary"))}}await tokenizer.ignore(8);do{const chunk=await readChunkHeader();if(chunk.length<0)return;switch(chunk.type){case"IDAT":return{ext:"png",mime:"image/png"};case"acTL":return{ext:"apng",mime:"image/apng"};default:await tokenizer.ignore(chunk.length+4)}}while(tokenizer.position+8<tokenizer.fileInfo.size);return{ext:"png",mime:"image/png"}}if(check([65,82,82,79,87,49,0,0]))return{ext:"arrow",mime:"application/x-apache-arrow"};if(check([103,108,84,70,2,0,0,0]))return{ext:"glb",mime:"model/gltf-binary"};if(check([102,114,101,101],{offset:4})||check([109,100,97,116],{offset:4})||check([109,111,111,118],{offset:4})||check([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(check([73,73,82,79,8,0,0,0,24]))return{ext:"orf",mime:"image/x-olympus-orf"};if(checkString("gimp xcf "))return{ext:"xcf",mime:"image/x-xcf"};if(check([73,73,85,0,24,0,0,0,136,231,116,216]))return{ext:"rw2",mime:"image/x-panasonic-rw2"};if(check([48,38,178,117,142,102,207,17,166,217])){async function readHeader(){const guid=Buffer.alloc(16);return await tokenizer.readBuffer(guid),{id:guid,size:Number(await tokenizer.readToken(Token.UINT64_LE))}}for(await tokenizer.ignore(30);tokenizer.position+24<tokenizer.fileInfo.size;){const header=await readHeader();let payload=header.size-24;if(_check(header.id,[145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101])){const typeId=Buffer.alloc(16);if(payload-=await tokenizer.readBuffer(typeId),_check(typeId,[64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"audio/x-ms-asf"};if(_check(typeId,[192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"video/x-ms-asf"};break}await tokenizer.ignore(payload)}return{ext:"asf",mime:"application/vnd.ms-asf"}}if(check([171,75,84,88,32,49,49,187,13,10,26,10]))return{ext:"ktx",mime:"image/ktx"};if((check([126,16,4])||check([126,24,4]))&&check([48,77,73,69],{offset:4}))return{ext:"mie",mime:"application/x-mie"};if(check([39,10,0,0,0,0,0,0,0,0,0,0],{offset:2}))return{ext:"shp",mime:"application/x-esri-shape"};if(check([0,0,0,12,106,80,32,32,13,10,135,10])){await tokenizer.ignore(20);switch(await tokenizer.readToken(new Token.StringType(4,"ascii"))){case"jp2 ":return{ext:"jp2",mime:"image/jp2"};case"jpx ":return{ext:"jpx",mime:"image/jpx"};case"jpm ":return{ext:"jpm",mime:"image/jpm"};case"mjp2":return{ext:"mj2",mime:"image/mj2"};default:return}}if(check([255,10])||check([0,0,0,12,74,88,76,32,13,10,135,10]))return{ext:"jxl",mime:"image/jxl"};if(check([0,0,1,186])||check([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(check([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(check([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(check([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(check([208,207,17,224,161,177,26,225]))return{ext:"cfb",mime:"application/x-cfb"};if(await tokenizer.peekBuffer(buffer,{length:Math.min(256,tokenizer.fileInfo.size),mayBeLess:!0}),checkString("BEGIN:")){if(checkString("VCARD",{offset:6}))return{ext:"vcf",mime:"text/vcard"};if(checkString("VCALENDAR",{offset:6}))return{ext:"ics",mime:"text/calendar"}}if(checkString("FUJIFILMCCD-RAW"))return{ext:"raf",mime:"image/x-fujifilm-raf"};if(checkString("Extended Module:"))return{ext:"xm",mime:"audio/x-xm"};if(checkString("Creative Voice File"))return{ext:"voc",mime:"audio/x-voc"};if(check([4,0,0,0])&&buffer.length>=16){const jsonSize=buffer.readUInt32LE(12);if(jsonSize>12&&buffer.length>=jsonSize+16)try{const header=buffer.slice(16,jsonSize+16).toString();if(JSON.parse(header).files)return{ext:"asar",mime:"application/x-asar"}}catch(_){}}if(check([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(checkString("SCRM",{offset:44}))return{ext:"s3m",mime:"audio/x-s3m"};if(check([71],{offset:4})&&(check([71],{offset:192})||check([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(check([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(check([68,73,67,77],{offset:128}))return{ext:"dcm",mime:"application/dicom"};if(check([76,0,0,0,1,20,2,0,0,0,0,0,192,0,0,0,0,0,0,70]))return{ext:"lnk",mime:"application/x.ms.shortcut"};if(check([98,111,111,107,0,0,0,0,109,97,114,107,0,0,0,0]))return{ext:"alias",mime:"application/x.apple.alias"};if(check([76,80],{offset:34})&&(check([0,0,1],{offset:8})||check([1,0,2],{offset:8})||check([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(check([6,6,237,245,216,29,70,229,189,49,239,231,254,116,183,29]))return{ext:"indd",mime:"application/x-indesign"};if(await tokenizer.peekBuffer(buffer,{length:Math.min(512,tokenizer.fileInfo.size),mayBeLess:!0}),tarHeaderChecksumMatches(buffer))return{ext:"tar",mime:"application/x-tar"};if(check([255,254,255,14,83,0,107,0,101,0,116,0,99,0,104,0,85,0,112,0,32,0,77,0,111,0,100,0,101,0,108,0]))return{ext:"skp",mime:"application/vnd.sketchup.skp"};if(checkString("-----BEGIN PGP MESSAGE-----"))return{ext:"pgp",mime:"application/pgp-encrypted"};if(buffer.length>=2&&check([255,224],{offset:0,mask:[255,224]})){if(check([16],{offset:1,mask:[22]}))return check([8],{offset:1,mask:[8]}),{ext:"aac",mime:"audio/aac"};if(check([2],{offset:1,mask:[6]}))return{ext:"mp3",mime:"audio/mpeg"};if(check([4],{offset:1,mask:[6]}))return{ext:"mp2",mime:"audio/mpeg"};if(check([6],{offset:1,mask:[6]}))return{ext:"mp1",mime:"audio/mpeg"}}}const stream=readableStream=>new Promise(((resolve,reject)=>{const stream=eval("require")("stream");readableStream.on("error",reject),readableStream.once("readable",(async()=>{const pass=new stream.PassThrough;let outputStream;outputStream=stream.pipeline?stream.pipeline(readableStream,pass,(()=>{})):readableStream.pipe(pass);const chunk=readableStream.read(minimumBytes)||readableStream.read()||Buffer.alloc(0);try{const fileType=await fromBuffer(chunk);pass.fileType=fileType}catch(error){reject(error)}resolve(outputStream)}))})),fileType={fromStream:fromStream,fromTokenizer:fromTokenizer,fromBuffer:fromBuffer,stream:stream};Object.defineProperty(fileType,"extensions",{get:()=>new Set(supported.extensions)}),Object.defineProperty(fileType,"mimeTypes",{get:()=>new Set(supported.mimeTypes)});var core=fileType,fileType$1=getDefaultExportFromCjs(core);function to(promise,errorExt){return promise.then((function(data){return[null,data]})).catch((function(err){return[err,void 0]}))}const readFile=fs$1.promises.readFile,writeFile=fs$1.promises.writeFile;function Mime$1(){this._types=Object.create(null),this._extensions=Object.create(null);for(let i=0;i<arguments.length;i++)this.define(arguments[i]);this.define=this.define.bind(this),this.getType=this.getType.bind(this),this.getExtension=this.getExtension.bind(this)}Mime$1.prototype.define=function(typeMap,force){for(let type in typeMap){let extensions=typeMap[type].map((function(t){return t.toLowerCase()}));type=type.toLowerCase();for(let i=0;i<extensions.length;i++){const ext=extensions[i];if("*"!==ext[0]){if(!force&&ext in this._types)throw new Error('Attempt to change mapping for "'+ext+'" extension from "'+this._types[ext]+'" to "'+type+'". Pass `force=true` to allow this, otherwise remove "'+ext+'" from the list of extensions for "'+type+'".');this._types[ext]=type}}if(force||!this._extensions[type]){const ext=extensions[0];this._extensions[type]="*"!==ext[0]?ext:ext.substr(1)}}},Mime$1.prototype.getType=function(path){let last=(path=String(path)).replace(/^.*[/\\]/,"").toLowerCase(),ext=last.replace(/^.*\./,"").toLowerCase(),hasPath=last.length<path.length;return(ext.length<last.length-1||!hasPath)&&this._types[ext]||null},Mime$1.prototype.getExtension=function(type){return(type=/^\s*([^;\s]*)/.test(type)&&RegExp.$1)&&this._extensions[type.toLowerCase()]||null};var Mime_1=Mime$1,standard={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["es","ecma"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/express":["exp"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/trig":["trig"],"application/ttml+xml":["ttml"],"application/ubjson":["ubj"],"application/urc-ressheet+xml":["rsheet"],"application/urc-targetdesc+xml":["td"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["*xsl","xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/amr":["amr"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx","opus"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/avif":["avif"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/ktx2":["ktx2"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/step+xml":["stpx"],"model/step+zip":["stpz"],"model/step-xml+zip":["stpxz"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/spdx":["spdx"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/iso.segment":["m4s"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]};let Mime=Mime_1;var lite=new Mime(standard),mime=getDefaultExportFromCjs(lite),HorizontalAlign,VerticalAlign,BlendMode;function srcOver(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a;return{r:(src.r*src.a+dst.r*dst.a*(1-src.a))/a,g:(src.g*src.a+dst.g*dst.a*(1-src.a))/a,b:(src.b*src.a+dst.b*dst.a*(1-src.a))/a,a:a}}function dstOver(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a;return{r:(dst.r*dst.a+src.r*src.a*(1-dst.a))/a,g:(dst.g*dst.a+src.g*src.a*(1-dst.a))/a,b:(dst.b*dst.a+src.b*src.a*(1-dst.a))/a,a:a}}function multiply(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a,g:(sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a,b:(sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a,a:a}}function add(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a;return{r:(sra+dst.r*dst.a)/a,g:(sga+dst.g*dst.a)/a,b:(sba+dst.b*dst.a)/a,a:a}}function screen(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(sra*dst.a+dra*src.a-sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a,g:(sga*dst.a+dga*src.a-sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a,b:(sba*dst.a+dba*src.a-sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a,a:a}}function overlay(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(2*dra<=dst.a?2*sra*dra+sra*(1-dst.a)+dra*(1-src.a):sra*(1+dst.a)+dra*(1+src.a)-2*dra*sra-dst.a*src.a)/a,g:(2*dga<=dst.a?2*sga*dga+sga*(1-dst.a)+dga*(1-src.a):sga*(1+dst.a)+dga*(1+src.a)-2*dga*sga-dst.a*src.a)/a,b:(2*dba<=dst.a?2*sba*dba+sba*(1-dst.a)+dba*(1-src.a):sba*(1+dst.a)+dba*(1+src.a)-2*dba*sba-dst.a*src.a)/a,a:a}}function darken(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(Math.min(sra*dst.a,dra*src.a)+sra*(1-dst.a)+dra*(1-src.a))/a,g:(Math.min(sga*dst.a,dga*src.a)+sga*(1-dst.a)+dga*(1-src.a))/a,b:(Math.min(sba*dst.a,dba*src.a)+sba*(1-dst.a)+dba*(1-src.a))/a,a:a}}function lighten(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(Math.max(sra*dst.a,dra*src.a)+sra*(1-dst.a)+dra*(1-src.a))/a,g:(Math.max(sga*dst.a,dga*src.a)+sga*(1-dst.a)+dga*(1-src.a))/a,b:(Math.max(sba*dst.a,dba*src.a)+sba*(1-dst.a)+dba*(1-src.a))/a,a:a}}function hardLight(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(2*sra<=src.a?2*sra*dra+sra*(1-dst.a)+dra*(1-src.a):sra*(1+dst.a)+dra*(1+src.a)-2*dra*sra-dst.a*src.a)/a,g:(2*sga<=src.a?2*sga*dga+sga*(1-dst.a)+dga*(1-src.a):sga*(1+dst.a)+dga*(1+src.a)-2*dga*sga-dst.a*src.a)/a,b:(2*sba<=src.a?2*sba*dba+sba*(1-dst.a)+dba*(1-src.a):sba*(1+dst.a)+dba*(1+src.a)-2*dba*sba-dst.a*src.a)/a,a:a}}function difference(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(sra+dra-2*Math.min(sra*dst.a,dra*src.a))/a,g:(sga+dga-2*Math.min(sga*dst.a,dga*src.a))/a,b:(sba+dba-2*Math.min(sba*dst.a,dba*src.a))/a,a:a}}function exclusion(src,dst,ops=1){src.a*=ops;const a=dst.a+src.a-dst.a*src.a,sra=src.r*src.a,sga=src.g*src.a,sba=src.b*src.a,dra=dst.r*dst.a,dga=dst.g*dst.a,dba=dst.b*dst.a;return{r:(sra*dst.a+dra*src.a-2*sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a,g:(sga*dst.a+dga*src.a-2*sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a,b:(sba*dst.a+dba*src.a-2*sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a,a:a}}!function(HorizontalAlign){HorizontalAlign[HorizontalAlign.LEFT=1]="LEFT",HorizontalAlign[HorizontalAlign.CENTER=2]="CENTER",HorizontalAlign[HorizontalAlign.RIGHT=4]="RIGHT"}(HorizontalAlign||(HorizontalAlign={})),function(VerticalAlign){VerticalAlign[VerticalAlign.TOP=8]="TOP",VerticalAlign[VerticalAlign.MIDDLE=16]="MIDDLE",VerticalAlign[VerticalAlign.BOTTOM=32]="BOTTOM"}(VerticalAlign||(VerticalAlign={})),function(BlendMode){BlendMode.SRC_OVER="srcOver",BlendMode.DST_OVER="dstOver",BlendMode.MULTIPLY="multiply",BlendMode.ADD="add",BlendMode.SCREEN="screen",BlendMode.OVERLAY="overlay",BlendMode.DARKEN="darken",BlendMode.LIGHTEN="lighten",BlendMode.HARD_LIGHT="hardLight",BlendMode.DIFFERENCE="difference",BlendMode.EXCLUSION="exclusion"}(BlendMode||(BlendMode={}));const names=[srcOver,dstOver,multiply,add,screen,overlay,darken,lighten,hardLight,difference,exclusion];var compositeModes=Object.freeze({__proto__:null,add:add,darken:darken,difference:difference,dstOver:dstOver,exclusion:exclusion,hardLight:hardLight,lighten:lighten,multiply:multiply,names:names,overlay:overlay,screen:screen,srcOver:srcOver});function composite(baseImage,src,x=0,y=0,options={}){if(!(src instanceof baseImage.constructor))throw new Error("The source must be a Jimp image");if("number"!=typeof x||"number"!=typeof y)throw new Error("x and y must be numbers");const{mode:mode=BlendMode.SRC_OVER}=options;let{opacitySource:opacitySource=1,opacityDest:opacityDest=1}=options;("number"!=typeof opacitySource||opacitySource<0||opacitySource>1)&&(opacitySource=1),("number"!=typeof opacityDest||opacityDest<0||opacityDest>1)&&(opacityDest=1);const blendmode=compositeModes[mode];return x=Math.round(x),y=Math.round(y),1!==opacityDest&&baseImage.scan(((_,__,idx)=>{const v=baseImage.bitmap.data[idx+3]*opacityDest;baseImage.bitmap.data[idx+3]=v})),src.scan(((sx,sy,idx)=>{const dstIdx=baseImage.getPixelIndex(x+sx,y+sy,Edge.CROP);if(-1===dstIdx)return;const blended=blendmode({r:src.bitmap.data[idx+0]/255,g:src.bitmap.data[idx+1]/255,b:src.bitmap.data[idx+2]/255,a:src.bitmap.data[idx+3]/255},{r:baseImage.bitmap.data[dstIdx+0]/255,g:baseImage.bitmap.data[dstIdx+1]/255,b:baseImage.bitmap.data[dstIdx+2]/255,a:baseImage.bitmap.data[dstIdx+3]/255},opacitySource);baseImage.bitmap.data[dstIdx+0]=limit255(255*blended.r),baseImage.bitmap.data[dstIdx+1]=limit255(255*blended.g),baseImage.bitmap.data[dstIdx+2]=limit255(255*blended.b),baseImage.bitmap.data[dstIdx+3]=limit255(255*blended.a)})),baseImage}var jpeg$1={parseSections:function(stream,iterator){var len,markerType;for(stream.setBigEndian(!0);stream.remainingLength()>0&&218!==markerType;){if(255!==stream.nextUInt8())throw new Error("Invalid JPEG section offset");len=(markerType=stream.nextUInt8())>=208&&markerType<=217||218===markerType?0:stream.nextUInt16()-2,iterator(markerType,stream.branch(0,len)),stream.skip(len)}},getSizeFromSOFSection:function(stream){return stream.skip(1),{height:stream.nextUInt16(),width:stream.nextUInt16()}},getSectionName:function(markerType){var name,index;switch(markerType){case 216:name="SOI";break;case 196:name="DHT";break;case 219:name="DQT";break;case 221:name="DRI";break;case 218:name="SOS";break;case 254:name="COM";break;case 217:name="EOI";break;default:markerType>=224&&markerType<=239?(name="APP",index=markerType-224):markerType>=192&&markerType<=207&&196!==markerType&&200!==markerType&&204!==markerType?(name="SOF",index=markerType-192):markerType>=208&&markerType<=215&&(name="RST",index=markerType-208)}var nameStruct={name:name};return"number"==typeof index&&(nameStruct.index=index),nameStruct}};function readExifValue(format,stream){switch(format){case 1:return stream.nextUInt8();case 3:case 8:return stream.nextUInt16();case 4:case 9:return stream.nextUInt32();case 5:return[stream.nextUInt32(),stream.nextUInt32()];case 6:return stream.nextInt8();case 10:return[stream.nextInt32(),stream.nextInt32()];case 11:return stream.nextFloat();case 12:return stream.nextDouble();default:throw new Error("Invalid format while decoding: "+format)}}function getBytesPerComponent(format){switch(format){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function readExifTag(tiffMarker,stream){var values,c,tagType=stream.nextUInt16(),format=stream.nextUInt16(),bytesPerComponent=getBytesPerComponent(format),components=stream.nextUInt32(),valueBytes=bytesPerComponent*components;if(valueBytes>4&&(stream=tiffMarker.openWithOffset(stream.nextUInt32())),2===format){var lastNull=(values=stream.nextString(components)).indexOf("\0");-1!==lastNull&&(values=values.substr(0,lastNull))}else if(7===format)values=stream.nextBuffer(components);else if(0!==format)for(values=[],c=0;c<components;++c)values.push(readExifValue(format,stream));return valueBytes<4&&stream.skip(4-valueBytes),[tagType,values,format]}function readIFDSection(tiffMarker,stream,iterator){var tag,i,numberOfEntries=stream.nextUInt16();for(i=0;i<numberOfEntries;++i)iterator((tag=readExifTag(tiffMarker,stream))[0],tag[1],tag[2])}function readHeader(stream){if("Exif\0\0"!==stream.nextString(6))throw new Error("Invalid EXIF header");var tiffMarker=stream.mark(),tiffHeader=stream.nextUInt16();if(18761===tiffHeader)stream.setBigEndian(!1);else{if(19789!==tiffHeader)throw new Error("Invalid TIFF header");stream.setBigEndian(!0)}if(42!==stream.nextUInt16())throw new Error("Invalid TIFF data");return tiffMarker}var exif$2={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(stream,iterator){var tiffMarker,subIfdOffset,gpsOffset,interopOffset;try{tiffMarker=readHeader(stream)}catch(e){return!1}var ifd0Stream=tiffMarker.openWithOffset(stream.nextUInt32()),IFD0=this.IFD0;readIFDSection(tiffMarker,ifd0Stream,(function(tagType,value,format){switch(tagType){case 34853:gpsOffset=value[0];break;case 34665:subIfdOffset=value[0];break;default:iterator(IFD0,tagType,value,format)}}));var ifd1Offset=ifd0Stream.nextUInt32();if(0!==ifd1Offset){var ifd1Stream=tiffMarker.openWithOffset(ifd1Offset);readIFDSection(tiffMarker,ifd1Stream,iterator.bind(null,this.IFD1))}if(gpsOffset){var gpsStream=tiffMarker.openWithOffset(gpsOffset);readIFDSection(tiffMarker,gpsStream,iterator.bind(null,this.GPSIFD))}if(subIfdOffset){var subIfdStream=tiffMarker.openWithOffset(subIfdOffset),InteropIFD=this.InteropIFD;readIFDSection(tiffMarker,subIfdStream,(function(tagType,value,format){40965===tagType?interopOffset=value[0]:iterator(InteropIFD,tagType,value,format)}))}if(interopOffset){var interopStream=tiffMarker.openWithOffset(interopOffset);readIFDSection(tiffMarker,interopStream,iterator.bind(null,this.InteropIFD))}return!0}};function parseNumber(s){return parseInt(s,10)}var hours=3600,minutes=60;function parseDateTimeParts(dateParts,timeParts){dateParts=dateParts.map(parseNumber),timeParts=timeParts.map(parseNumber);var year=dateParts[0],month=dateParts[1]-1,day=dateParts[2],hours=timeParts[0],minutes=timeParts[1],seconds=timeParts[2];return Date.UTC(year,month,day,hours,minutes,seconds,0)/1e3}function parseDateWithTimezoneFormat(dateTimeStr){var dateParts=dateTimeStr.substr(0,10).split("-"),timeParts=dateTimeStr.substr(11,8).split(":"),timezoneParts=dateTimeStr.substr(19,6).split(":").map(parseNumber),timezoneOffset=timezoneParts[0]*hours+timezoneParts[1]*minutes,timestamp=parseDateTimeParts(dateParts,timeParts);if("number"==typeof(timestamp-=timezoneOffset)&&!isNaN(timestamp))return timestamp}function parseDateWithSpecFormat(dateTimeStr){var parts=dateTimeStr.split(" "),timestamp=parseDateTimeParts(parts[0].split(":"),parts[1].split(":"));if("number"==typeof timestamp&&!isNaN(timestamp))return timestamp}function parseExifDate(dateTimeStr){var isSpecFormat=19===dateTimeStr.length&&":"===dateTimeStr.charAt(4);return 25===dateTimeStr.length&&"T"===dateTimeStr.charAt(10)?parseDateWithTimezoneFormat(dateTimeStr):isSpecFormat?parseDateWithSpecFormat(dateTimeStr):void 0}var date$1={parseDateWithSpecFormat:parseDateWithSpecFormat,parseDateWithTimezoneFormat:parseDateWithTimezoneFormat,parseExifDate:parseExifDate},exif$1=exif$2,date=date$1,degreeTags=[{section:exif$1.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:exif$1.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}],dateTags=[{section:exif$1.SubIFD,type:306,name:"ModifyDate"},{section:exif$1.SubIFD,type:36867,name:"DateTimeOriginal"},{section:exif$1.SubIFD,type:36868,name:"CreateDate"},{section:exif$1.SubIFD,type:306,name:"ModifyDate"}],simplify$1={castDegreeValues:function(getTagValue,setTagValue){degreeTags.forEach((function(t){var degreeVal=getTagValue(t);if(degreeVal){var degreeNumRef=getTagValue({section:t.section,type:t.refType,name:t.refName})===t.posVal?1:-1,degree=(degreeVal[0]+degreeVal[1]/60+degreeVal[2]/3600)*degreeNumRef;setTagValue(t,degree)}}))},castDateValues:function(getTagValue,setTagValue){dateTags.forEach((function(t){var dateStrVal=getTagValue(t);if(dateStrVal){var timestamp=date.parseExifDate(dateStrVal);void 0!==timestamp&&setTagValue(t,timestamp)}}))},simplifyValue:function(values,format){return Array.isArray(values)&&1===(values=values.map((function(value){return 10===format||5===format?value[0]/value[1]:value}))).length&&(values=values[0]),values}},exifTags,hasRequiredExifTags;function requireExifTags(){return hasRequiredExifTags?exifTags:(hasRequiredExifTags=1,exifTags={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}})}var jpeg=jpeg$1,exif=exif$2,simplify=simplify$1;function ExifResult(startMarker,tags,imageSize,thumbnailOffset,thumbnailLength,thumbnailType,app1Offset){this.startMarker=startMarker,this.tags=tags,this.imageSize=imageSize,this.thumbnailOffset=thumbnailOffset,this.thumbnailLength=thumbnailLength,this.thumbnailType=thumbnailType,this.app1Offset=app1Offset}function Parser$5(stream){this.stream=stream,this.flags={readBinaryTags:!1,resolveTagNames:!0,simplifyValues:!0,imageSize:!0,hidePointers:!0,returnTags:!0}}ExifResult.prototype={hasThumbnail:function(mime){return!(!this.thumbnailOffset||!this.thumbnailLength)&&("string"!=typeof mime||("image/jpeg"===mime.toLowerCase().trim()?6===this.thumbnailType:"image/tiff"===mime.toLowerCase().trim()&&1===this.thumbnailType))},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var size,stream=this._getThumbnailStream();return jpeg.parseSections(stream,(function(sectionType,sectionStream){"SOF"===jpeg.getSectionName(sectionType).name&&(size=jpeg.getSizeFromSOFSection(sectionStream))})),size}},Parser$5.prototype={enableBinaryFields:function(enable){return this.flags.readBinaryTags=!!enable,this},enablePointers:function(enable){return this.flags.hidePointers=!enable,this},enableTagNames:function(enable){return this.flags.resolveTagNames=!!enable,this},enableImageSize:function(enable){return this.flags.imageSize=!!enable,this},enableReturnTags:function(enable){return this.flags.returnTags=!!enable,this},enableSimpleValues:function(enable){return this.flags.simplifyValues=!!enable,this},parse:function(){var tags,imageSize,thumbnailOffset,thumbnailLength,thumbnailType,app1Offset,tagNames,getTagValue,setTagValue,start=this.stream.mark(),stream=start.openWithOffset(0),flags=this.flags;return flags.resolveTagNames&&(tagNames=requireExifTags()),flags.resolveTagNames?(tags={},getTagValue=function(t){return tags[t.name]},setTagValue=function(t,value){tags[t.name]=value}):(tags=[],getTagValue=function(t){var i;for(i=0;i<tags.length;++i)if(tags[i].type===t.type&&tags[i].section===t.section)return tags.value},setTagValue=function(t,value){var i;for(i=0;i<tags.length;++i)if(tags[i].type===t.type&&tags[i].section===t.section)return void(tags.value=value)}),jpeg.parseSections(stream,(function(sectionType,sectionStream){var validExifHeaders,sectionOffset=sectionStream.offsetFrom(start);225===sectionType?(validExifHeaders=exif.parseTags(sectionStream,(function(ifdSection,tagType,value,format){if(flags.readBinaryTags||7!==format){if(513===tagType){if(thumbnailOffset=value[0],flags.hidePointers)return}else if(514===tagType){if(thumbnailLength=value[0],flags.hidePointers)return}else if(259===tagType&&(thumbnailType=value[0],flags.hidePointers))return;if(flags.returnTags)if(flags.simplifyValues&&(value=simplify.simplifyValue(value,format)),flags.resolveTagNames){var name=(ifdSection===exif.GPSIFD?tagNames.gps:tagNames.exif)[tagType];name||(name=tagNames.exif[tagType]),tags.hasOwnProperty(name)||(tags[name]=value)}else tags.push({section:ifdSection,type:tagType,value:value})}})),validExifHeaders&&(app1Offset=sectionOffset)):flags.imageSize&&"SOF"===jpeg.getSectionName(sectionType).name&&(imageSize=jpeg.getSizeFromSOFSection(sectionStream))})),flags.simplifyValues&&(simplify.castDegreeValues(getTagValue,setTagValue),simplify.castDateValues(getTagValue,setTagValue)),new ExifResult(start,tags,imageSize,thumbnailOffset,thumbnailLength,thumbnailType,app1Offset)}};var parser$1=Parser$5,domBufferstream,hasRequiredDomBufferstream,bufferstream,hasRequiredBufferstream;function requireDomBufferstream(){if(hasRequiredDomBufferstream)return domBufferstream;function DOMBufferStream(arrayBuffer,offset,length,bigEndian,global,parentOffset){this.global=global,offset=offset||0,length=length||arrayBuffer.byteLength-offset,this.arrayBuffer=arrayBuffer.slice(offset,offset+length),this.view=new global.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength),this.setBigEndian(bigEndian),this.offset=0,this.parentOffset=(parentOffset||0)+offset}return hasRequiredDomBufferstream=1,DOMBufferStream.prototype={setBigEndian:function(bigEndian){this.littleEndian=!bigEndian},nextUInt8:function(){var value=this.view.getUint8(this.offset);return this.offset+=1,value},nextInt8:function(){var value=this.view.getInt8(this.offset);return this.offset+=1,value},nextUInt16:function(){var value=this.view.getUint16(this.offset,this.littleEndian);return this.offset+=2,value},nextUInt32:function(){var value=this.view.getUint32(this.offset,this.littleEndian);return this.offset+=4,value},nextInt16:function(){var value=this.view.getInt16(this.offset,this.littleEndian);return this.offset+=2,value},nextInt32:function(){var value=this.view.getInt32(this.offset,this.littleEndian);return this.offset+=4,value},nextFloat:function(){var value=this.view.getFloat32(this.offset,this.littleEndian);return this.offset+=4,value},nextDouble:function(){var value=this.view.getFloat64(this.offset,this.littleEndian);return this.offset+=8,value},nextBuffer:function(length){var value=this.arrayBuffer.slice(this.offset,this.offset+length);return this.offset+=length,value},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(length){var value=this.arrayBuffer.slice(this.offset,this.offset+length);return value=String.fromCharCode.apply(null,new this.global.Uint8Array(value)),this.offset+=length,value},mark:function(){var self=this;return{openWithOffset:function(offset){return offset=(offset||0)+this.offset,new DOMBufferStream(self.arrayBuffer,offset,self.arrayBuffer.byteLength-offset,!self.littleEndian,self.global,self.parentOffset)},offset:this.offset,getParentOffset:function(){return self.parentOffset}}},offsetFrom:function(marker){return this.parentOffset+this.offset-(marker.offset+marker.getParentOffset())},skip:function(amount){this.offset+=amount},branch:function(offset,length){return length="number"==typeof length?length:this.arrayBuffer.byteLength-(this.offset+offset),new DOMBufferStream(this.arrayBuffer,this.offset+offset,length,!this.littleEndian,this.global,this.parentOffset)}},domBufferstream=DOMBufferStream}function requireBufferstream(){if(hasRequiredBufferstream)return bufferstream;function BufferStream(buffer,offset,length,bigEndian){this.buffer=buffer,this.offset=offset||0,length="number"==typeof length?length:buffer.length,this.endPosition=this.offset+length,this.setBigEndian(bigEndian)}return hasRequiredBufferstream=1,BufferStream.prototype={setBigEndian:function(bigEndian){this.bigEndian=!!bigEndian},nextUInt8:function(){var value=this.buffer.readUInt8(this.offset);return this.offset+=1,value},nextInt8:function(){var value=this.buffer.readInt8(this.offset);return this.offset+=1,value},nextUInt16:function(){var value=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);return this.offset+=2,value},nextUInt32:function(){var value=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);return this.offset+=4,value},nextInt16:function(){var value=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);return this.offset+=2,value},nextInt32:function(){var value=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);return this.offset+=4,value},nextFloat:function(){var value=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);return this.offset+=4,value},nextDouble:function(){var value=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);return this.offset+=8,value},nextBuffer:function(length){var value=this.buffer.slice(this.offset,this.offset+length);return this.offset+=length,value},remainingLength:function(){return this.endPosition-this.offset},nextString:function(length){var value=this.buffer.toString("utf8",this.offset,this.offset+length);return this.offset+=length,value},mark:function(){var self=this;return{openWithOffset:function(offset){return offset=(offset||0)+this.offset,new BufferStream(self.buffer,offset,self.endPosition-offset,self.bigEndian)},offset:this.offset}},offsetFrom:function(marker){return this.offset-marker.offset},skip:function(amount){this.offset+=amount},branch:function(offset,length){return length="number"==typeof length?length:this.endPosition-(this.offset+offset),new BufferStream(this.buffer,this.offset+offset,length,this.bigEndian)}},bufferstream=BufferStream}var Parser$4=parser$1;function getGlobal(){return(0,eval)("this")}var exifParser={create:function(buffer,global){if(buffer instanceof(global=global||getGlobal()).ArrayBuffer){var DOMBufferStream=requireDomBufferstream();return new Parser$4(new DOMBufferStream(buffer,0,buffer.byteLength,!0,global))}var NodeBufferStream=requireBufferstream();return new Parser$4(new NodeBufferStream(buffer,0,buffer.length,!0))}},EXIFParser=getDefaultExportFromCjs(exifParser);function getExifOrientation(img){const _exif=img._exif;return _exif&&_exif.tags&&_exif.tags.Orientation||1}function getExifOrientationTransformation(img){const w=img.bitmap.width,h=img.bitmap.height;switch(getExifOrientation(img)){case 1:default:return null;case 2:return function(x,y){return[w-x-1,y]};case 3:return function(x,y){return[w-x-1,h-y-1]};case 4:return function(x,y){return[x,h-y-1]};case 5:return function(x,y){return[y,x]};case 6:return function(x,y){return[y,h-x-1]};case 7:return function(x,y){return[w-y-1,h-x-1]};case 8:return function(x,y){return[w-y-1,x]}}}function transformBitmap(img,width,height,transformation){const _data=img.bitmap.data,_width=img.bitmap.width,data=Buffer.alloc(_data.length);for(let x=0;x<width;x++)for(let y=0;y<height;y++){const[_x,_y]=transformation(x,y),idx=width*y+x<<2,_idx=_width*_y+_x<<2,pixel=_data.readUInt32BE(_idx);data.writeUInt32BE(pixel,idx)}img.bitmap.data=data,img.bitmap.width=width,img.bitmap.height=height,img._exif.tags.Orientation=1}function exifRotate(img){if(getExifOrientation(img)<2)return;const transformation=getExifOrientationTransformation(img),swapDimensions=getExifOrientation(img)>4,newWidth=swapDimensions?img.bitmap.height:img.bitmap.width,newHeight=swapDimensions?img.bitmap.width:img.bitmap.height;transformation&&transformBitmap(img,newWidth,newHeight,transformation)}async function attemptExifRotate(image,buffer){try{image._exif=EXIFParser.create(buffer).parse(),exifRotate(image)}catch{}}const emptyBitmap={data:Buffer.alloc(0),width:0,height:0};function bufferFromArrayBuffer(arrayBuffer){const buffer=Buffer.alloc(arrayBuffer.byteLength),view=new Uint8Array(arrayBuffer);for(let i=0;i<buffer.length;++i)buffer[i]=view[i];return buffer}function createJimp({plugins:pluginsArg,formats:formatsArg}={}){const plugins=pluginsArg||[],formats=(formatsArg||[]).map((format=>format())),CustomJimp=class{bitmap=emptyBitmap;background=0;formats=[];mime;constructor(options=emptyBitmap){if(this.formats=formats,"data"in options)this.bitmap=options;else if(this.bitmap={data:Buffer.alloc(options.width*options.height*4),width:options.width,height:options.height},options.color){this.background="string"==typeof options.color?cssColorToHex(options.color):options.color;for(let i=0;i<this.bitmap.data.length;i+=4)this.bitmap.data.writeUInt32BE(this.background,i)}for(const methods of plugins)for(const key in methods)this[key]=(...args)=>{const result=methods[key]?.(this,...args);return"object"==typeof result&&"bitmap"in result?(this.bitmap=result.bitmap,this):result}}static async read(url,options){if(Buffer.isBuffer(url)||url instanceof ArrayBuffer)return this.fromBuffer(url);if(fs$1.existsSync(url))return this.fromBuffer(await readFile(url));const[fetchErr,response]=await to(fetch(url));if(fetchErr)throw new Error(`Could not load Buffer from URL: ${url}`);if(!response.ok)throw new Error(`HTTP Status ${response.status} for url ${url}`);const[arrayBufferErr,data]=await to(response.arrayBuffer());if(arrayBufferErr)throw new Error(`Could not load Buffer from ${url}`);const buffer=bufferFromArrayBuffer(data);return this.fromBuffer(buffer,options)}static fromBitmap(bitmap){let data;if(bitmap.data instanceof Buffer&&(data=Buffer.from(bitmap.data)),(bitmap.data instanceof Uint8Array||bitmap.data instanceof Uint8ClampedArray)&&(data=Buffer.from(bitmap.data.buffer)),Array.isArray(bitmap.data)&&(data=Buffer.concat(bitmap.data.map((hex=>Buffer.from(hex.toString(16).padStart(8,"0"),"hex"))))),!data)throw new Error("data must be a Buffer");if("number"!=typeof bitmap.height||"number"!=typeof bitmap.width)throw new Error("bitmap must have width and height");return new CustomJimp({height:bitmap.height,width:bitmap.width,data:data})}static async fromBuffer(buffer,options){const actualBuffer=buffer instanceof ArrayBuffer?bufferFromArrayBuffer(buffer):buffer,mime=await fileType$1.fromBuffer(actualBuffer);if(!mime||!mime.mime)throw new Error("Could not find MIME for Buffer");const format=formats.find((format=>format.mime===mime.mime));if(!format||!format.decode)throw new Error(`Mime type ${mime.mime} does not support decoding`);const image=new CustomJimp(await format.decode(actualBuffer,options?.[format.mime]));return image.mime=mime.mime,attemptExifRotate(image,actualBuffer),image}inspect(){return"<Jimp "+(this.bitmap===emptyBitmap?"pending...":this.bitmap.width+"x"+this.bitmap.height)+">"}toString(){return"[object Jimp]"}get width(){return this.bitmap.width}get height(){return this.bitmap.height}async getBuffer(mime,options){const format=this.formats.find((format=>format.mime===mime));if(!format||!format.encode)throw new Error(`Unsupported MIME type: ${mime}`);let outputImage;return format.hasAlpha?outputImage=this:(outputImage=new CustomJimp({width:this.bitmap.width,height:this.bitmap.height,color:this.background}),composite(outputImage,this)),format.encode(outputImage.bitmap,options)}async getBase64(mime,options){return"data:"+mime+";base64,"+(await this.getBuffer(mime,options)).toString("base64")}async write(path,options){const mimeType=mime.getType(path);await writeFile(path,await this.getBuffer(mimeType,options))}clone(){return new CustomJimp({...this.bitmap,data:Buffer.from(this.bitmap.data)})}getPixelIndex(x,y,edgeHandling){let xi,yi;if(edgeHandling||(edgeHandling=Edge.EXTEND),"number"!=typeof x||"number"!=typeof y)throw new Error("x and y must be numbers");xi=x=Math.round(x),yi=y=Math.round(y),edgeHandling===Edge.EXTEND&&(x<0&&(xi=0),x>=this.bitmap.width&&(xi=this.bitmap.width-1),y<0&&(yi=0),y>=this.bitmap.height&&(yi=this.bitmap.height-1)),edgeHandling===Edge.WRAP&&(x<0&&(xi=this.bitmap.width+x),x>=this.bitmap.width&&(xi=x%this.bitmap.width),y<0&&(yi=this.bitmap.height+y),y>=this.bitmap.height&&(yi=y%this.bitmap.height));let i=this.bitmap.width*yi+xi<<2;return(xi<0||xi>=this.bitmap.width)&&(i=-1),(yi<0||yi>=this.bitmap.height)&&(i=-1),i}getPixelColor(x,y){if("number"!=typeof x||"number"!=typeof y)throw new Error("x and y must be numbers");const idx=this.getPixelIndex(x,y);return this.bitmap.data.readUInt32BE(idx)}setPixelColor(hex,x,y){if("number"!=typeof hex||"number"!=typeof x||"number"!=typeof y)throw new Error("hex, x and y must be numbers");const idx=this.getPixelIndex(x,y);return this.bitmap.data.writeUInt32BE(hex,idx),this}hasAlpha(){const{width:width,height:height,data:data}=this.bitmap,byteLen=width*height<<2;for(let idx=3;idx<byteLen;idx+=4)if(255!==data[idx])return!0;return!1}composite(src,x=0,y=0,options={}){return composite(this,src,x,y,options)}scan(x,y,w,h,f){return scan(this,x,y,w,h,f)}scanIterator(x=0,y=0,w=this.bitmap.width,h=this.bitmap.height){if("number"!=typeof x||"number"!=typeof y)throw new Error("x and y must be numbers");if("number"!=typeof w||"number"!=typeof h)throw new Error("w and h must be numbers");return scanIterator(this,x,y,w,h)}};return CustomJimp}var parserAsync={exports:{}},chunkstream={exports:{}};let util$4=require$$0,Stream$2=require$$1,ChunkStream$2=chunkstream.exports=function(){Stream$2.call(this),this._buffers=[],this._buffered=0,this._reads=[],this._paused=!1,this._encoding="utf8",this.writable=!0};util$4.inherits(ChunkStream$2,Stream$2),ChunkStream$2.prototype.read=function(length,callback){this._reads.push({length:Math.abs(length),allowLess:length<0,func:callback}),process.nextTick(function(){this._process(),this._paused&&this._reads&&this._reads.length>0&&(this._paused=!1,this.emit("drain"))}.bind(this))},ChunkStream$2.prototype.write=function(data,encoding){if(!this.writable)return this.emit("error",new Error("Stream not writable")),!1;let dataBuffer;return dataBuffer=Buffer.isBuffer(data)?data:Buffer.from(data,encoding||this._encoding),this._buffers.push(dataBuffer),this._buffered+=dataBuffer.length,this._process(),this._reads&&0===this._reads.length&&(this._paused=!0),this.writable&&!this._paused},ChunkStream$2.prototype.end=function(data,encoding){data&&this.write(data,encoding),this.writable=!1,this._buffers&&(0===this._buffers.length?this._end():(this._buffers.push(null),this._process()))},ChunkStream$2.prototype.destroySoon=ChunkStream$2.prototype.end,ChunkStream$2.prototype._end=function(){this._reads.length>0&&this.emit("error",new Error("Unexpected end of input")),this.destroy()},ChunkStream$2.prototype.destroy=function(){this._buffers&&(this.writable=!1,this._reads=null,this._buffers=null,this.emit("close"))},ChunkStream$2.prototype._processReadAllowingLess=function(read){this._reads.shift();let smallerBuf=this._buffers[0];smallerBuf.length>read.length?(this._buffered-=read.length,this._buffers[0]=smallerBuf.slice(read.length),read.func.call(this,smallerBuf.slice(0,read.length))):(this._buffered-=smallerBuf.length,this._buffers.shift(),read.func.call(this,smallerBuf))},ChunkStream$2.prototype._processRead=function(read){this._reads.shift();let pos=0,count=0,data=Buffer.alloc(read.length);for(;pos<read.length;){let buf=this._buffers[count++],len=Math.min(buf.length,read.length-pos);buf.copy(data,pos,0,len),pos+=len,len!==buf.length&&(this._buffers[--count]=buf.slice(len))}count>0&&this._buffers.splice(0,count),this._buffered-=read.length,read.func.call(this,data)},ChunkStream$2.prototype._process=function(){try{for(;this._buffered>0&&this._reads&&this._reads.length>0;){let read=this._reads[0];if(read.allowLess)this._processReadAllowingLess(read);else{if(!(this._buffered>=read.length))break;this._processRead(read)}}this._buffers&&!this.writable&&this._end()}catch(ex){this.emit("error",ex)}};var chunkstreamExports=chunkstream.exports,filterParseAsync={exports:{}},filterParse={exports:{}},interlace={};let imagePasses=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];interlace.getImagePasses=function(width,height){let images=[],xLeftOver=width%8,yLeftOver=height%8,xRepeats=(width-xLeftOver)/8,yRepeats=(height-yLeftOver)/8;for(let i=0;i<imagePasses.length;i++){let pass=imagePasses[i],passWidth=xRepeats*pass.x.length,passHeight=yRepeats*pass.y.length;for(let j=0;j<pass.x.length&&pass.x[j]<xLeftOver;j++)passWidth++;for(let j=0;j<pass.y.length&&pass.y[j]<yLeftOver;j++)passHeight++;passWidth>0&&passHeight>0&&images.push({width:passWidth,height:passHeight,index:i})}return images},interlace.getInterlaceIterator=function(width){return function(x,y,pass){let outerXLeftOver=x%imagePasses[pass].x.length,outerX=(x-outerXLeftOver)/imagePasses[pass].x.length*8+imagePasses[pass].x[outerXLeftOver],outerYLeftOver=y%imagePasses[pass].y.length;return 4*outerX+((y-outerYLeftOver)/imagePasses[pass].y.length*8+imagePasses[pass].y[outerYLeftOver])*width*4}};var paethPredictor$2=function(left,above,upLeft){let paeth=left+above-upLeft,pLeft=Math.abs(paeth-left),pAbove=Math.abs(paeth-above),pUpLeft=Math.abs(paeth-upLeft);return pLeft<=pAbove&&pLeft<=pUpLeft?left:pAbove<=pUpLeft?above:upLeft};let interlaceUtils$1=interlace,paethPredictor$1=paethPredictor$2;function getByteWidth(width,bpp,depth){let byteWidth=width*bpp;return 8!==depth&&(byteWidth=Math.ceil(byteWidth/(8/depth))),byteWidth}let Filter$2=filterParse.exports=function(bitmapInfo,dependencies){let width=bitmapInfo.width,height=bitmapInfo.height,interlace=bitmapInfo.interlace,bpp=bitmapInfo.bpp,depth=bitmapInfo.depth;if(this.read=dependencies.read,this.write=dependencies.write,this.complete=dependencies.complete,this._imageIndex=0,this._images=[],interlace){let passes=interlaceUtils$1.getImagePasses(width,height);for(let i=0;i<passes.length;i++)this._images.push({byteWidth:getByteWidth(passes[i].width,bpp,depth),height:passes[i].height,lineIndex:0})}else this._images.push({byteWidth:getByteWidth(width,bpp,depth),height:height,lineIndex:0});this._xComparison=8===depth?bpp:16===depth?2*bpp:1};Filter$2.prototype.start=function(){this.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this))},Filter$2.prototype._unFilterType1=function(rawData,unfilteredLine,byteWidth){let xComparison=this._xComparison,xBiggerThan=xComparison-1;for(let x=0;x<byteWidth;x++){let rawByte=rawData[1+x],f1Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0;unfilteredLine[x]=rawByte+f1Left}},Filter$2.prototype._unFilterType2=function(rawData,unfilteredLine,byteWidth){let lastLine=this._lastLine;for(let x=0;x<byteWidth;x++){let rawByte=rawData[1+x],f2Up=lastLine?lastLine[x]:0;unfilteredLine[x]=rawByte+f2Up}},Filter$2.prototype._unFilterType3=function(rawData,unfilteredLine,byteWidth){let xComparison=this._xComparison,xBiggerThan=xComparison-1,lastLine=this._lastLine;for(let x=0;x<byteWidth;x++){let rawByte=rawData[1+x],f3Up=lastLine?lastLine[x]:0,f3Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0,f3Add=Math.floor((f3Left+f3Up)/2);unfilteredLine[x]=rawByte+f3Add}},Filter$2.prototype._unFilterType4=function(rawData,unfilteredLine,byteWidth){let xComparison=this._xComparison,xBiggerThan=xComparison-1,lastLine=this._lastLine;for(let x=0;x<byteWidth;x++){let rawByte=rawData[1+x],f4Up=lastLine?lastLine[x]:0,f4Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0,f4UpLeft=x>xBiggerThan&&lastLine?lastLine[x-xComparison]:0,f4Add=paethPredictor$1(f4Left,f4Up,f4UpLeft);unfilteredLine[x]=rawByte+f4Add}},Filter$2.prototype._reverseFilterLine=function(rawData){let unfilteredLine,filter=rawData[0],currentImage=this._images[this._imageIndex],byteWidth=currentImage.byteWidth;if(0===filter)unfilteredLine=rawData.slice(1,byteWidth+1);else switch(unfilteredLine=Buffer.alloc(byteWidth),filter){case 1:this._unFilterType1(rawData,unfilteredLine,byteWidth);break;case 2:this._unFilterType2(rawData,unfilteredLine,byteWidth);break;case 3:this._unFilterType3(rawData,unfilteredLine,byteWidth);break;case 4:this._unFilterType4(rawData,unfilteredLine,byteWidth);break;default:throw new Error("Unrecognised filter type - "+filter)}this.write(unfilteredLine),currentImage.lineIndex++,currentImage.lineIndex>=currentImage.height?(this._lastLine=null,this._imageIndex++,currentImage=this._images[this._imageIndex]):this._lastLine=unfilteredLine,currentImage?this.read(currentImage.byteWidth+1,this._reverseFilterLine.bind(this)):(this._lastLine=null,this.complete())};var filterParseExports=filterParse.exports;let util$3=require$$0,ChunkStream$1=chunkstreamExports,Filter$1=filterParseExports,FilterAsync$1=filterParseAsync.exports=function(bitmapInfo){ChunkStream$1.call(this);let buffers=[],that=this;this._filter=new Filter$1(bitmapInfo,{read:this.read.bind(this),write:function(buffer){buffers.push(buffer)},complete:function(){that.emit("complete",Buffer.concat(buffers))}}),this._filter.start()};util$3.inherits(FilterAsync$1,ChunkStream$1);var filterParseAsyncExports=filterParseAsync.exports,parser={exports:{}},constants$5={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5},crc={exports:{}};let crcTable=[];!function(){for(let i=0;i<256;i++){let currentCrc=i;for(let j=0;j<8;j++)1&currentCrc?currentCrc=3988292384^currentCrc>>>1:currentCrc>>>=1;crcTable[i]=currentCrc}}();let CrcCalculator$1=crc.exports=function(){this._crc=-1};CrcCalculator$1.prototype.write=function(data){for(let i=0;i<data.length;i++)this._crc=crcTable[255&(this._crc^data[i])]^this._crc>>>8;return!0},CrcCalculator$1.prototype.crc32=function(){return~this._crc},CrcCalculator$1.crc32=function(buf){let crc=-1;for(let i=0;i<buf.length;i++)crc=crcTable[255&(crc^buf[i])]^crc>>>8;return~crc};var crcExports=crc.exports;let constants$4=constants$5,CrcCalculator=crcExports,Parser$3=parser.exports=function(options,dependencies){this._options=options,options.checkCRC=!1!==options.checkCRC,this._hasIHDR=!1,this._hasIEND=!1,this._emittedHeadersFinished=!1,this._palette=[],this._colorType=0,this._chunks={},this._chunks[constants$4.TYPE_IHDR]=this._handleIHDR.bind(this),this._chunks[constants$4.TYPE_IEND]=this._handleIEND.bind(this),this._chunks[constants$4.TYPE_IDAT]=this._handleIDAT.bind(this),this._chunks[constants$4.TYPE_PLTE]=this._handlePLTE.bind(this),this._chunks[constants$4.TYPE_tRNS]=this._handleTRNS.bind(this),this._chunks[constants$4.TYPE_gAMA]=this._handleGAMA.bind(this),this.read=dependencies.read,this.error=dependencies.error,this.metadata=dependencies.metadata,this.gamma=dependencies.gamma,this.transColor=dependencies.transColor,this.palette=dependencies.palette,this.parsed=dependencies.parsed,this.inflateData=dependencies.inflateData,this.finished=dependencies.finished,this.simpleTransparency=dependencies.simpleTransparency,this.headersFinished=dependencies.headersFinished||function(){}};Parser$3.prototype.start=function(){this.read(constants$4.PNG_SIGNATURE.length,this._parseSignature.bind(this))},Parser$3.prototype._parseSignature=function(data){let signature=constants$4.PNG_SIGNATURE;for(let i=0;i<signature.length;i++)if(data[i]!==signature[i])return void this.error(new Error("Invalid file signature"));this.read(8,this._parseChunkBegin.bind(this))},Parser$3.prototype._parseChunkBegin=function(data){let length=data.readUInt32BE(0),type=data.readUInt32BE(4),name="";for(let i=4;i<8;i++)name+=String.fromCharCode(data[i]);let ancillary=Boolean(32&data[4]);if(this._hasIHDR||type===constants$4.TYPE_IHDR){if(this._crc=new CrcCalculator,this._crc.write(Buffer.from(name)),this._chunks[type])return this._chunks[type](length);ancillary?this.read(length+4,this._skipChunk.bind(this)):this.error(new Error("Unsupported critical chunk type "+name))}else this.error(new Error("Expected IHDR on beggining"))},Parser$3.prototype._skipChunk=function(){this.read(8,this._parseChunkBegin.bind(this))},Parser$3.prototype._handleChunkEnd=function(){this.read(4,this._parseChunkEnd.bind(this))},Parser$3.prototype._parseChunkEnd=function(data){let fileCrc=data.readInt32BE(0),calcCrc=this._crc.crc32();this._options.checkCRC&&calcCrc!==fileCrc?this.error(new Error("Crc error - "+fileCrc+" - "+calcCrc)):this._hasIEND||this.read(8,this._parseChunkBegin.bind(this))},Parser$3.prototype._handleIHDR=function(length){this.read(length,this._parseIHDR.bind(this))},Parser$3.prototype._parseIHDR=function(data){this._crc.write(data);let width=data.readUInt32BE(0),height=data.readUInt32BE(4),depth=data[8],colorType=data[9],compr=data[10],filter=data[11],interlace=data[12];if(8!==depth&&4!==depth&&2!==depth&&1!==depth&&16!==depth)return void this.error(new Error("Unsupported bit depth "+depth));if(!(colorType in constants$4.COLORTYPE_TO_BPP_MAP))return void this.error(new Error("Unsupported color type"));if(0!==compr)return void this.error(new Error("Unsupported compression method"));if(0!==filter)return void this.error(new Error("Unsupported filter method"));if(0!==interlace&&1!==interlace)return void this.error(new Error("Unsupported interlace method"));this._colorType=colorType;let bpp=constants$4.COLORTYPE_TO_BPP_MAP[this._colorType];this._hasIHDR=!0,this.metadata({width:width,height:height,depth:depth,interlace:Boolean(interlace),palette:Boolean(colorType&constants$4.COLORTYPE_PALETTE),color:Boolean(colorType&constants$4.COLORTYPE_COLOR),alpha:Boolean(colorType&constants$4.COLORTYPE_ALPHA),bpp:bpp,colorType:colorType}),this._handleChunkEnd()},Parser$3.prototype._handlePLTE=function(length){this.read(length,this._parsePLTE.bind(this))},Parser$3.prototype._parsePLTE=function(data){this._crc.write(data);let entries=Math.floor(data.length/3);for(let i=0;i<entries;i++)this._palette.push([data[3*i],data[3*i+1],data[3*i+2],255]);this.palette(this._palette),this._handleChunkEnd()},Parser$3.prototype._handleTRNS=function(length){this.simpleTransparency(),this.read(length,this._parseTRNS.bind(this))},Parser$3.prototype._parseTRNS=function(data){if(this._crc.write(data),this._colorType===constants$4.COLORTYPE_PALETTE_COLOR){if(0===this._palette.length)return void this.error(new Error("Transparency chunk must be after palette"));if(data.length>this._palette.length)return void this.error(new Error("More transparent colors than palette size"));for(let i=0;i<data.length;i++)this._palette[i][3]=data[i];this.palette(this._palette)}this._colorType===constants$4.COLORTYPE_GRAYSCALE&&this.transColor([data.readUInt16BE(0)]),this._colorType===constants$4.COLORTYPE_COLOR&&this.transColor([data.readUInt16BE(0),data.readUInt16BE(2),data.readUInt16BE(4)]),this._handleChunkEnd()},Parser$3.prototype._handleGAMA=function(length){this.read(length,this._parseGAMA.bind(this))},Parser$3.prototype._parseGAMA=function(data){this._crc.write(data),this.gamma(data.readUInt32BE(0)/constants$4.GAMMA_DIVISION),this._handleChunkEnd()},Parser$3.prototype._handleIDAT=function(length){this._emittedHeadersFinished||(this._emittedHeadersFinished=!0,this.headersFinished()),this.read(-length,this._parseIDAT.bind(this,length))},Parser$3.prototype._parseIDAT=function(length,data){if(this._crc.write(data),this._colorType===constants$4.COLORTYPE_PALETTE_COLOR&&0===this._palette.length)throw new Error("Expected palette not found");this.inflateData(data);let leftOverLength=length-data.length;leftOverLength>0?this._handleIDAT(leftOverLength):this._handleChunkEnd()},Parser$3.prototype._handleIEND=function(length){this.read(length,this._parseIEND.bind(this))},Parser$3.prototype._parseIEND=function(data){this._crc.write(data),this._hasIEND=!0,this._handleChunkEnd(),this.finished&&this.finished()};var parserExports=parser.exports,bitmapper$2={};let interlaceUtils=interlace,pixelBppMapper=[function(){},function(pxData,data,pxPos,rawPos){if(rawPos===data.length)throw new Error("Ran out of data");let pixel=data[rawPos];pxData[pxPos]=pixel,pxData[pxPos+1]=pixel,pxData[pxPos+2]=pixel,pxData[pxPos+3]=255},function(pxData,data,pxPos,rawPos){if(rawPos+1>=data.length)throw new Error("Ran out of data");let pixel=data[rawPos];pxData[pxPos]=pixel,pxData[pxPos+1]=pixel,pxData[pxPos+2]=pixel,pxData[pxPos+3]=data[rawPos+1]},function(pxData,data,pxPos,rawPos){if(rawPos+2>=data.length)throw new Error("Ran out of data");pxData[pxPos]=data[rawPos],pxData[pxPos+1]=data[rawPos+1],pxData[pxPos+2]=data[rawPos+2],pxData[pxPos+3]=255},function(pxData,data,pxPos,rawPos){if(rawPos+3>=data.length)throw new Error("Ran out of data");pxData[pxPos]=data[rawPos],pxData[pxPos+1]=data[rawPos+1],pxData[pxPos+2]=data[rawPos+2],pxData[pxPos+3]=data[rawPos+3]}],pixelBppCustomMapper=[function(){},function(pxData,pixelData,pxPos,maxBit){let pixel=pixelData[0];pxData[pxPos]=pixel,pxData[pxPos+1]=pixel,pxData[pxPos+2]=pixel,pxData[pxPos+3]=maxBit},function(pxData,pixelData,pxPos){let pixel=pixelData[0];pxData[pxPos]=pixel,pxData[pxPos+1]=pixel,pxData[pxPos+2]=pixel,pxData[pxPos+3]=pixelData[1]},function(pxData,pixelData,pxPos,maxBit){pxData[pxPos]=pixelData[0],pxData[pxPos+1]=pixelData[1],pxData[pxPos+2]=pixelData[2],pxData[pxPos+3]=maxBit},function(pxData,pixelData,pxPos){pxData[pxPos]=pixelData[0],pxData[pxPos+1]=pixelData[1],pxData[pxPos+2]=pixelData[2],pxData[pxPos+3]=pixelData[3]}];function bitRetriever(data,depth){let leftOver=[],i=0;function split(){if(i===data.length)throw new Error("Ran out of data");let byte8,byte7,byte6,byte5,byte4,byte3,byte2,byte1,byte=data[i];switch(i++,depth){default:throw new Error("unrecognised depth");case 16:byte2=data[i],i++,leftOver.push((byte<<8)+byte2);break;case 4:byte2=15&byte,byte1=byte>>4,leftOver.push(byte1,byte2);break;case 2:byte4=3&byte,byte3=byte>>2&3,byte2=byte>>4&3,byte1=byte>>6&3,leftOver.push(byte1,byte2,byte3,byte4);break;case 1:byte8=1&byte,byte7=byte>>1&1,byte6=byte>>2&1,byte5=byte>>3&1,byte4=byte>>4&1,byte3=byte>>5&1,byte2=byte>>6&1,byte1=byte>>7&1,leftOver.push(byte1,byte2,byte3,byte4,byte5,byte6,byte7,byte8)}}return{get:function(count){for(;leftOver.length<count;)split();let returner=leftOver.slice(0,count);return leftOver=leftOver.slice(count),returner},resetAfterLine:function(){leftOver.length=0},end:function(){if(i!==data.length)throw new Error("extra data found")}}}function mapImage8Bit(image,pxData,getPxPos,bpp,data,rawPos){let imageWidth=image.width,imageHeight=image.height,imagePass=image.index;for(let y=0;y<imageHeight;y++)for(let x=0;x<imageWidth;x++){let pxPos=getPxPos(x,y,imagePass);pixelBppMapper[bpp](pxData,data,pxPos,rawPos),rawPos+=bpp}return rawPos}function mapImageCustomBit(image,pxData,getPxPos,bpp,bits,maxBit){let imageWidth=image.width,imageHeight=image.height,imagePass=image.index;for(let y=0;y<imageHeight;y++){for(let x=0;x<imageWidth;x++){let pixelData=bits.get(bpp),pxPos=getPxPos(x,y,imagePass);pixelBppCustomMapper[bpp](pxData,pixelData,pxPos,maxBit)}bits.resetAfterLine()}}function dePalette(indata,outdata,width,height,palette){let pxPos=0;for(let y=0;y<height;y++)for(let x=0;x<width;x++){let color=palette[indata[pxPos]];if(!color)throw new Error("index "+indata[pxPos]+" not in palette");for(let i=0;i<4;i++)outdata[pxPos+i]=color[i];pxPos+=4}}function replaceTransparentColor(indata,outdata,width,height,transColor){let pxPos=0;for(let y=0;y<height;y++)for(let x=0;x<width;x++){let makeTrans=!1;if(1===transColor.length?transColor[0]===indata[pxPos]&&(makeTrans=!0):transColor[0]===indata[pxPos]&&transColor[1]===indata[pxPos+1]&&transColor[2]===indata[pxPos+2]&&(makeTrans=!0),makeTrans)for(let i=0;i<4;i++)outdata[pxPos+i]=0;pxPos+=4}}function scaleDepth(indata,outdata,width,height,depth){let maxInSample=Math.pow(2,depth)-1,pxPos=0;for(let y=0;y<height;y++)for(let x=0;x<width;x++){for(let i=0;i<4;i++)outdata[pxPos+i]=Math.floor(255*indata[pxPos+i]/maxInSample+.5);pxPos+=4}}bitmapper$2.dataToBitMap=function(data,bitmapInfo){let bits,pxData,width=bitmapInfo.width,height=bitmapInfo.height,depth=bitmapInfo.depth,bpp=bitmapInfo.bpp,interlace=bitmapInfo.interlace;8!==depth&&(bits=bitRetriever(data,depth)),pxData=depth<=8?Buffer.alloc(width*height*4):new Uint16Array(width*height*4);let images,getPxPos,maxBit=Math.pow(2,depth)-1,rawPos=0;if(interlace)images=interlaceUtils.getImagePasses(width,height),getPxPos=interlaceUtils.getInterlaceIterator(width,height);else{let nonInterlacedPxPos=0;getPxPos=function(){let returner=nonInterlacedPxPos;return nonInterlacedPxPos+=4,returner},images=[{width:width,height:height}]}for(let imageIndex=0;imageIndex<images.length;imageIndex++)8===depth?rawPos=mapImage8Bit(images[imageIndex],pxData,getPxPos,bpp,data,rawPos):mapImageCustomBit(images[imageIndex],pxData,getPxPos,bpp,bits,maxBit);if(8===depth){if(rawPos!==data.length)throw new Error("extra data found")}else bits.end();return pxData};var formatNormaliser$2=function(indata,imageData,skipRescale=!1){let depth=imageData.depth,width=imageData.width,height=imageData.height,colorType=imageData.colorType,transColor=imageData.transColor,palette=imageData.palette,outdata=indata;return 3===colorType?dePalette(indata,outdata,width,height,palette):(transColor&&replaceTransparentColor(indata,outdata,width,height,transColor),8===depth||skipRescale||(16===depth&&(outdata=Buffer.alloc(width*height*4)),scaleDepth(indata,outdata,width,height,depth))),outdata};let util$2=require$$0,zlib$3=require$$1$1,ChunkStream=chunkstreamExports,FilterAsync=filterParseAsyncExports,Parser$2=parserExports,bitmapper$1=bitmapper$2,formatNormaliser$1=formatNormaliser$2,ParserAsync=parserAsync.exports=function(options){ChunkStream.call(this),this._parser=new Parser$2(options,{read:this.read.bind(this),error:this._handleError.bind(this),metadata:this._handleMetaData.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this._handlePalette.bind(this),transColor:this._handleTransColor.bind(this),finished:this._finished.bind(this),inflateData:this._inflateData.bind(this),simpleTransparency:this._simpleTransparency.bind(this),headersFinished:this._headersFinished.bind(this)}),this._options=options,this.writable=!0,this._parser.start()};util$2.inherits(ParserAsync,ChunkStream),ParserAsync.prototype._handleError=function(err){this.emit("error",err),this.writable=!1,this.destroy(),this._inflate&&this._inflate.destroy&&this._inflate.destroy(),this._filter&&(this._filter.destroy(),this._filter.on("error",(function(){}))),this.errord=!0},ParserAsync.prototype._inflateData=function(data){if(!this._inflate)if(this._bitmapInfo.interlace)this._inflate=zlib$3.createInflate(),this._inflate.on("error",this.emit.bind(this,"error")),this._filter.on("complete",this._complete.bind(this)),this._inflate.pipe(this._filter);else{let imageSize=(1+(this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3))*this._bitmapInfo.height,chunkSize=Math.max(imageSize,zlib$3.Z_MIN_CHUNK);this._inflate=zlib$3.createInflate({chunkSize:chunkSize});let leftToInflate=imageSize,emitError=this.emit.bind(this,"error");this._inflate.on("error",(function(err){leftToInflate&&emitError(err)})),this._filter.on("complete",this._complete.bind(this));let filterWrite=this._filter.write.bind(this._filter);this._inflate.on("data",(function(chunk){leftToInflate&&(chunk.length>leftToInflate&&(chunk=chunk.slice(0,leftToInflate)),leftToInflate-=chunk.length,filterWrite(chunk))})),this._inflate.on("end",this._filter.end.bind(this._filter))}this._inflate.write(data)},ParserAsync.prototype._handleMetaData=function(metaData){this._metaData=metaData,this._bitmapInfo=Object.create(metaData),this._filter=new FilterAsync(this._bitmapInfo)},ParserAsync.prototype._handleTransColor=function(transColor){this._bitmapInfo.transColor=transColor},ParserAsync.prototype._handlePalette=function(palette){this._bitmapInfo.palette=palette},ParserAsync.prototype._simpleTransparency=function(){this._metaData.alpha=!0},ParserAsync.prototype._headersFinished=function(){this.emit("metadata",this._metaData)},ParserAsync.prototype._finished=function(){this.errord||(this._inflate?this._inflate.end():this.emit("error","No Inflate block"))},ParserAsync.prototype._complete=function(filteredData){if(this.errord)return;let normalisedBitmapData;try{let bitmapData=bitmapper$1.dataToBitMap(filteredData,this._bitmapInfo);normalisedBitmapData=formatNormaliser$1(bitmapData,this._bitmapInfo,this._options.skipRescale),bitmapData=null}catch(ex){return void this._handleError(ex)}this.emit("parsed",normalisedBitmapData)};var parserAsyncExports=parserAsync.exports,packerAsync={exports:{}},packer={exports:{}};let constants$3=constants$5;var bitpacker=function(dataIn,width,height,options){let outHasAlpha=-1!==[constants$3.COLORTYPE_COLOR_ALPHA,constants$3.COLORTYPE_ALPHA].indexOf(options.colorType);if(options.colorType===options.inputColorType){let bigEndian=function(){let buffer=new ArrayBuffer(2);return new DataView(buffer).setInt16(0,256,!0),256!==new Int16Array(buffer)[0]}();if(8===options.bitDepth||16===options.bitDepth&&bigEndian)return dataIn}let data=16!==options.bitDepth?dataIn:new Uint16Array(dataIn.buffer),maxValue=255,inBpp=constants$3.COLORTYPE_TO_BPP_MAP[options.inputColorType];4!==inBpp||options.inputHasAlpha||(inBpp=3);let outBpp=constants$3.COLORTYPE_TO_BPP_MAP[options.colorType];16===options.bitDepth&&(maxValue=65535,outBpp*=2);let outData=Buffer.alloc(width*height*outBpp),inIndex=0,outIndex=0,bgColor=options.bgColor||{};function getRGBA(){let red,green,blue,alpha=maxValue;switch(options.inputColorType){case constants$3.COLORTYPE_COLOR_ALPHA:alpha=data[inIndex+3],red=data[inIndex],green=data[inIndex+1],blue=data[inIndex+2];break;case constants$3.COLORTYPE_COLOR:red=data[inIndex],green=data[inIndex+1],blue=data[inIndex+2];break;case constants$3.COLORTYPE_ALPHA:alpha=data[inIndex+1],red=data[inIndex],green=red,blue=red;break;case constants$3.COLORTYPE_GRAYSCALE:red=data[inIndex],green=red,blue=red;break;default:throw new Error("input color type:"+options.inputColorType+" is not supported at present")}return options.inputHasAlpha&&(outHasAlpha||(alpha/=maxValue,red=Math.min(Math.max(Math.round((1-alpha)*bgColor.red+alpha*red),0),maxValue),green=Math.min(Math.max(Math.round((1-alpha)*bgColor.green+alpha*green),0),maxValue),blue=Math.min(Math.max(Math.round((1-alpha)*bgColor.blue+alpha*blue),0),maxValue))),{red:red,green:green,blue:blue,alpha:alpha}}void 0===bgColor.red&&(bgColor.red=maxValue),void 0===bgColor.green&&(bgColor.green=maxValue),void 0===bgColor.blue&&(bgColor.blue=maxValue);for(let y=0;y<height;y++)for(let x=0;x<width;x++){let rgba=getRGBA();switch(options.colorType){case constants$3.COLORTYPE_COLOR_ALPHA:case constants$3.COLORTYPE_COLOR:8===options.bitDepth?(outData[outIndex]=rgba.red,outData[outIndex+1]=rgba.green,outData[outIndex+2]=rgba.blue,outHasAlpha&&(outData[outIndex+3]=rgba.alpha)):(outData.writeUInt16BE(rgba.red,outIndex),outData.writeUInt16BE(rgba.green,outIndex+2),outData.writeUInt16BE(rgba.blue,outIndex+4),outHasAlpha&&outData.writeUInt16BE(rgba.alpha,outIndex+6));break;case constants$3.COLORTYPE_ALPHA:case constants$3.COLORTYPE_GRAYSCALE:{let grayscale=(rgba.red+rgba.green+rgba.blue)/3;8===options.bitDepth?(outData[outIndex]=grayscale,outHasAlpha&&(outData[outIndex+1]=rgba.alpha)):(outData.writeUInt16BE(grayscale,outIndex),outHasAlpha&&outData.writeUInt16BE(rgba.alpha,outIndex+2));break}default:throw new Error("unrecognised color Type "+options.colorType)}inIndex+=inBpp,outIndex+=outBpp}return outData};let paethPredictor=paethPredictor$2;function filterNone(pxData,pxPos,byteWidth,rawData,rawPos){for(let x=0;x<byteWidth;x++)rawData[rawPos+x]=pxData[pxPos+x]}function filterSumNone(pxData,pxPos,byteWidth){let sum=0,length=pxPos+byteWidth;for(let i=pxPos;i<length;i++)sum+=Math.abs(pxData[i]);return sum}function filterSub(pxData,pxPos,byteWidth,rawData,rawPos,bpp){for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,val=pxData[pxPos+x]-left;rawData[rawPos+x]=val}}function filterSumSub(pxData,pxPos,byteWidth,bpp){let sum=0;for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,val=pxData[pxPos+x]-left;sum+=Math.abs(val)}return sum}function filterUp(pxData,pxPos,byteWidth,rawData,rawPos){for(let x=0;x<byteWidth;x++){let up=pxPos>0?pxData[pxPos+x-byteWidth]:0,val=pxData[pxPos+x]-up;rawData[rawPos+x]=val}}function filterSumUp(pxData,pxPos,byteWidth){let sum=0,length=pxPos+byteWidth;for(let x=pxPos;x<length;x++){let up=pxPos>0?pxData[x-byteWidth]:0,val=pxData[x]-up;sum+=Math.abs(val)}return sum}function filterAvg(pxData,pxPos,byteWidth,rawData,rawPos,bpp){for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,up=pxPos>0?pxData[pxPos+x-byteWidth]:0,val=pxData[pxPos+x]-(left+up>>1);rawData[rawPos+x]=val}}function filterSumAvg(pxData,pxPos,byteWidth,bpp){let sum=0;for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,up=pxPos>0?pxData[pxPos+x-byteWidth]:0,val=pxData[pxPos+x]-(left+up>>1);sum+=Math.abs(val)}return sum}function filterPaeth(pxData,pxPos,byteWidth,rawData,rawPos,bpp){for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,up=pxPos>0?pxData[pxPos+x-byteWidth]:0,upleft=pxPos>0&&x>=bpp?pxData[pxPos+x-(byteWidth+bpp)]:0,val=pxData[pxPos+x]-paethPredictor(left,up,upleft);rawData[rawPos+x]=val}}function filterSumPaeth(pxData,pxPos,byteWidth,bpp){let sum=0;for(let x=0;x<byteWidth;x++){let left=x>=bpp?pxData[pxPos+x-bpp]:0,up=pxPos>0?pxData[pxPos+x-byteWidth]:0,upleft=pxPos>0&&x>=bpp?pxData[pxPos+x-(byteWidth+bpp)]:0,val=pxData[pxPos+x]-paethPredictor(left,up,upleft);sum+=Math.abs(val)}return sum}let filters={0:filterNone,1:filterSub,2:filterUp,3:filterAvg,4:filterPaeth},filterSums={0:filterSumNone,1:filterSumSub,2:filterSumUp,3:filterSumAvg,4:filterSumPaeth};var filterPack=function(pxData,width,height,options,bpp){let filterTypes;if("filterType"in options&&-1!==options.filterType){if("number"!=typeof options.filterType)throw new Error("unrecognised filter types");filterTypes=[options.filterType]}else filterTypes=[0,1,2,3,4];16===options.bitDepth&&(bpp*=2);let byteWidth=width*bpp,rawPos=0,pxPos=0,rawData=Buffer.alloc((byteWidth+1)*height),sel=filterTypes[0];for(let y=0;y<height;y++){if(filterTypes.length>1){let min=1/0;for(let i=0;i<filterTypes.length;i++){let sum=filterSums[filterTypes[i]](pxData,pxPos,byteWidth,bpp);sum<min&&(sel=filterTypes[i],min=sum)}}rawData[rawPos]=sel,rawPos++,filters[sel](pxData,pxPos,byteWidth,rawData,rawPos,bpp),rawPos+=byteWidth,pxPos+=byteWidth}return rawData};let constants$2=constants$5,CrcStream=crcExports,bitPacker=bitpacker,filter=filterPack,zlib$2=require$$1$1,Packer$3=packer.exports=function(options){if(this._options=options,options.deflateChunkSize=options.deflateChunkSize||32768,options.deflateLevel=null!=options.deflateLevel?options.deflateLevel:9,options.deflateStrategy=null!=options.deflateStrategy?options.deflateStrategy:3,options.inputHasAlpha=null==options.inputHasAlpha||options.inputHasAlpha,options.deflateFactory=options.deflateFactory||zlib$2.createDeflate,options.bitDepth=options.bitDepth||8,options.colorType="number"==typeof options.colorType?options.colorType:constants$2.COLORTYPE_COLOR_ALPHA,options.inputColorType="number"==typeof options.inputColorType?options.inputColorType:constants$2.COLORTYPE_COLOR_ALPHA,-1===[constants$2.COLORTYPE_GRAYSCALE,constants$2.COLORTYPE_COLOR,constants$2.COLORTYPE_COLOR_ALPHA,constants$2.COLORTYPE_ALPHA].indexOf(options.colorType))throw new Error("option color type:"+options.colorType+" is not supported at present");if(-1===[constants$2.COLORTYPE_GRAYSCALE,constants$2.COLORTYPE_COLOR,constants$2.COLORTYPE_COLOR_ALPHA,constants$2.COLORTYPE_ALPHA].indexOf(options.inputColorType))throw new Error("option input color type:"+options.inputColorType+" is not supported at present");if(8!==options.bitDepth&&16!==options.bitDepth)throw new Error("option bit depth:"+options.bitDepth+" is not supported at present")};Packer$3.prototype.getDeflateOptions=function(){return{chunkSize:this._options.deflateChunkSize,level:this._options.deflateLevel,strategy:this._options.deflateStrategy}},Packer$3.prototype.createDeflate=function(){return this._options.deflateFactory(this.getDeflateOptions())},Packer$3.prototype.filterData=function(data,width,height){let packedData=bitPacker(data,width,height,this._options),bpp=constants$2.COLORTYPE_TO_BPP_MAP[this._options.colorType];return filter(packedData,width,height,this._options,bpp)},Packer$3.prototype._packChunk=function(type,data){let len=data?data.length:0,buf=Buffer.alloc(len+12);return buf.writeUInt32BE(len,0),buf.writeUInt32BE(type,4),data&&data.copy(buf,8),buf.writeInt32BE(CrcStream.crc32(buf.slice(4,buf.length-4)),buf.length-4),buf},Packer$3.prototype.packGAMA=function(gamma){let buf=Buffer.alloc(4);return buf.writeUInt32BE(Math.floor(gamma*constants$2.GAMMA_DIVISION),0),this._packChunk(constants$2.TYPE_gAMA,buf)},Packer$3.prototype.packIHDR=function(width,height){let buf=Buffer.alloc(13);return buf.writeUInt32BE(width,0),buf.writeUInt32BE(height,4),buf[8]=this._options.bitDepth,buf[9]=this._options.colorType,buf[10]=0,buf[11]=0,buf[12]=0,this._packChunk(constants$2.TYPE_IHDR,buf)},Packer$3.prototype.packIDAT=function(data){return this._packChunk(constants$2.TYPE_IDAT,data)},Packer$3.prototype.packIEND=function(){return this._packChunk(constants$2.TYPE_IEND,null)};var packerExports=packer.exports;let util$1=require$$0,Stream$1=require$$1,constants$1=constants$5,Packer$2=packerExports,PackerAsync=packerAsync.exports=function(opt){Stream$1.call(this);let options=opt||{};this._packer=new Packer$2(options),this._deflate=this._packer.createDeflate(),this.readable=!0};util$1.inherits(PackerAsync,Stream$1),PackerAsync.prototype.pack=function(data,width,height,gamma){this.emit("data",Buffer.from(constants$1.PNG_SIGNATURE)),this.emit("data",this._packer.packIHDR(width,height)),gamma&&this.emit("data",this._packer.packGAMA(gamma));let filteredData=this._packer.filterData(data,width,height);this._deflate.on("error",this.emit.bind(this,"error")),this._deflate.on("data",function(compressedData){this.emit("data",this._packer.packIDAT(compressedData))}.bind(this)),this._deflate.on("end",function(){this.emit("data",this._packer.packIEND()),this.emit("end")}.bind(this)),this._deflate.end(filteredData)};var packerAsyncExports=packerAsync.exports,pngSync={},syncInflate={exports:{}};!function(module,exports){let assert=require$$0$1.ok,zlib=require$$1$1,util=require$$0,kMaxLength=require$$3.kMaxLength;function Inflate(opts){if(!(this instanceof Inflate))return new Inflate(opts);opts&&opts.chunkSize<zlib.Z_MIN_CHUNK&&(opts.chunkSize=zlib.Z_MIN_CHUNK),zlib.Inflate.call(this,opts),this._offset=void 0===this._offset?this._outOffset:this._offset,this._buffer=this._buffer||this._outBuffer,opts&&null!=opts.maxLength&&(this._maxLength=opts.maxLength)}function _close(engine,callback){engine._handle&&(engine._handle.close(),engine._handle=null)}function inflateSync(buffer,opts){return function(engine,buffer){if("string"==typeof buffer&&(buffer=Buffer.from(buffer)),!(buffer instanceof Buffer))throw new TypeError("Not a string or buffer");let flushFlag=engine._finishFlushFlag;return null==flushFlag&&(flushFlag=zlib.Z_FINISH),engine._processChunk(buffer,flushFlag)}(new Inflate(opts),buffer)}Inflate.prototype._processChunk=function(chunk,flushFlag,asyncCb){if("function"==typeof asyncCb)return zlib.Inflate._processChunk.call(this,chunk,flushFlag,asyncCb);let error,res,self=this,availInBefore=chunk&&chunk.length,availOutBefore=this._chunkSize-this._offset,leftToInflate=this._maxLength,inOff=0,buffers=[],nread=0;function handleChunk(availInAfter,availOutAfter){if(self._hadError)return;let have=availOutBefore-availOutAfter;if(assert(have>=0,"have should not go down"),have>0){let out=self._buffer.slice(self._offset,self._offset+have);if(self._offset+=have,out.length>leftToInflate&&(out=out.slice(0,leftToInflate)),buffers.push(out),nread+=out.length,leftToInflate-=out.length,0===leftToInflate)return!1}return(0===availOutAfter||self._offset>=self._chunkSize)&&(availOutBefore=self._chunkSize,self._offset=0,self._buffer=Buffer.allocUnsafe(self._chunkSize)),0===availOutAfter&&(inOff+=availInBefore-availInAfter,availInBefore=availInAfter,!0)}this.on("error",(function(err){error=err})),assert(this._handle,"zlib binding closed");do{res=this._handle.writeSync(flushFlag,chunk,inOff,availInBefore,this._buffer,this._offset,availOutBefore),res=res||this._writeState}while(!this._hadError&&handleChunk(res[0],res[1]));if(this._hadError)throw error;if(nread>=kMaxLength)throw _close(this),new RangeError("Cannot create final Buffer. It would be larger than 0x"+kMaxLength.toString(16)+" bytes");let buf=Buffer.concat(buffers,nread);return _close(this),buf},util.inherits(Inflate,zlib.Inflate),module.exports=exports=inflateSync,exports.Inflate=Inflate,exports.createInflate=function(opts){return new Inflate(opts)},exports.inflateSync=inflateSync}(syncInflate,syncInflate.exports);var syncInflateExports=syncInflate.exports,syncReader={exports:{}};let SyncReader$2=syncReader.exports=function(buffer){this._buffer=buffer,this._reads=[]};SyncReader$2.prototype.read=function(length,callback){this._reads.push({length:Math.abs(length),allowLess:length<0,func:callback})},SyncReader$2.prototype.process=function(){for(;this._reads.length>0&&this._buffer.length;){let read=this._reads[0];if(!this._buffer.length||!(this._buffer.length>=read.length||read.allowLess))break;{this._reads.shift();let buf=this._buffer;this._buffer=buf.slice(read.length),read.func.call(this,buf.slice(0,read.length))}}if(this._reads.length>0)throw new Error("There are some read requests waitng on finished stream");if(this._buffer.length>0)throw new Error("unrecognised content at end of stream")};var syncReaderExports=syncReader.exports,filterParseSync={};let SyncReader$1=syncReaderExports,Filter=filterParseExports;filterParseSync.process=function(inBuffer,bitmapInfo){let outBuffers=[],reader=new SyncReader$1(inBuffer);return new Filter(bitmapInfo,{read:reader.read.bind(reader),write:function(bufferPart){outBuffers.push(bufferPart)},complete:function(){}}).start(),reader.process(),Buffer.concat(outBuffers)};let hasSyncZlib$1=!0,zlib$1=require$$1$1,inflateSync=syncInflateExports;zlib$1.deflateSync||(hasSyncZlib$1=!1);let SyncReader=syncReaderExports,FilterSync=filterParseSync,Parser$1=parserExports,bitmapper=bitmapper$2,formatNormaliser=formatNormaliser$2;var parserSync=function(buffer,options){if(!hasSyncZlib$1)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");let err,metaData,gamma;let inflateDataList=[];let reader=new SyncReader(buffer),parser=new Parser$1(options,{read:reader.read.bind(reader),error:function(_err_){err=_err_},metadata:function(_metaData_){metaData=_metaData_},gamma:function(_gamma_){gamma=_gamma_},palette:function(palette){metaData.palette=palette},transColor:function(transColor){metaData.transColor=transColor},inflateData:function(inflatedData){inflateDataList.push(inflatedData)},simpleTransparency:function(){metaData.alpha=!0}});if(parser.start(),reader.process(),err)throw err;let inflatedData,inflateData=Buffer.concat(inflateDataList);if(inflateDataList.length=0,metaData.interlace)inflatedData=zlib$1.inflateSync(inflateData);else{let imageSize=(1+(metaData.width*metaData.bpp*metaData.depth+7>>3))*metaData.height;inflatedData=inflateSync(inflateData,{chunkSize:imageSize,maxLength:imageSize})}if(inflateData=null,!inflatedData||!inflatedData.length)throw new Error("bad png - invalid inflate data response");let unfilteredData=FilterSync.process(inflatedData,metaData);inflateData=null;let bitmapData=bitmapper.dataToBitMap(unfilteredData,metaData);unfilteredData=null;let normalisedBitmapData=formatNormaliser(bitmapData,metaData,options.skipRescale);return metaData.data=normalisedBitmapData,metaData.gamma=gamma||0,metaData};let hasSyncZlib=!0,zlib=require$$1$1;zlib.deflateSync||(hasSyncZlib=!1);let constants=constants$5,Packer$1=packerExports;var packerSync=function(metaData,opt){if(!hasSyncZlib)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");let packer=new Packer$1(opt||{}),chunks=[];chunks.push(Buffer.from(constants.PNG_SIGNATURE)),chunks.push(packer.packIHDR(metaData.width,metaData.height)),metaData.gamma&&chunks.push(packer.packGAMA(metaData.gamma));let filteredData=packer.filterData(metaData.data,metaData.width,metaData.height),compressedData=zlib.deflateSync(filteredData,packer.getDeflateOptions());if(filteredData=null,!compressedData||!compressedData.length)throw new Error("bad png - invalid compressed data response");return chunks.push(packer.packIDAT(compressedData)),chunks.push(packer.packIEND()),Buffer.concat(chunks)};let parse=parserSync,pack=packerSync;var PNG_1;pngSync.read=function(buffer,options){return parse(buffer,options||{})},pngSync.write=function(png,options){return pack(png,options)};let util=require$$0,Stream=require$$1,Parser=parserAsyncExports,Packer=packerAsyncExports,PNGSync=pngSync,PNG=PNG_1=function(options){Stream.call(this),options=options||{},this.width=0|options.width,this.height=0|options.height,this.data=this.width>0&&this.height>0?Buffer.alloc(4*this.width*this.height):null,options.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this._parser=new Parser(options),this._parser.on("error",this.emit.bind(this,"error")),this._parser.on("close",this._handleClose.bind(this)),this._parser.on("metadata",this._metadata.bind(this)),this._parser.on("gamma",this._gamma.bind(this)),this._parser.on("parsed",function(data){this.data=data,this.emit("parsed",data)}.bind(this)),this._packer=new Packer(options),this._packer.on("data",this.emit.bind(this,"data")),this._packer.on("end",this.emit.bind(this,"end")),this._parser.on("close",this._handleClose.bind(this)),this._packer.on("error",this.emit.bind(this,"error"))};var PNGFilterType,PNGColorType,ResizeStrategy;function png(){return{mime:"image/png",hasAlpha:!0,encode:(bitmap,{deflateLevel:deflateLevel=9,deflateStrategy:deflateStrategy=3,filterType:filterType=PNGFilterType.AUTO,colorType:colorType,inputHasAlpha:inputHasAlpha=!0,...options}={})=>{const png=new PNG_1({width:bitmap.width,height:bitmap.height});return png.data=bitmap.data,PNG_1.sync.write(png,{...options,deflateLevel:deflateLevel,deflateStrategy:deflateStrategy,filterType:filterType,colorType:void 0!==colorType?colorType:inputHasAlpha?PNGColorType.COLOR_ALPHA:PNGColorType.COLOR,inputHasAlpha:inputHasAlpha})},decode:(data,options)=>{const result=PNG_1.sync.read(data,options);return{data:result.data,width:result.width,height:result.height}}}}function Resize(widthOriginal,heightOriginal,targetWidth,targetHeight,blendAlpha,interpolationPass,resizeCallback){this.widthOriginal=Math.abs(Math.floor(widthOriginal)||0),this.heightOriginal=Math.abs(Math.floor(heightOriginal)||0),this.targetWidth=Math.abs(Math.floor(targetWidth)||0),this.targetHeight=Math.abs(Math.floor(targetHeight)||0),this.colorChannels=blendAlpha?4:3,this.interpolationPass=Boolean(interpolationPass),this.resizeCallback="function"==typeof resizeCallback?resizeCallback:function(){},this.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels,this.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels,this.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels,this.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal,this.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight,this.initialize()}util.inherits(PNG,Stream),PNG.sync=PNGSync,PNG.prototype.pack=function(){return this.data&&this.data.length?(process.nextTick(function(){this._packer.pack(this.data,this.width,this.height,this.gamma)}.bind(this)),this):(this.emit("error","No data provided"),this)},PNG.prototype.parse=function(data,callback){if(callback){let onParsed,onError;onParsed=function(parsedData){this.removeListener("error",onError),this.data=parsedData,callback(null,this)}.bind(this),onError=function(err){this.removeListener("parsed",onParsed),callback(err,null)}.bind(this),this.once("parsed",onParsed),this.once("error",onError)}return this.end(data),this},PNG.prototype.write=function(data){return this._parser.write(data),!0},PNG.prototype.end=function(data){this._parser.end(data)},PNG.prototype._metadata=function(metadata){this.width=metadata.width,this.height=metadata.height,this.emit("metadata",metadata)},PNG.prototype._gamma=function(gamma){this.gamma=gamma},PNG.prototype._handleClose=function(){this._parser.writable||this._packer.readable||this.emit("close")},PNG.bitblt=function(src,dst,srcX,srcY,width,height,deltaX,deltaY){if(srcY|=0,width|=0,height|=0,deltaX|=0,deltaY|=0,(srcX|=0)>src.width||srcY>src.height||srcX+width>src.width||srcY+height>src.height)throw new Error("bitblt reading outside image");if(deltaX>dst.width||deltaY>dst.height||deltaX+width>dst.width||deltaY+height>dst.height)throw new Error("bitblt writing outside image");for(let y=0;y<height;y++)src.data.copy(dst.data,(deltaY+y)*dst.width+deltaX<<2,(srcY+y)*src.width+srcX<<2,(srcY+y)*src.width+srcX+width<<2)},PNG.prototype.bitblt=function(dst,srcX,srcY,width,height,deltaX,deltaY){return PNG.bitblt(this,dst,srcX,srcY,width,height,deltaX,deltaY),this},PNG.adjustGamma=function(src){if(src.gamma){for(let y=0;y<src.height;y++)for(let x=0;x<src.width;x++){let idx=src.width*y+x<<2;for(let i=0;i<3;i++){let sample=src.data[idx+i]/255;sample=Math.pow(sample,1/2.2/src.gamma),src.data[idx+i]=Math.round(255*sample)}}src.gamma=0}},PNG.prototype.adjustGamma=function(){PNG.adjustGamma(this)},function(PNGFilterType){PNGFilterType[PNGFilterType.AUTO=-1]="AUTO",PNGFilterType[PNGFilterType.NONE=0]="NONE",PNGFilterType[PNGFilterType.SUB=1]="SUB",PNGFilterType[PNGFilterType.UP=2]="UP",PNGFilterType[PNGFilterType.AVERAGE=3]="AVERAGE",PNGFilterType[PNGFilterType.PATH=4]="PATH"}(PNGFilterType||(PNGFilterType={})),function(PNGColorType){PNGColorType[PNGColorType.GRAYSCALE=0]="GRAYSCALE",PNGColorType[PNGColorType.COLOR=2]="COLOR",PNGColorType[PNGColorType.GRAYSCALE_ALPHA=4]="GRAYSCALE_ALPHA",PNGColorType[PNGColorType.COLOR_ALPHA=6]="COLOR_ALPHA"}(PNGColorType||(PNGColorType={})),function(ResizeStrategy){ResizeStrategy.NEAREST_NEIGHBOR="nearestNeighbor",ResizeStrategy.BILINEAR="bilinearInterpolation",ResizeStrategy.BICUBIC="bicubicInterpolation",ResizeStrategy.HERMITE="hermiteInterpolation",ResizeStrategy.BEZIER="bezierInterpolation"}(ResizeStrategy||(ResizeStrategy={})),Resize.prototype.initialize=function(){if(!(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0))throw console.log(this),new Error("Invalid settings specified for the resizer.");this.configurePasses()},Resize.prototype.configurePasses=function(){this.widthOriginal===this.targetWidth?this.resizeWidth=this.bypassResizer:(this.ratioWeightWidthPass=this.widthOriginal/this.targetWidth,this.ratioWeightWidthPass<1&&this.interpolationPass?(this.initializeFirstPassBuffers(!0),this.resizeWidth=4===this.colorChannels?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB):(this.initializeFirstPassBuffers(!1),this.resizeWidth=4===this.colorChannels?this.resizeWidthRGBA:this.resizeWidthRGB)),this.heightOriginal===this.targetHeight?this.resizeHeight=this.bypassResizer:(this.ratioWeightHeightPass=this.heightOriginal/this.targetHeight,this.ratioWeightHeightPass<1&&this.interpolationPass?(this.initializeSecondPassBuffers(!0),this.resizeHeight=this.resizeHeightInterpolated):(this.initializeSecondPassBuffers(!1),this.resizeHeight=4===this.colorChannels?this.resizeHeightRGBA:this.resizeHeightRGB))},Resize.prototype._resizeWidthInterpolatedRGBChannels=function(buffer,fourthChannel){const channelsNum=fourthChannel?4:3,ratioWeight=this.ratioWeightWidthPass,outputBuffer=this.widthBuffer;let targetPosition,interpolationWidthSourceReadStop,weight=0,finalOffset=0,pixelOffset=0,firstWeight=0,secondWeight=0;for(targetPosition=0;weight<1/3;targetPosition+=channelsNum,weight+=ratioWeight)for(finalOffset=targetPosition,pixelOffset=0;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels)outputBuffer[finalOffset]=buffer[pixelOffset],outputBuffer[finalOffset+1]=buffer[pixelOffset+1],outputBuffer[finalOffset+2]=buffer[pixelOffset+2],fourthChannel&&(outputBuffer[finalOffset+3]=buffer[pixelOffset+3]);for(weight-=1/3,interpolationWidthSourceReadStop=this.widthOriginal-1;weight<interpolationWidthSourceReadStop;targetPosition+=channelsNum,weight+=ratioWeight)for(secondWeight=weight%1,firstWeight=1-secondWeight,finalOffset=targetPosition,pixelOffset=Math.floor(weight)*channelsNum;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels)outputBuffer[finalOffset+0]=buffer[pixelOffset+0]*firstWeight+buffer[pixelOffset+channelsNum+0]*secondWeight,outputBuffer[finalOffset+1]=buffer[pixelOffset+1]*firstWeight+buffer[pixelOffset+channelsNum+1]*secondWeight,outputBuffer[finalOffset+2]=buffer[pixelOffset+2]*firstWeight+buffer[pixelOffset+channelsNum+2]*secondWeight,fourthChannel&&(outputBuffer[finalOffset+3]=buffer[pixelOffset+3]*firstWeight+buffer[pixelOffset+channelsNum+3]*secondWeight);for(interpolationWidthSourceReadStop=this.originalWidthMultipliedByChannels-channelsNum;targetPosition<this.targetWidthMultipliedByChannels;targetPosition+=channelsNum)for(finalOffset=targetPosition,pixelOffset=interpolationWidthSourceReadStop;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels)outputBuffer[finalOffset]=buffer[pixelOffset],outputBuffer[finalOffset+1]=buffer[pixelOffset+1],outputBuffer[finalOffset+2]=buffer[pixelOffset+2],fourthChannel&&(outputBuffer[finalOffset+3]=buffer[pixelOffset+3]);return outputBuffer},Resize.prototype._resizeWidthRGBChannels=function(buffer,fourthChannel){const channelsNum=fourthChannel?4:3,ratioWeight=this.ratioWeightWidthPass,ratioWeightDivisor=1/ratioWeight,nextLineOffsetOriginalWidth=this.originalWidthMultipliedByChannels-channelsNum+1,nextLineOffsetTargetWidth=this.targetWidthMultipliedByChannels-channelsNum+1,output=this.outputWidthWorkBench,outputBuffer=this.widthBuffer,trustworthyColorsCount=this.outputWidthWorkBenchOpaquePixelsCount;let weight=0,amountToNext=0,actualPosition=0,currentPosition=0,line=0,pixelOffset=0,outputOffset=0,multiplier=1,r=0,g=0,b=0,a=0;do{for(line=0;line<this.originalHeightMultipliedByChannels;)output[line++]=0,output[line++]=0,output[line++]=0,fourthChannel&&(output[line++]=0,trustworthyColorsCount[line/channelsNum-1]=0);weight=ratioWeight;do{for(amountToNext=1+actualPosition-currentPosition,multiplier=Math.min(weight,amountToNext),line=0,pixelOffset=actualPosition;line<this.originalHeightMultipliedByChannels;pixelOffset+=nextLineOffsetOriginalWidth)r=buffer[pixelOffset],g=buffer[++pixelOffset],b=buffer[++pixelOffset],a=fourthChannel?buffer[++pixelOffset]:255,output[line++]+=(a?r:0)*multiplier,output[line++]+=(a?g:0)*multiplier,output[line++]+=(a?b:0)*multiplier,fourthChannel&&(output[line++]+=a*multiplier,trustworthyColorsCount[line/channelsNum-1]+=a?multiplier:0);if(!(weight>=amountToNext)){currentPosition+=weight;break}actualPosition+=channelsNum,currentPosition=actualPosition,weight-=amountToNext}while(weight>0&&actualPosition<this.originalWidthMultipliedByChannels);for(line=0,pixelOffset=outputOffset;line<this.originalHeightMultipliedByChannels;pixelOffset+=nextLineOffsetTargetWidth)weight=fourthChannel?trustworthyColorsCount[line/channelsNum]:1,multiplier=fourthChannel?weight?1/weight:0:ratioWeightDivisor,outputBuffer[pixelOffset]=output[line++]*multiplier,outputBuffer[++pixelOffset]=output[line++]*multiplier,outputBuffer[++pixelOffset]=output[line++]*multiplier,fourthChannel&&(outputBuffer[++pixelOffset]=output[line++]*ratioWeightDivisor);outputOffset+=channelsNum}while(outputOffset<this.targetWidthMultipliedByChannels);return outputBuffer},Resize.prototype._resizeHeightRGBChannels=function(buffer,fourthChannel){const ratioWeight=this.ratioWeightHeightPass,ratioWeightDivisor=1/ratioWeight,output=this.outputHeightWorkBench,outputBuffer=this.heightBuffer,trustworthyColorsCount=this.outputHeightWorkBenchOpaquePixelsCount;let weight=0,amountToNext=0,actualPosition=0,currentPosition=0,pixelOffset=0,outputOffset=0,caret=0,multiplier=1,r=0,g=0,b=0,a=0;do{for(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;)output[pixelOffset++]=0,output[pixelOffset++]=0,output[pixelOffset++]=0,fourthChannel&&(output[pixelOffset++]=0,trustworthyColorsCount[pixelOffset/4-1]=0);weight=ratioWeight;do{for(amountToNext=1+actualPosition-currentPosition,multiplier=Math.min(weight,amountToNext),caret=actualPosition,pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;)r=buffer[caret++],g=buffer[caret++],b=buffer[caret++],a=fourthChannel?buffer[caret++]:255,output[pixelOffset++]+=(a?r:0)*multiplier,output[pixelOffset++]+=(a?g:0)*multiplier,output[pixelOffset++]+=(a?b:0)*multiplier,fourthChannel&&(output[pixelOffset++]+=a*multiplier,trustworthyColorsCount[pixelOffset/4-1]+=a?multiplier:0);if(!(weight>=amountToNext)){currentPosition+=weight;break}actualPosition=caret,currentPosition=actualPosition,weight-=amountToNext}while(weight>0&&actualPosition<this.widthPassResultSize);for(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;)weight=fourthChannel?trustworthyColorsCount[pixelOffset/4]:1,multiplier=fourthChannel?weight?1/weight:0:ratioWeightDivisor,outputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier),outputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier),outputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier),fourthChannel&&(outputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*ratioWeightDivisor))}while(outputOffset<this.finalResultSize);return outputBuffer},Resize.prototype.resizeWidthInterpolatedRGB=function(buffer){return this._resizeWidthInterpolatedRGBChannels(buffer,!1)},Resize.prototype.resizeWidthInterpolatedRGBA=function(buffer){return this._resizeWidthInterpolatedRGBChannels(buffer,!0)},Resize.prototype.resizeWidthRGB=function(buffer){return this._resizeWidthRGBChannels(buffer,!1)},Resize.prototype.resizeWidthRGBA=function(buffer){return this._resizeWidthRGBChannels(buffer,!0)},Resize.prototype.resizeHeightInterpolated=function(buffer){const ratioWeight=this.ratioWeightHeightPass,outputBuffer=this.heightBuffer;let interpolationHeightSourceReadStop,weight=0,finalOffset=0,pixelOffset=0,pixelOffsetAccumulated=0,pixelOffsetAccumulated2=0,firstWeight=0,secondWeight=0;for(;weight<1/3;weight+=ratioWeight)for(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;)outputBuffer[finalOffset++]=Math.round(buffer[pixelOffset++]);for(weight-=1/3,interpolationHeightSourceReadStop=this.heightOriginal-1;weight<interpolationHeightSourceReadStop;weight+=ratioWeight)for(secondWeight=weight%1,firstWeight=1-secondWeight,pixelOffsetAccumulated=Math.floor(weight)*this.targetWidthMultipliedByChannels,pixelOffsetAccumulated2=pixelOffsetAccumulated+this.targetWidthMultipliedByChannels,pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;++pixelOffset)outputBuffer[finalOffset++]=Math.round(buffer[pixelOffsetAccumulated++]*firstWeight+buffer[pixelOffsetAccumulated2++]*secondWeight);for(;finalOffset<this.finalResultSize;)for(pixelOffset=0,pixelOffsetAccumulated=interpolationHeightSourceReadStop*this.targetWidthMultipliedByChannels;pixelOffset<this.targetWidthMultipliedByChannels;++pixelOffset)outputBuffer[finalOffset++]=Math.round(buffer[pixelOffsetAccumulated++]);return outputBuffer},Resize.prototype.resizeHeightRGB=function(buffer){return this._resizeHeightRGBChannels(buffer,!1)},Resize.prototype.resizeHeightRGBA=function(buffer){return this._resizeHeightRGBChannels(buffer,!0)},Resize.prototype.resize=function(buffer){this.resizeCallback(this.resizeHeight(this.resizeWidth(buffer)))},Resize.prototype.bypassResizer=function(buffer){return buffer},Resize.prototype.initializeFirstPassBuffers=function(BILINEARAlgo){this.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize),BILINEARAlgo||(this.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels),this.colorChannels>3&&(this.outputWidthWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.heightOriginal)))},Resize.prototype.initializeSecondPassBuffers=function(BILINEARAlgo){this.heightBuffer=this.generateUint8Buffer(this.finalResultSize),BILINEARAlgo||(this.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels),this.colorChannels>3&&(this.outputHeightWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.targetWidth)))},Resize.prototype.generateFloatBuffer=function(bufferLength){try{return new Float32Array(bufferLength)}catch(error){return console.error(error),[]}},Resize.prototype.generateFloat64Buffer=function(bufferLength){try{return new Float64Array(bufferLength)}catch(error){return console.error(error),[]}},Resize.prototype.generateUint8Buffer=function(bufferLength){try{return new Uint8Array(bufferLength)}catch(error){return console.error(error),[]}};const operations={nearestNeighbor(src,dst){const wSrc=src.width,hSrc=src.height,wDst=dst.width,hDst=dst.height,bufSrc=src.data,bufDst=dst.data;for(let i=0;i<hDst;i++)for(let j=0;j<wDst;j++){let posDst=4*(i*wDst+j);let posSrc=4*(Math.floor(i*hSrc/hDst)*wSrc+Math.floor(j*wSrc/wDst));bufDst[posDst++]=bufSrc[posSrc++],bufDst[posDst++]=bufSrc[posSrc++],bufDst[posDst++]=bufSrc[posSrc++],bufDst[posDst++]=bufSrc[posSrc++]}},bilinearInterpolation(src,dst){const wSrc=src.width,hSrc=src.height,wDst=dst.width,hDst=dst.height,bufSrc=src.data,bufDst=dst.data,interpolate=function(k,kMin,vMin,kMax,vMax){return kMin===kMax?vMin:Math.round((k-kMin)*vMax+(kMax-k)*vMin)},assign=function(pos,offset,x,xMin,xMax,y,yMin,yMax){let posMin=4*(yMin*wSrc+xMin)+offset,posMax=4*(yMin*wSrc+xMax)+offset;const vMin=interpolate(x,xMin,bufSrc[posMin],xMax,bufSrc[posMax]);if(yMax===yMin)bufDst[pos+offset]=vMin;else{posMin=4*(yMax*wSrc+xMin)+offset,posMax=4*(yMax*wSrc+xMax)+offset;const vMax=interpolate(x,xMin,bufSrc[posMin],xMax,bufSrc[posMax]);bufDst[pos+offset]=interpolate(y,yMin,vMin,yMax,vMax)}};for(let i=0;i<hDst;i++)for(let j=0;j<wDst;j++){const posDst=4*(i*wDst+j),x=j*wSrc/wDst,xMin=Math.floor(x),xMax=Math.min(Math.ceil(x),wSrc-1),y=i*hSrc/hDst,yMin=Math.floor(y),yMax=Math.min(Math.ceil(y),hSrc-1);assign(posDst,0,x,xMin,xMax,y,yMin,yMax),assign(posDst,1,x,xMin,xMax,y,yMin,yMax),assign(posDst,2,x,xMin,xMax,y,yMin,yMax),assign(posDst,3,x,xMin,xMax,y,yMin,yMax)}},_interpolate2D(src,dst,options,interpolate){const bufSrc=src.data,bufDst=dst.data,wSrc=src.width,hSrc=src.height,wDst=dst.width,hDst=dst.height,wM=Math.max(1,Math.floor(wSrc/wDst)),wDst2=wDst*wM,hM=Math.max(1,Math.floor(hSrc/hDst)),hDst2=hDst*hM,buf1=Buffer.alloc(wDst2*hSrc*4);for(let i=0;i<hSrc;i++)for(let j=0;j<wDst2;j++){const x=j*(wSrc-1)/wDst2,xPos=Math.floor(x),t=x-xPos,srcPos=4*(i*wSrc+xPos),buf1Pos=4*(i*wDst2+j);for(let k=0;k<4;k++){const kPos=srcPos+k,x0=xPos>0?bufSrc[kPos-4]:2*bufSrc[kPos]-bufSrc[kPos+4],x1=bufSrc[kPos],x2=bufSrc[kPos+4],x3=xPos<wSrc-2?bufSrc[kPos+8]:2*bufSrc[kPos+4]-bufSrc[kPos];buf1[buf1Pos+k]=interpolate(x0,x1,x2,x3,t)}}const buf2=Buffer.alloc(wDst2*hDst2*4);for(let i=0;i<hDst2;i++)for(let j=0;j<wDst2;j++){const y=i*(hSrc-1)/hDst2,yPos=Math.floor(y),t=y-yPos,buf1Pos=4*(yPos*wDst2+j),buf2Pos=4*(i*wDst2+j);for(let k=0;k<4;k++){const kPos=buf1Pos+k,y0=yPos>0?buf1[kPos-4*wDst2]:2*buf1[kPos]-buf1[kPos+4*wDst2],y1=buf1[kPos],y2=buf1[kPos+4*wDst2],y3=yPos<hSrc-2?buf1[kPos+8*wDst2]:2*buf1[kPos+4*wDst2]-buf1[kPos];buf2[buf2Pos+k]=interpolate(y0,y1,y2,y3,t)}}const m=wM*hM;if(m>1)for(let i=0;i<hDst;i++)for(let j=0;j<wDst;j++){let r=0,g=0,b=0,a=0,realColors=0;for(let y=0;y<hM;y++){const yPos=i*hM+y;for(let x=0;x<wM;x++){const xyPos=4*(yPos*wDst2+(j*wM+x)),pixelAlpha=buf2[xyPos+3];pixelAlpha&&(r+=buf2[xyPos],g+=buf2[xyPos+1],b+=buf2[xyPos+2],realColors++),a+=pixelAlpha}}const pos=4*(i*wDst+j);bufDst[pos]=realColors?Math.round(r/realColors):0,bufDst[pos+1]=realColors?Math.round(g/realColors):0,bufDst[pos+2]=realColors?Math.round(b/realColors):0,bufDst[pos+3]=Math.round(a/m)}else dst.data=buf2},bicubicInterpolation(src,dst,options){return this._interpolate2D(src,dst,options,(function(x0,x1,x2,x3,t){const a0=x3-x2-x0+x1,a1=x0-x1-a0,a2=x2-x0,a3=x1;return Math.max(0,Math.min(255,a0*(t*t*t)+a1*(t*t)+a2*t+a3))}))},hermiteInterpolation(src,dst,options){return this._interpolate2D(src,dst,options,(function(x0,x1,x2,x3,t){const c0=x1,c1=.5*(x2-x0),c2=x0-2.5*x1+2*x2-.5*x3,c3=.5*(x3-x0)+1.5*(x1-x2);return Math.max(0,Math.min(255,Math.round(((c3*t+c2)*t+c1)*t+c0)))}))},bezierInterpolation(src,dst,options){return this._interpolate2D(src,dst,options,(function(x0,x1,x2,x3,t){const nt=1-t,c0=x1*nt*nt*nt,c1=3*(x1+(x2-x0)/4)*nt*nt*t,c2=3*(x2-(x3-x1)/4)*nt*t*t,c3=x2*t*t*t;return Math.max(0,Math.min(255,Math.round(c0+c1+c2+c3)))}))}},ResizeOptionsSchema=z.union([z.object({w:z.number().min(0),h:z.number().min(0).optional(),mode:z.nativeEnum(ResizeStrategy).optional()}),z.object({w:z.number().min(0).optional(),h:z.number().min(0),mode:z.nativeEnum(ResizeStrategy).optional()})]),ScaleToFitOptionsSchema=z.object({w:z.number().min(0),h:z.number().min(0),mode:z.nativeEnum(ResizeStrategy).optional()}),ScaleComplexOptionsSchema=z.object({f:z.number().min(0),mode:z.nativeEnum(ResizeStrategy).optional()}),methods={resize(image,options){const{mode:mode}=ResizeOptionsSchema.parse(options);let w,h;if("number"==typeof options.w)w=options.w,h=options.h??image.bitmap.height*(w/image.bitmap.width);else{if("number"!=typeof options.h)throw new Error("w must be a number");h=options.h,w=options.w??image.bitmap.width*(h/image.bitmap.height)}if(w=Math.round(w)||1,h=Math.round(h)||1,mode&&"function"==typeof operations[mode]){const dst={data:Buffer.alloc(w*h*4),width:w,height:h};operations[mode](image.bitmap,dst),image.bitmap=dst}else{const resize=new Resize(image.bitmap.width,image.bitmap.height,w,h,!0,!0,(buffer=>{image.bitmap.data=Buffer.from(buffer),image.bitmap.width=w,image.bitmap.height=h}));resize.resize(image.bitmap.data)}return image},scale(image,options){const{f:f,mode:mode}="number"==typeof options?{f:options}:ScaleComplexOptionsSchema.parse(options),w=image.bitmap.width*f,h=image.bitmap.height*f;return this.resize(image,{w:w,h:h,mode:mode})},scaleToFit(image,options){const{h:h,w:w,mode:mode}=ScaleToFitOptionsSchema.parse(options),f=w/h>image.bitmap.width/image.bitmap.height?h/image.bitmap.height:w/image.bitmap.width;return this.scale(image,{f:f,mode:mode})}},JIMP=createJimp({plugins:[methods],formats:[png]});async function resizeImage(filePath){let image=await JIMP.read(filePath);if(image.width>128||image.height>128){let width=128,height=128,ratio=image.width/image.height;ratio>1?height=128/ratio:ratio<1&&(width=128*ratio),image.resize({w:width,h:height})}await image.write(filePath)}async function alphaImage(filePath,allUVs){let image=await JIMP.read(filePath),width=image.width,height=image.height;for(let value of allUVs)await image.scan(value[0]*width,value[1]*height,value[2]*width,value[3]*height,((x,y,idx)=>{51<image.bitmap.data[idx+3]&&(image.bitmap.data[idx+3]=51)}));await image.write(filePath)}function resourceJsonGenerator(modelId,ysmJson,resourcePackPath,javaPackPath,variables){animationControllersGenerator(resourcePackPath,modelId);let playerFilesJson=ysmJson.files.player,guiAnimationName=ysmJson.properties.preview_animation;animationTransformGenerator(path.join(javaPackPath,playerFilesJson.animation.main),path.join(resourcePackPath,"animations",`${modelId}.main.animation.json`),modelId,guiAnimationName,variables);let extraAnimation=extraAnimationTransformGenerator(path.join(javaPackPath,playerFilesJson.animation.extra??"extra.json"),path.join(resourcePackPath,"animations",`${modelId}.extra.animation.json`),ysmJson,modelId,variables),entityFilePath=path.join(resourcePackPath,"entity",`${modelId}.entity.json`),defaultTexturePath=playerFilesJson.texture[0];"object"==typeof defaultTexturePath&&defaultTexturePath.uv&&(defaultTexturePath=defaultTexturePath.uv),entityJsonGenerator(entityFilePath,fixTextureName(pathToName(defaultTexturePath,!1)),modelId);let rawModelPath=path.join(javaPackPath,playerFilesJson.model.main),modelFilePath=path.join(resourcePackPath,"models","entity",`${modelId}.json`);entityModelGenerator(rawModelPath,modelFilePath,modelId),entityRenderGenerator(resourcePackPath,modelFilePath,modelId,path.join(javaPackPath,playerFilesJson.model.arm));for(let texturePath of playerFilesJson.texture){"object"==typeof texturePath&&texturePath.uv&&(texturePath=texturePath.uv);let name=fixTextureName(pathToName(texturePath,!0)),srcTexturePath=path.join(javaPackPath,texturePath),destTexturePath=path.join(resourcePackPath,"textures","entity",modelId,name);fs.copyFile(srcTexturePath,destTexturePath,(error=>{}))}if(ysmJson.metadata.authors)for(let authors of ysmJson.metadata.authors){let avatarPath=authors.avatar;if(!avatarPath)continue;let name=fixTextureName(pathToName(avatarPath,!0));handleAuthorAvatar(path.join(javaPackPath,avatarPath),path.join(resourcePackPath,"textures","ui",modelId,name)).then((ignore=>{}))}return extraAnimation}async function handleAuthorAvatar(srcAvatarPath,destAvatarPath){await fs$1.promises.copyFile(srcAvatarPath,destAvatarPath),await resizeImage(destAvatarPath)}function oldVersionRead(packDirectory){let packName=pathToName(packDirectory,!1),infoJson=path.join(packDirectory,"info.json"),mainJson=path.join(packDirectory,"main.json"),ysmExtraInfo={};if(fs.existsSync(infoJson))ysmExtraInfo=autoParseJSON(fs.readFileSync(infoJson,{encoding:"utf8"}),!0);else if(fs.existsSync(mainJson)){ysmExtraInfo=autoParseJSON(fs.readFileSync(mainJson,{encoding:"utf8"}),!0)["minecraft:geometry"][0].description.ysm_extra_info}ysmExtraInfo||(ysmExtraInfo={name:`${packName}`,tips:"",authors:["???"]});let ysmJson={spec:2,metadata:{name:"",tips:"",authors:[]},properties:{extra_animation:{}},files:{player:{model:{main:"main.json",arm:"arm.json"},animation:{main:"main.animation.json",extra:"extra.animation.json"},texture:[]}}},metadata=ysmJson.metadata,properties=ysmJson.properties,player=ysmJson.files.player;metadata.name=ysmExtraInfo.name??packName,metadata.tips=ysmExtraInfo.tips??"",ysmExtraInfo.authors&&ysmExtraInfo.authors.forEach((srcAuthor=>metadata.authors.push({name:srcAuthor})));let extraAnimations=properties.extra_animation;if(ysmExtraInfo.extra_animation_names){let index=0;ysmExtraInfo.extra_animation_names.forEach((name=>{extraAnimations[`extra${index}`]=name,index++}))}else for(let i=0;i<8;i++)extraAnimations[`extra${i}`]=`extra${i}`;let texture=player.texture;return fs.readdirSync(packDirectory).forEach((file=>{file.endsWith(".png")&&"arrow.png"!==file&&("default.png"===file?texture.unshift(file):texture.push(file))})),ysmJson}function handleUVTexture(value,allUVs){let x=value.uv[0],y=value.uv[1],w=value.uv_size[0],h=value.uv_size[1];w<0&&(x+=w,w=Math.abs(x)),h<0&&(y+=h,h=Math.abs(h)),allUVs.push([x,y,w,h])}function handleBoxTexture(uv,size,allUVs){let u=uv[0],v=uv[1],x=size[0],y=size[1],z=size[2];allUVs.push([u+z,v,2*x,z],[u,v+z,2*(x+z),y])}function handleCube(cube,allUVs){let size=cube.size,uv=cube.uv;size&&uv&&(Array.isArray(uv)?handleBoxTexture(uv,size,allUVs):"object"==typeof uv&&Object.values(uv).forEach((value=>handleUVTexture(value,allUVs))))}function alphaGlowTextureHandle(modelFilePath,texturePaths){let geometry=autoParseJSON(fs.readFileSync(modelFilePath,"utf-8"))["minecraft:geometry"][0],textureWidth=geometry.description.texture_width,textureHeight=geometry.description.texture_height,bones=geometry.bones,tmpAllUVs=[];bones.forEach((bone=>{bone.name.startsWith("ysmGlow")&&bone.cubes&&bone.cubes.forEach((cube=>handleCube(cube,tmpAllUVs)))}));let allUVs=[];tmpAllUVs.forEach((value=>{allUVs.push([value[0]/textureWidth,value[1]/textureHeight,value[2]/textureWidth,value[3]/textureHeight])})),texturePaths.forEach((texturePath=>{alphaImage(texturePath,allUVs).then((ignore=>{}))}))}var script={name:"java_to_netease_transform",props:{javaToNeteaseTransformDialog:{type:Object,required:!0}},data:()=>({javaPackPath:"",neteasePackPath:"",authorName:"",modelName:"",alphaGlowTexture:!1,variables:new Set,isOldVersion:!1}),methods:{selectJavaPack:function(){let packPaths=electron.dialog.showOpenDialogSync(currentwindow,{properties:["openDirectory"],title:"打开 Java 版模型文件夹"});if(packPaths&&packPaths[0]){let ysmFilePath=path.join(packPaths[0],"ysm.json"),infoJson=path.join(packPaths[0],"info.json"),mainJson=path.join(packPaths[0],"main.json");fs.existsSync(ysmFilePath)?(this.javaPackPath=packPaths[0],this.isOldVersion=!1):fs.existsSync(infoJson)||fs.existsSync(mainJson)?(this.javaPackPath=packPaths[0],this.isOldVersion=!0):electron.dialog.showErrorBox("提示","当前模型包内无 YSM 相关文件\n请检查是否选择错了文件夹！")}},selectNeteasePack:function(){let packPaths=electron.dialog.showOpenDialogSync(currentwindow,{properties:["openDirectory"],title:"选择导出路径"});packPaths&&packPaths[0]&&(this.neteasePackPath=packPaths[0])},checkInputArgs:function(){if(!this.javaPackPath)return electron.dialog.showErrorBox("警告","请选择 Java 版模型文件夹"),!1;if(!this.neteasePackPath)return electron.dialog.showErrorBox("警告","请选择导出文件夹"),!1;if(!this.authorName)return electron.dialog.showErrorBox("警告","请填写作者名"),!1;if(!this.modelName)return electron.dialog.showErrorBox("警告","请填写模型名"),!1;let nameReg=/^[\w.]+$/;return nameReg.test(this.authorName)?!!nameReg.test(this.modelName)||(electron.dialog.showErrorBox("警告","模型名不符合规范，必须为小写英文字符或下划线"),!1):(electron.dialog.showErrorBox("警告","作者名不符合规范，必须为小写英文字符或下划线"),!1)},getExistAnimations(resourcePackPath){let existAnimations=[],mainAnimationsPath=path.join(resourcePackPath,"animations");for(let file of fs.readdirSync(mainAnimationsPath)){let animationFile=fs.readFileSync(path.join(mainAnimationsPath,file),"utf-8"),animations=autoParseJSON(animationFile,!1).animations;animations&&(existAnimations=existAnimations.concat(Object.keys(animations)))}return existAnimations},getYsmJsonInfo(){if(this.isOldVersion)return oldVersionRead(this.javaPackPath);{let ysmJson,content=fs.readFileSync(path.join(this.javaPackPath,"ysm.json"),"utf-8");try{ysmJson=lib$2.parse(content)}catch(err){console.error(err),ysmJson=autoParseJSON(content,!0)}return ysmJson}},handleAlphaGlowTexture(resourcePackPath,modelId){let modelFilePath=path.join(resourcePackPath,"models","entity",modelId+".json"),textureFolderPath=path.join(resourcePackPath,"textures","entity",modelId),texturePaths=[];fs.readdirSync(textureFolderPath).forEach((file=>{file.endsWith(".png")&&texturePaths.push(path.join(textureFolderPath,file))})),alphaGlowTextureHandle(modelFilePath,texturePaths)},allPackGenerator:function(rootPath,modelId){let ysmJson=this.getYsmJsonInfo();if(!ysmJson)return!1;fs$1.mkdirSync(rootPath,{recursive:!0});let scriptsPath=behaviorPackGenerator(path.join(rootPath,"behavior_pack"),modelId),resourcePackPath=path.join(rootPath,"resource_pack");resourcePackGenerator(resourcePackPath,modelId);let extraAnimation=resourceJsonGenerator(modelId,ysmJson,resourcePackPath,this.javaPackPath,this.variables),existAnimations=this.getExistAnimations(resourcePackPath);return modConfigGenerator(path.join(scriptsPath,"modConfig.py"),ysmJson,modelId,this.variables,extraAnimation,existAnimations),this.alphaGlowTexture&&this.handleAlphaGlowTexture(resourcePackPath,modelId),!0},confirmTransform:function(){if(!this.checkInputArgs())return;let modelId=`${this.authorName}_${this.modelName}`,rootPath=path.join(this.neteasePackPath,modelId);this.allPackGenerator(rootPath,modelId)?(Blockbench.showQuickMessage(`转换完毕！\n在 ${this.neteasePackPath} 生成了导出后的文件`,3e3),this.javaToNeteaseTransformDialog.close()):Blockbench.notification("警告","源模型文件读取失败！")}}};function normalizeComponent(template,style,script,scopeId,isFunctionalTemplate,moduleIdentifier,shadowMode,createInjector,createInjectorSSR,createInjectorShadow){"boolean"!=typeof shadowMode&&(createInjectorSSR=createInjector,createInjector=shadowMode,shadowMode=!1);var hook,options="function"==typeof script?script.options:script;if(template&&template.render&&(options.render=template.render,options.staticRenderFns=template.staticRenderFns,options._compiled=!0,isFunctionalTemplate&&(options.functional=!0)),scopeId&&(options._scopeId=scopeId),moduleIdentifier?(hook=function(context){(context=context||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(context=__VUE_SSR_CONTEXT__),style&&style.call(this,createInjectorSSR(context)),context&&context._registeredComponents&&context._registeredComponents.add(moduleIdentifier)},options._ssrRegister=hook):style&&(hook=shadowMode?function(){style.call(this,createInjectorShadow(this.$root.$options.shadowRoot))}:function(context){style.call(this,createInjector(context))}),hook)if(options.functional){var originalRender=options.render;options.render=function(h,context){return hook.call(context),originalRender(h,context)}}else{var existing=options.beforeCreate;options.beforeCreate=existing?[].concat(existing,hook):[hook]}return script}var normalizeComponent_1=normalizeComponent,__vue_normalize__=getDefaultExportFromCjs(normalizeComponent_1),isOldIE="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function createInjector(context){return function(id,style){return addStyle(id,style)}}var HEAD=document.head||document.getElementsByTagName("head")[0],styles={};function addStyle(id,css){var group=isOldIE?css.media||"default":id,style=styles[group]||(styles[group]={ids:new Set,styles:[]});if(!style.ids.has(id)){style.ids.add(id);var code=css.source;if(css.map&&(code+="\n/*# sourceURL="+css.map.sources[0]+" */",code+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(css.map))))+" */"),style.element||(style.element=document.createElement("style"),style.element.type="text/css",css.media&&style.element.setAttribute("media",css.media),HEAD.appendChild(style.element)),"styleSheet"in style.element)style.styles.push(code),style.element.styleSheet.cssText=style.styles.filter(Boolean).join("\n");else{var index=style.ids.size-1,textNode=document.createTextNode(code),nodes=style.element.childNodes;nodes[index]&&style.element.removeChild(nodes[index]),nodes.length?style.element.insertBefore(textNode,nodes[index]):style.element.appendChild(textNode)}}}var browser=createInjector,__vue_create_injector__=getDefaultExportFromCjs(browser);const __vue_script_ysm_netease__=script;var __vue_render_ysm_netease__=function(){var _vm=this,_h=_vm.$createElement,_c=_vm._self._c||_h;return _c("div",[_c("div",{staticClass:"main-button-layout"},[_c("p",{staticClass:"main-button-title"},[_vm._v("Java 版模型包路径："+_vm._s(_vm.javaPackPath))]),_vm._v(" "),_c("button",{staticStyle:{width:"100%"},on:{click:_vm.selectJavaPack}},[_vm._v("选择 Java 版模型包")])]),_vm._v(" "),_c("div",{staticClass:"main-button-layout"},[_c("p",{staticClass:"main-button-title"},[_vm._v("导出路径："+_vm._s(_vm.neteasePackPath))]),_vm._v(" "),_c("button",{staticStyle:{width:"100%"},on:{click:_vm.selectNeteasePack}},[_vm._v("选择导出路径")])]),_vm._v(" "),_c("div",{staticClass:"main-button-layout"},[_c("p",{staticClass:"main-button-title"},[_vm._v("作者名：请用小写英文字符和下划线")]),_vm._v(" "),_c("input",{directives:[{name:"model",rawName:"v-model",value:_vm.authorName,expression:"authorName"}],staticClass:"main-input",domProps:{value:_vm.authorName},on:{input:function($event){$event.target.composing||(_vm.authorName=$event.target.value)}}})]),_vm._v(" "),_c("div",{staticClass:"main-button-layout"},[_c("p",{staticClass:"main-button-title"},[_vm._v("模型名：请用小写英文字符和下划线")]),_vm._v(" "),_c("input",{directives:[{name:"model",rawName:"v-model",value:_vm.modelName,expression:"modelName"}],staticClass:"main-input",domProps:{value:_vm.modelName},on:{input:function($event){$event.target.composing||(_vm.modelName=$event.target.value)}}})]),_vm._v(" "),_c("div",{staticClass:"main-button-layout",staticStyle:{display:"flex","align-items":"center"}},[_vm._m(0),_vm._v(" "),_c("input",{directives:[{name:"model",rawName:"v-model",value:_vm.alphaGlowTexture,expression:"alphaGlowTexture"}],staticClass:"checkbox",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(_vm.alphaGlowTexture)?_vm._i(_vm.alphaGlowTexture,null)>-1:_vm.alphaGlowTexture},on:{change:function($event){var $$a=_vm.alphaGlowTexture,$$el=$event.target,$$c=!!$$el.checked;if(Array.isArray($$a)){var $$i=_vm._i($$a,null);$$el.checked?$$i<0&&(_vm.alphaGlowTexture=$$a.concat([null])):$$i>-1&&(_vm.alphaGlowTexture=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}else _vm.alphaGlowTexture=$$c}}})]),_vm._v(" "),_c("div",{staticClass:"main-button-layout"},[_c("button",{staticStyle:{width:"100%"},on:{click:_vm.confirmTransform}},[_vm._v("确认转换")])])])},__vue_staticRenderFns__=[function(){var _h=this.$createElement,_c=this._self._c||_h;return _c("div",{staticStyle:{width:"80%"}},[_c("p",{staticClass:"main-button-title"},[this._v("是否处理成泛光贴图？")]),this._v(" "),_c("p",{staticClass:"main-button-desc"},[this._v("\n                插件将会把所有以 "),_c("code",[this._v("ysmGlow")]),this._v(" 开头的组所在的材质替换为 0.2 透明度的贴图，用于在游戏内制作泛光效果。"),_c("br"),this._v("\n                但是部分情况下可能会导致模型过于明亮！\n            ")])])}];__vue_render_ysm_netease__._withStripped=!0;const __vue_inject_styles__=function(inject){inject&&inject("data-v-7cb32ec8_0",{source:"\n.main-button-layout[data-v-7cb32ec8] {\r\n    width: 100%;\r\n    margin: 10px auto;\n}\n.main-button-title[data-v-7cb32ec8] {\r\n    width: 100%;\r\n    margin: 10px auto;\n}\n.main-button-desc[data-v-7cb32ec8] {\r\n    width: 100%;\r\n    margin: 10px auto;\r\n    font-size: small;\r\n    color: gray;\n}\n.main-input[data-v-7cb32ec8] {\r\n    width: 100%;\r\n    background-color: #1c2026;\r\n    border: #000006 solid 1px;\r\n    height: 30px;\n}\n.checkbox[data-v-7cb32ec8] {\r\n    width: 10%;\r\n    margin: 0 auto;\r\n    transform: scale(1.5);\n}\r\n",map:{version:3,sources:["E:\\PluginsDev\\YSM-NetEase-Plugins\\YSM-NetEase-Plugins\\src\\netease\\java_to_netease_transform.vue"],names:[],mappings:";AAuNA;IACA,WAAA;IACA,iBAAA;AACA;AAEA;IACA,WAAA;IACA,iBAAA;AACA;AAEA;IACA,WAAA;IACA,iBAAA;IACA,gBAAA;IACA,WAAA;AACA;AAEA;IACA,WAAA;IACA,yBAAA;IACA,yBAAA;IACA,YAAA;AACA;AAEA;IACA,UAAA;IACA,cAAA;IACA,qBAAA;AACA",file:"java_to_netease_transform.vue",sourcesContent:['<script>\r\nimport {join, join as pathJoin} from "path";\r\nimport {mkdirSync} from "fs";\r\nimport JSON5 from "json5";\r\nimport {behaviorPackGenerator, resourcePackGenerator} from "./directory_generator.js";\r\nimport {modConfigGenerator} from "./mod_config_generator.js";\r\nimport {resourceJsonGenerator} from "./resource_json_generator.js";\r\nimport {oldVersionRead} from "./old_version_read.js";\r\nimport {alphaGlowTextureHandle} from "./alpha_glow_texture_handle.js";\r\n\r\nexport default {\r\n    name: "java_to_netease_transform",\r\n    props: {\r\n        javaToNeteaseTransformDialog: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            javaPackPath: "",\r\n            neteasePackPath: "",\r\n            authorName: "",\r\n            modelName: "",\r\n            alphaGlowTexture: false,\r\n            variables: new Set(),\r\n            isOldVersion: false\r\n        };\r\n    },\r\n    methods: {\r\n        selectJavaPack: function () {\r\n            let packPaths = electron.dialog.showOpenDialogSync(currentwindow, {\r\n                properties: ["openDirectory"],\r\n                title: "打开 Java 版模型文件夹"\r\n            });\r\n            if (packPaths && packPaths[0]) {\r\n                let ysmFilePath = pathJoin(packPaths[0], "ysm.json");\r\n                let infoJson = join(packPaths[0], "info.json");\r\n                let mainJson = join(packPaths[0], "main.json");\r\n                if (fs.existsSync(ysmFilePath)) {\r\n                    // 检测是否有 ysm.json\r\n                    this.javaPackPath = packPaths[0];\r\n                    this.isOldVersion = false;\r\n                } else if (fs.existsSync(infoJson) || fs.existsSync(mainJson)) {\r\n                    // 检测是否有 info.json 或者 main.json\r\n                    this.javaPackPath = packPaths[0];\r\n                    this.isOldVersion = true;\r\n                } else {\r\n                    electron.dialog.showErrorBox("提示", "当前模型包内无 YSM 相关文件\\n请检查是否选择错了文件夹！");\r\n                }\r\n            }\r\n        },\r\n        selectNeteasePack: function () {\r\n            let packPaths = electron.dialog.showOpenDialogSync(currentwindow, {\r\n                properties: ["openDirectory"],\r\n                title: "选择导出路径"\r\n            });\r\n            if (packPaths && packPaths[0]) {\r\n                this.neteasePackPath = packPaths[0];\r\n            }\r\n        },\r\n        checkInputArgs: function () {\r\n            if (!this.javaPackPath) {\r\n                electron.dialog.showErrorBox("警告", "请选择 Java 版模型文件夹");\r\n                return false;\r\n            }\r\n            if (!this.neteasePackPath) {\r\n                electron.dialog.showErrorBox("警告", "请选择导出文件夹");\r\n                return false;\r\n            }\r\n            if (!this.authorName) {\r\n                electron.dialog.showErrorBox("警告", "请填写作者名");\r\n                return false;\r\n            }\r\n            if (!this.modelName) {\r\n                electron.dialog.showErrorBox("警告", "请填写模型名");\r\n                return false;\r\n            }\r\n            let nameReg = /^[\\w.]+$/;\r\n            if (!nameReg.test(this.authorName)) {\r\n                electron.dialog.showErrorBox("警告", "作者名不符合规范，必须为小写英文字符或下划线");\r\n                return false;\r\n            }\r\n            if (!nameReg.test(this.modelName)) {\r\n                electron.dialog.showErrorBox("警告", "模型名不符合规范，必须为小写英文字符或下划线");\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        getExistAnimations(resourcePackPath) {\r\n            let existAnimations = [];\r\n            let mainAnimationsPath = pathJoin(resourcePackPath, "animations");\r\n            for (let file of fs.readdirSync(mainAnimationsPath)) {\r\n                let animationFile = fs.readFileSync(pathJoin(mainAnimationsPath, file), "utf-8");\r\n                let animations = autoParseJSON(animationFile, false)["animations"];\r\n                if (animations) {\r\n                    existAnimations = existAnimations.concat(Object.keys(animations));\r\n                }\r\n            }\r\n            return existAnimations;\r\n        },\r\n        getYsmJsonInfo() {\r\n            if (this.isOldVersion) {\r\n                return oldVersionRead(this.javaPackPath);\r\n            } else {\r\n                let content = fs.readFileSync(pathJoin(this.javaPackPath, "ysm.json"), "utf-8");\r\n                let ysmJson;\r\n                try {\r\n                    // 因为 BlockBench 自带的 JSON 解析存在 bug，换用 json5 读取\r\n                    ysmJson = JSON5.parse(content);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    // 但是 json5 库没法弹窗报错，所以再用 BlockBench 读取一次，弹窗报错\r\n                    ysmJson = autoParseJSON(content, true);\r\n                }\r\n                return ysmJson;\r\n            }\r\n        },\r\n        handleAlphaGlowTexture(resourcePackPath, modelId) {\r\n            let modelFilePath = pathJoin(resourcePackPath, "models", "entity", modelId + ".json");\r\n            let textureFolderPath = pathJoin(resourcePackPath, "textures", "entity", modelId);\r\n            let texturePaths = [];\r\n            fs.readdirSync(textureFolderPath).forEach(file => {\r\n                if (file.endsWith(".png")) {\r\n                    texturePaths.push(pathJoin(textureFolderPath, file));\r\n                }\r\n            });\r\n            alphaGlowTextureHandle(modelFilePath, texturePaths);\r\n        },\r\n        allPackGenerator: function (rootPath, modelId) {\r\n            // 读取 ysm.json 文件，获取信息\r\n            let ysmJson = this.getYsmJsonInfo();\r\n            // 有可能有人写错了定义文件导致读取失败，故需要判断\r\n            if (!ysmJson) {\r\n                return false;\r\n            }\r\n            // 生成根文件夹\r\n            mkdirSync(rootPath, {recursive: true});\r\n            // 行为包生成\r\n            let behaviorPackPath = pathJoin(rootPath, "behavior_pack");\r\n            let scriptsPath = behaviorPackGenerator(behaviorPackPath, modelId);\r\n            // 资源包生成\r\n            let resourcePackPath = pathJoin(rootPath, "resource_pack");\r\n            resourcePackGenerator(resourcePackPath, modelId);\r\n            // 生成资源\r\n            let extraAnimation = resourceJsonGenerator(modelId, ysmJson, resourcePackPath, this.javaPackPath, this.variables);\r\n            // 获取现有动画列表，用于后续脚本动画的自动补全\r\n            let existAnimations = this.getExistAnimations(resourcePackPath);\r\n            // 生成脚本\r\n            modConfigGenerator(pathJoin(scriptsPath, "modConfig.py"), ysmJson, modelId, this.variables, extraAnimation, existAnimations);\r\n            // 处理泛光贴图\r\n            if (this.alphaGlowTexture) {\r\n                this.handleAlphaGlowTexture(resourcePackPath, modelId);\r\n            }\r\n            return true;\r\n        },\r\n        confirmTransform: function () {\r\n            // 检查输入参数，有问题不进行后续处理\r\n            if (!this.checkInputArgs()) {\r\n                return;\r\n            }\r\n            // 通过输入参数确定模型 ID\r\n            let modelId = `${this.authorName}_${this.modelName}`;\r\n            // 创建根文件夹\r\n            let rootPath = pathJoin(this.neteasePackPath, modelId);\r\n            // 生成所有的文件\r\n            let result = this.allPackGenerator(rootPath, modelId);\r\n            if (result) {\r\n                // 成功后才给提示\r\n                Blockbench.showQuickMessage(`转换完毕！\\n在 ${this.neteasePackPath} 生成了导出后的文件`, 3000);\r\n                // 关闭窗口\r\n                this.javaToNeteaseTransformDialog.close();\r\n            } else {\r\n                Blockbench.notification("警告", "源模型文件读取失败！");\r\n            }\r\n        },\r\n    }\r\n};\r\n<\/script>\r\n\r\n<template>\r\n    <div>\r\n        <div class="main-button-layout">\r\n            <p class="main-button-title">Java 版模型包路径：{{ javaPackPath }}</p>\r\n            <button @click="selectJavaPack" style="width: 100%">选择 Java 版模型包</button>\r\n        </div>\r\n        <div class="main-button-layout">\r\n            <p class="main-button-title">导出路径：{{ neteasePackPath }}</p>\r\n            <button @click="selectNeteasePack" style="width: 100%">选择导出路径</button>\r\n        </div>\r\n        <div class="main-button-layout">\r\n            <p class="main-button-title">作者名：请用小写英文字符和下划线</p>\r\n            <input class="main-input" v-model="authorName"/>\r\n        </div>\r\n        <div class="main-button-layout">\r\n            <p class="main-button-title">模型名：请用小写英文字符和下划线</p>\r\n            <input class="main-input" v-model="modelName"/>\r\n        </div>\r\n        <div class="main-button-layout" style="display: flex; align-items: center;">\r\n            <div style="width: 80%">\r\n                <p class="main-button-title">是否处理成泛光贴图？</p>\r\n                <p class="main-button-desc">\r\n                    插件将会把所有以 <code>ysmGlow</code> 开头的组所在的材质替换为 0.2 透明度的贴图，用于在游戏内制作泛光效果。<br>\r\n                    但是部分情况下可能会导致模型过于明亮！\r\n                </p>\r\n            </div>\r\n            <input class="checkbox" type="checkbox" v-model="alphaGlowTexture"/>\r\n        </div>\r\n        <div class="main-button-layout">\r\n            <button style="width: 100%" @click="confirmTransform">确认转换</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.main-button-layout {\r\n    width: 100%;\r\n    margin: 10px auto;\r\n}\r\n\r\n.main-button-title {\r\n    width: 100%;\r\n    margin: 10px auto;\r\n}\r\n\r\n.main-button-desc {\r\n    width: 100%;\r\n    margin: 10px auto;\r\n    font-size: small;\r\n    color: gray;\r\n}\r\n\r\n.main-input {\r\n    width: 100%;\r\n    background-color: #1c2026;\r\n    border: #000006 solid 1px;\r\n    height: 30px;\r\n}\r\n\r\n.checkbox {\r\n    width: 10%;\r\n    margin: 0 auto;\r\n    transform: scale(1.5);\r\n}\r\n</style>']},media:void 0})},__vue_scope_id__="data-v-7cb32ec8",__vue_module_identifier__=void 0,__vue_is_functional_template__=!1,__vue_component_ysm_netease__=__vue_normalize__({render:__vue_render_ysm_netease__,staticRenderFns:__vue_staticRenderFns__},__vue_inject_styles__,__vue_script_ysm_netease__,__vue_scope_id__,__vue_is_functional_template__,__vue_module_identifier__,!1,__vue_create_injector__,void 0,void 0);var javaToNeteaseTransformAction=new Action("ysm_netease_utils.java_to_netease_transform",{name:"转换模型到中国版",icon:"fa-file-alt",click:function(){let javaToNeteaseTransformDialog=new Dialog({title:"转换模型到中国版",singleButton:!0,component:{data:()=>({javaToNeteaseTransformDialog:javaToNeteaseTransformDialog}),components:{javaToNeteaseTransformVue:__vue_component_ysm_netease__},template:"<javaToNeteaseTransformVue :javaToNeteaseTransformDialog='javaToNeteaseTransformDialog'/>"}});javaToNeteaseTransformDialog.show()}});BBPlugin.register(PACKAGE.name,{title:PACKAGE.title,author:PACKAGE.author,description:PACKAGE.description,about:aboutHtml,icon:"card_membership",variant:"desktop",version:PACKAGE.version,min_version:PACKAGE.min_blockbench_version,tags:["Netease Minecraft","Yes Steve Model","Mod"],await_loading:!0,onload(){Language.addTranslations("en",{"menu.ysm_netease_utils":"YSM中国版"}),new BarMenu("ysm_netease_utils",["ysm_netease_utils.java_to_netease_transform"]),MenuBar.update()},onunload(){javaToNeteaseTransformAction.delete()},oninstall(){},onuninstall(){}});
